Search.setIndex({"docnames": ["api", "generated/norse", "generated/norse.benchmark", "generated/norse.benchmark.benchmark", "generated/norse.benchmark.main", "generated/norse.benchmark.norse_lif", "generated/norse.benchmark.plot", "generated/norse.dataset", "generated/norse.dataset.memory", "generated/norse.dataset.spiking_heidelberg", "generated/norse.task", "generated/norse.task.cifar10", "generated/norse.task.correlation_experiment", "generated/norse.task.memory", "generated/norse.task.mnist", "generated/norse.task.mnist_pl", "generated/norse.torch", "generated/norse.torch.functional", "generated/norse.torch.functional.LIFFeedForwardState", "generated/norse.torch.functional.LIFParameters", "generated/norse.torch.functional.LIFRefracFeedForwardState", "generated/norse.torch.functional.LIFRefracParameters", "generated/norse.torch.functional.LSNNFeedForwardState", "generated/norse.torch.functional.LSNNParameters", "generated/norse.torch.functional.STDPSensorParameters", "generated/norse.torch.functional.STDPSensorState", "generated/norse.torch.functional.TsodyksMakramParameters", "generated/norse.torch.functional.TsodyksMakramState", "generated/norse.torch.functional.adjoint", "generated/norse.torch.functional.adjoint.lif_adjoint", "generated/norse.torch.functional.adjoint.lif_mc_adjoint", "generated/norse.torch.functional.adjoint.lif_mc_refrac_adjoint", "generated/norse.torch.functional.adjoint.lif_refrac_adjoint", "generated/norse.torch.functional.adjoint.lsnn_adjoint", "generated/norse.torch.functional.adjoint.test", "generated/norse.torch.functional.adjoint.test.test_lif_adjoint", "generated/norse.torch.functional.adjoint.test.test_lif_refrac_adjoint", "generated/norse.torch.functional.adjoint.test.test_lsnn_adjoint", "generated/norse.torch.functional.circ_dist_fn", "generated/norse.torch.functional.coba_lif", "generated/norse.torch.functional.coba_lif.CobaLIFFeedForwardState", "generated/norse.torch.functional.coba_lif.CobaLIFParameters", "generated/norse.torch.functional.coba_lif.coba_lif_feed_forward_step", "generated/norse.torch.functional.constant_current_lif_encode", "generated/norse.torch.functional.correlation_sensor", "generated/norse.torch.functional.decode", "generated/norse.torch.functional.encode", "generated/norse.torch.functional.euclidean_distance", "generated/norse.torch.functional.filter", "generated/norse.torch.functional.gaussian_rbf", "generated/norse.torch.functional.heavi_circ_fn", "generated/norse.torch.functional.heavi_erfc_fn", "generated/norse.torch.functional.heavi_tanh_fn", "generated/norse.torch.functional.heaviside", "generated/norse.torch.functional.iaf", "generated/norse.torch.functional.iaf.IAFFeedForwardState", "generated/norse.torch.functional.iaf.IAFParameters", "generated/norse.torch.functional.iaf.iaf_feed_forward_step", "generated/norse.torch.functional.izhikevich", "generated/norse.torch.functional.izhikevich.IzhikevichParameters", "generated/norse.torch.functional.izhikevich.IzhikevichSpikingBehavior", "generated/norse.torch.functional.izhikevich.accomodation", "generated/norse.torch.functional.izhikevich.bistability", "generated/norse.torch.functional.izhikevich.class_1_exc", "generated/norse.torch.functional.izhikevich.class_2_exc", "generated/norse.torch.functional.izhikevich.dap", "generated/norse.torch.functional.izhikevich.inhibition_induced_bursting", "generated/norse.torch.functional.izhikevich.inhibition_induced_spiking", "generated/norse.torch.functional.izhikevich.integrator", "generated/norse.torch.functional.izhikevich.izhikevich_feed_forward_step", "generated/norse.torch.functional.izhikevich.mixed_mode", "generated/norse.torch.functional.izhikevich.phasic_bursting", "generated/norse.torch.functional.izhikevich.phasic_spiking", "generated/norse.torch.functional.izhikevich.rebound_burst", "generated/norse.torch.functional.izhikevich.rebound_spike", "generated/norse.torch.functional.izhikevich.resonator", "generated/norse.torch.functional.izhikevich.spike_frequency_adaptation", "generated/norse.torch.functional.izhikevich.spike_latency", "generated/norse.torch.functional.izhikevich.subthreshold_oscillation", "generated/norse.torch.functional.izhikevich.tonic_bursting", "generated/norse.torch.functional.izhikevich.tonic_spiking", "generated/norse.torch.functional.leaky_integrator", "generated/norse.torch.functional.leaky_integrator.LIParameters", "generated/norse.torch.functional.leaky_integrator.LIState", "generated/norse.torch.functional.leaky_integrator.li_feed_forward_step", "generated/norse.torch.functional.leaky_integrator_box", "generated/norse.torch.functional.lif", "generated/norse.torch.functional.lif_adex", "generated/norse.torch.functional.lif_adex.LIFAdExFeedForwardState", "generated/norse.torch.functional.lif_adex.LIFAdExParameters", "generated/norse.torch.functional.lif_adex.lif_adex_current_encoder", "generated/norse.torch.functional.lif_adex.lif_adex_feed_forward_step", "generated/norse.torch.functional.lif_adex_current_encoder", "generated/norse.torch.functional.lif_adex_refrac", "generated/norse.torch.functional.lif_box", "generated/norse.torch.functional.lif_box.LIFBoxFeedForwardState", "generated/norse.torch.functional.lif_box.LIFBoxParameters", "generated/norse.torch.functional.lif_box.lif_box_feed_forward_step", "generated/norse.torch.functional.lif_correlation", "generated/norse.torch.functional.lif_current_encoder", "generated/norse.torch.functional.lif_ex", "generated/norse.torch.functional.lif_ex.LIFExFeedForwardState", "generated/norse.torch.functional.lif_ex.LIFExParameters", "generated/norse.torch.functional.lif_ex.lif_ex_current_encoder", "generated/norse.torch.functional.lif_ex.lif_ex_feed_forward_step", "generated/norse.torch.functional.lif_ex_current_encoder", "generated/norse.torch.functional.lif_feed_forward_adjoint_step", "generated/norse.torch.functional.lif_feed_forward_adjoint_step_sparse", "generated/norse.torch.functional.lif_feed_forward_step", "generated/norse.torch.functional.lif_mc", "generated/norse.torch.functional.lif_mc_feed_forward_step", "generated/norse.torch.functional.lif_mc_refrac", "generated/norse.torch.functional.lif_mc_refrac_feed_forward_step", "generated/norse.torch.functional.lif_refrac", "generated/norse.torch.functional.lif_refrac_feed_forward_adjoint_step", "generated/norse.torch.functional.lif_refrac_feed_forward_step", "generated/norse.torch.functional.lift", "generated/norse.torch.functional.logical", "generated/norse.torch.functional.logical.logical_and", "generated/norse.torch.functional.logical.logical_or", "generated/norse.torch.functional.logical.logical_xor", "generated/norse.torch.functional.logical.muller_c", "generated/norse.torch.functional.logical.posedge_detector", "generated/norse.torch.functional.logistic_fn", "generated/norse.torch.functional.lsnn", "generated/norse.torch.functional.lsnn_feed_forward_adjoint_step", "generated/norse.torch.functional.lsnn_feed_forward_step", "generated/norse.torch.functional.poisson_encode", "generated/norse.torch.functional.poisson_encode_step", "generated/norse.torch.functional.population_encode", "generated/norse.torch.functional.receptive_field", "generated/norse.torch.functional.receptive_field.gaussian_kernel", "generated/norse.torch.functional.receptive_field.spatial_receptive_field", "generated/norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives", "generated/norse.torch.functional.receptive_field.temporal_scale_distribution", "generated/norse.torch.functional.regularization", "generated/norse.torch.functional.regularization.regularize_step", "generated/norse.torch.functional.regularization.spike_accumulator", "generated/norse.torch.functional.regularization.voltage_accumulator", "generated/norse.torch.functional.signed_poisson_encode", "generated/norse.torch.functional.signed_poisson_encode_step", "generated/norse.torch.functional.spike_latency_encode", "generated/norse.torch.functional.spike_latency_lif_encode", "generated/norse.torch.functional.spikes_to_times_decoder", "generated/norse.torch.functional.stdp", "generated/norse.torch.functional.stdp_sensor", "generated/norse.torch.functional.stdp_sensor_step", "generated/norse.torch.functional.stp_step", "generated/norse.torch.functional.super_fn", "generated/norse.torch.functional.superspike", "generated/norse.torch.functional.test", "generated/norse.torch.functional.test.test_coba_lif", "generated/norse.torch.functional.test.test_decode", "generated/norse.torch.functional.test.test_encode", "generated/norse.torch.functional.test.test_exp_filter", "generated/norse.torch.functional.test.test_heaviside", "generated/norse.torch.functional.test.test_iaf", "generated/norse.torch.functional.test.test_izhikevich", "generated/norse.torch.functional.test.test_leaky_integrator", "generated/norse.torch.functional.test.test_leaky_integrator_box", "generated/norse.torch.functional.test.test_lif", "generated/norse.torch.functional.test.test_lif_adex", "generated/norse.torch.functional.test.test_lif_adex_refrac", "generated/norse.torch.functional.test.test_lif_box", "generated/norse.torch.functional.test.test_lif_ex", "generated/norse.torch.functional.test.test_lif_mc", "generated/norse.torch.functional.test.test_lif_mc_refrac", "generated/norse.torch.functional.test.test_lif_refrac", "generated/norse.torch.functional.test.test_lift", "generated/norse.torch.functional.test.test_logical", "generated/norse.torch.functional.test.test_lsnn", "generated/norse.torch.functional.test.test_receptive_field", "generated/norse.torch.functional.test.test_regularization", "generated/norse.torch.functional.test.test_spikes_to_times_decoder", "generated/norse.torch.functional.test.test_stdp", "generated/norse.torch.functional.test.test_stdp_sensor", "generated/norse.torch.functional.test.test_superspike", "generated/norse.torch.functional.test.test_threshold", "generated/norse.torch.functional.test.test_tsodyks_makram", "generated/norse.torch.functional.threshold", "generated/norse.torch.functional.triangle_fn", "generated/norse.torch.functional.tsodyks_makram", "generated/norse.torch.models", "generated/norse.torch.models.conv", "generated/norse.torch.models.mobilenet", "generated/norse.torch.models.test", "generated/norse.torch.models.test.test_conv", "generated/norse.torch.models.test.test_mobilenet", "generated/norse.torch.models.test.test_vgg", "generated/norse.torch.models.vgg", "generated/norse.torch.module", "generated/norse.torch.module.Lift", "generated/norse.torch.module.RegularizationCell", "generated/norse.torch.module.SequentialState", "generated/norse.torch.module.coba_lif", "generated/norse.torch.module.coba_lif.CobaLIFCell", "generated/norse.torch.module.conv", "generated/norse.torch.module.conv.LConv2d", "generated/norse.torch.module.encode", "generated/norse.torch.module.encode.ConstantCurrentLIFEncoder", "generated/norse.torch.module.encode.PoissonEncoder", "generated/norse.torch.module.encode.PoissonEncoderStep", "generated/norse.torch.module.encode.PopulationEncoder", "generated/norse.torch.module.encode.SignedPoissonEncoder", "generated/norse.torch.module.encode.SpikeLatencyEncoder", "generated/norse.torch.module.encode.SpikeLatencyLIFEncoder", "generated/norse.torch.module.exp_filter", "generated/norse.torch.module.iaf", "generated/norse.torch.module.iaf.IAFCell", "generated/norse.torch.module.iaf.IAFFeedForwardState", "generated/norse.torch.module.iaf.IAFParameters", "generated/norse.torch.module.izhikevich", "generated/norse.torch.module.izhikevich.Izhikevich", "generated/norse.torch.module.izhikevich.IzhikevichCell", "generated/norse.torch.module.izhikevich.IzhikevichRecurrent", "generated/norse.torch.module.izhikevich.IzhikevichRecurrentCell", "generated/norse.torch.module.izhikevich.IzhikevichSpikingBehavior", "generated/norse.torch.module.izhikevich.IzhikevichState", "generated/norse.torch.module.leaky_integrator", "generated/norse.torch.module.leaky_integrator.LI", "generated/norse.torch.module.leaky_integrator.LICell", "generated/norse.torch.module.leaky_integrator.LILinearCell", "generated/norse.torch.module.leaky_integrator.LIParameters", "generated/norse.torch.module.leaky_integrator.LIState", "generated/norse.torch.module.leaky_integrator_box", "generated/norse.torch.module.lif", "generated/norse.torch.module.lif.LIF", "generated/norse.torch.module.lif.LIFCell", "generated/norse.torch.module.lif.LIFParameters", "generated/norse.torch.module.lif.LIFRecurrent", "generated/norse.torch.module.lif.LIFRecurrentCell", "generated/norse.torch.module.lif.LIFState", "generated/norse.torch.module.lif_adex", "generated/norse.torch.module.lif_adex.LIFAdEx", "generated/norse.torch.module.lif_adex.LIFAdExCell", "generated/norse.torch.module.lif_adex.LIFAdExRecurrent", "generated/norse.torch.module.lif_adex.LIFAdExRecurrentCell", "generated/norse.torch.module.lif_adex_refrac", "generated/norse.torch.module.lif_box", "generated/norse.torch.module.lif_box.LIFBoxCell", "generated/norse.torch.module.lif_box.LIFBoxFeedForwardState", "generated/norse.torch.module.lif_box.LIFBoxParameters", "generated/norse.torch.module.lif_correlation", "generated/norse.torch.module.lif_ex", "generated/norse.torch.module.lif_ex.LIFEx", "generated/norse.torch.module.lif_ex.LIFExCell", "generated/norse.torch.module.lif_ex.LIFExRecurrent", "generated/norse.torch.module.lif_ex.LIFExRecurrentCell", "generated/norse.torch.module.lif_mc", "generated/norse.torch.module.lif_mc.LIFMCRecurrentCell", "generated/norse.torch.module.lif_mc_refrac", "generated/norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell", "generated/norse.torch.module.lif_refrac", "generated/norse.torch.module.lif_refrac.LIFRefracCell", "generated/norse.torch.module.lif_refrac.LIFRefracRecurrentCell", "generated/norse.torch.module.lift", "generated/norse.torch.module.lsnn", "generated/norse.torch.module.lsnn.LSNN", "generated/norse.torch.module.lsnn.LSNNCell", "generated/norse.torch.module.lsnn.LSNNRecurrent", "generated/norse.torch.module.lsnn.LSNNRecurrentCell", "generated/norse.torch.module.receptive_field", "generated/norse.torch.module.receptive_field.SpatialReceptiveField2d", "generated/norse.torch.module.receptive_field.TemporalReceptiveField", "generated/norse.torch.module.regularization", "generated/norse.torch.module.sequential", "generated/norse.torch.module.snn", "generated/norse.torch.module.spikes_to_times_decoder", "generated/norse.torch.module.test", "generated/norse.torch.module.test.test_coba", "generated/norse.torch.module.test.test_conv", "generated/norse.torch.module.test.test_encode", "generated/norse.torch.module.test.test_exp_filter", "generated/norse.torch.module.test.test_iaf", "generated/norse.torch.module.test.test_izhikevich", "generated/norse.torch.module.test.test_leaky_integrator", "generated/norse.torch.module.test.test_leaky_integrator_box", "generated/norse.torch.module.test.test_lif", "generated/norse.torch.module.test.test_lif_adex", "generated/norse.torch.module.test.test_lif_adex_refrac", "generated/norse.torch.module.test.test_lif_box", "generated/norse.torch.module.test.test_lif_correlation", "generated/norse.torch.module.test.test_lif_ex", "generated/norse.torch.module.test.test_lif_mc", "generated/norse.torch.module.test.test_lif_mc_refrac", "generated/norse.torch.module.test.test_lif_refrac", "generated/norse.torch.module.test.test_lift", "generated/norse.torch.module.test.test_lsnn", "generated/norse.torch.module.test.test_receptive_field", "generated/norse.torch.module.test.test_regularization", "generated/norse.torch.module.test.test_sequential", "generated/norse.torch.module.test.test_snn", "generated/norse.torch.module.test.test_spikes_to_times_decoder", "generated/norse.torch.module.test.test_training", "generated/norse.torch.utils", "generated/norse.torch.utils.export_nir", "generated/norse.torch.utils.import_nir", "generated/norse.torch.utils.plot", "generated/norse.torch.utils.plot.plot", "generated/norse.torch.utils.plot.plot_heatmap_2d", "generated/norse.torch.utils.plot.plot_heatmap_3d", "generated/norse.torch.utils.plot.plot_histogram_2d", "generated/norse.torch.utils.plot.plot_izhikevich", "generated/norse.torch.utils.plot.plot_neuron_states", "generated/norse.torch.utils.plot.plot_scatter_3d", "generated/norse.torch.utils.plot.plot_spikes_2d", "generated/norse.torch.utils.pytree", "generated/norse.torch.utils.tensorboard", "generated/norse.torch.utils.tensorboard.hook_spike_activity_mean", "generated/norse.torch.utils.tensorboard.hook_spike_activity_sum", "generated/norse.torch.utils.tensorboard.hook_spike_histogram_mean", "generated/norse.torch.utils.tensorboard.hook_spike_histogram_sum", "generated/norse.torch.utils.tensorboard.hook_spike_image", "generated/norse.torch.utils.tensorboard.tensorboard", "generated/norse.torch.utils.test", "generated/norse.torch.utils.test.test_nir_export", "generated/norse.torch.utils.test.test_nir_import", "generated/norse.torch.utils.test.test_tensorboard", "generated/norse.utils", "index", "norse.torch", "norse.torch.functional", "norse.torch.utils", "pages/about", "pages/development", "pages/hardware", "pages/installing", "pages/papers", "pages/parameters", "pages/spiking", "pages/started", "pages/tasks", "pages/working"], "filenames": ["api.rst", "generated/norse.rst", "generated/norse.benchmark.rst", "generated/norse.benchmark.benchmark.rst", "generated/norse.benchmark.main.rst", "generated/norse.benchmark.norse_lif.rst", "generated/norse.benchmark.plot.rst", "generated/norse.dataset.rst", "generated/norse.dataset.memory.rst", "generated/norse.dataset.spiking_heidelberg.rst", "generated/norse.task.rst", "generated/norse.task.cifar10.rst", "generated/norse.task.correlation_experiment.rst", "generated/norse.task.memory.rst", "generated/norse.task.mnist.rst", "generated/norse.task.mnist_pl.rst", "generated/norse.torch.rst", "generated/norse.torch.functional.rst", "generated/norse.torch.functional.LIFFeedForwardState.rst", "generated/norse.torch.functional.LIFParameters.rst", "generated/norse.torch.functional.LIFRefracFeedForwardState.rst", "generated/norse.torch.functional.LIFRefracParameters.rst", "generated/norse.torch.functional.LSNNFeedForwardState.rst", "generated/norse.torch.functional.LSNNParameters.rst", "generated/norse.torch.functional.STDPSensorParameters.rst", "generated/norse.torch.functional.STDPSensorState.rst", "generated/norse.torch.functional.TsodyksMakramParameters.rst", "generated/norse.torch.functional.TsodyksMakramState.rst", "generated/norse.torch.functional.adjoint.rst", "generated/norse.torch.functional.adjoint.lif_adjoint.rst", "generated/norse.torch.functional.adjoint.lif_mc_adjoint.rst", "generated/norse.torch.functional.adjoint.lif_mc_refrac_adjoint.rst", "generated/norse.torch.functional.adjoint.lif_refrac_adjoint.rst", "generated/norse.torch.functional.adjoint.lsnn_adjoint.rst", "generated/norse.torch.functional.adjoint.test.rst", "generated/norse.torch.functional.adjoint.test.test_lif_adjoint.rst", "generated/norse.torch.functional.adjoint.test.test_lif_refrac_adjoint.rst", "generated/norse.torch.functional.adjoint.test.test_lsnn_adjoint.rst", "generated/norse.torch.functional.circ_dist_fn.rst", "generated/norse.torch.functional.coba_lif.rst", "generated/norse.torch.functional.coba_lif.CobaLIFFeedForwardState.rst", "generated/norse.torch.functional.coba_lif.CobaLIFParameters.rst", "generated/norse.torch.functional.coba_lif.coba_lif_feed_forward_step.rst", "generated/norse.torch.functional.constant_current_lif_encode.rst", "generated/norse.torch.functional.correlation_sensor.rst", "generated/norse.torch.functional.decode.rst", "generated/norse.torch.functional.encode.rst", "generated/norse.torch.functional.euclidean_distance.rst", "generated/norse.torch.functional.filter.rst", "generated/norse.torch.functional.gaussian_rbf.rst", "generated/norse.torch.functional.heavi_circ_fn.rst", "generated/norse.torch.functional.heavi_erfc_fn.rst", "generated/norse.torch.functional.heavi_tanh_fn.rst", "generated/norse.torch.functional.heaviside.rst", "generated/norse.torch.functional.iaf.rst", "generated/norse.torch.functional.iaf.IAFFeedForwardState.rst", "generated/norse.torch.functional.iaf.IAFParameters.rst", "generated/norse.torch.functional.iaf.iaf_feed_forward_step.rst", "generated/norse.torch.functional.izhikevich.rst", "generated/norse.torch.functional.izhikevich.IzhikevichParameters.rst", "generated/norse.torch.functional.izhikevich.IzhikevichSpikingBehavior.rst", "generated/norse.torch.functional.izhikevich.accomodation.rst", "generated/norse.torch.functional.izhikevich.bistability.rst", "generated/norse.torch.functional.izhikevich.class_1_exc.rst", "generated/norse.torch.functional.izhikevich.class_2_exc.rst", "generated/norse.torch.functional.izhikevich.dap.rst", "generated/norse.torch.functional.izhikevich.inhibition_induced_bursting.rst", "generated/norse.torch.functional.izhikevich.inhibition_induced_spiking.rst", "generated/norse.torch.functional.izhikevich.integrator.rst", "generated/norse.torch.functional.izhikevich.izhikevich_feed_forward_step.rst", "generated/norse.torch.functional.izhikevich.mixed_mode.rst", "generated/norse.torch.functional.izhikevich.phasic_bursting.rst", "generated/norse.torch.functional.izhikevich.phasic_spiking.rst", "generated/norse.torch.functional.izhikevich.rebound_burst.rst", "generated/norse.torch.functional.izhikevich.rebound_spike.rst", "generated/norse.torch.functional.izhikevich.resonator.rst", "generated/norse.torch.functional.izhikevich.spike_frequency_adaptation.rst", "generated/norse.torch.functional.izhikevich.spike_latency.rst", "generated/norse.torch.functional.izhikevich.subthreshold_oscillation.rst", "generated/norse.torch.functional.izhikevich.tonic_bursting.rst", "generated/norse.torch.functional.izhikevich.tonic_spiking.rst", "generated/norse.torch.functional.leaky_integrator.rst", "generated/norse.torch.functional.leaky_integrator.LIParameters.rst", "generated/norse.torch.functional.leaky_integrator.LIState.rst", "generated/norse.torch.functional.leaky_integrator.li_feed_forward_step.rst", "generated/norse.torch.functional.leaky_integrator_box.rst", "generated/norse.torch.functional.lif.rst", "generated/norse.torch.functional.lif_adex.rst", "generated/norse.torch.functional.lif_adex.LIFAdExFeedForwardState.rst", "generated/norse.torch.functional.lif_adex.LIFAdExParameters.rst", "generated/norse.torch.functional.lif_adex.lif_adex_current_encoder.rst", "generated/norse.torch.functional.lif_adex.lif_adex_feed_forward_step.rst", "generated/norse.torch.functional.lif_adex_current_encoder.rst", "generated/norse.torch.functional.lif_adex_refrac.rst", "generated/norse.torch.functional.lif_box.rst", "generated/norse.torch.functional.lif_box.LIFBoxFeedForwardState.rst", "generated/norse.torch.functional.lif_box.LIFBoxParameters.rst", "generated/norse.torch.functional.lif_box.lif_box_feed_forward_step.rst", "generated/norse.torch.functional.lif_correlation.rst", "generated/norse.torch.functional.lif_current_encoder.rst", "generated/norse.torch.functional.lif_ex.rst", "generated/norse.torch.functional.lif_ex.LIFExFeedForwardState.rst", "generated/norse.torch.functional.lif_ex.LIFExParameters.rst", "generated/norse.torch.functional.lif_ex.lif_ex_current_encoder.rst", "generated/norse.torch.functional.lif_ex.lif_ex_feed_forward_step.rst", "generated/norse.torch.functional.lif_ex_current_encoder.rst", "generated/norse.torch.functional.lif_feed_forward_adjoint_step.rst", "generated/norse.torch.functional.lif_feed_forward_adjoint_step_sparse.rst", "generated/norse.torch.functional.lif_feed_forward_step.rst", "generated/norse.torch.functional.lif_mc.rst", "generated/norse.torch.functional.lif_mc_feed_forward_step.rst", "generated/norse.torch.functional.lif_mc_refrac.rst", "generated/norse.torch.functional.lif_mc_refrac_feed_forward_step.rst", "generated/norse.torch.functional.lif_refrac.rst", "generated/norse.torch.functional.lif_refrac_feed_forward_adjoint_step.rst", "generated/norse.torch.functional.lif_refrac_feed_forward_step.rst", "generated/norse.torch.functional.lift.rst", "generated/norse.torch.functional.logical.rst", "generated/norse.torch.functional.logical.logical_and.rst", "generated/norse.torch.functional.logical.logical_or.rst", "generated/norse.torch.functional.logical.logical_xor.rst", "generated/norse.torch.functional.logical.muller_c.rst", "generated/norse.torch.functional.logical.posedge_detector.rst", "generated/norse.torch.functional.logistic_fn.rst", "generated/norse.torch.functional.lsnn.rst", "generated/norse.torch.functional.lsnn_feed_forward_adjoint_step.rst", "generated/norse.torch.functional.lsnn_feed_forward_step.rst", "generated/norse.torch.functional.poisson_encode.rst", "generated/norse.torch.functional.poisson_encode_step.rst", "generated/norse.torch.functional.population_encode.rst", "generated/norse.torch.functional.receptive_field.rst", "generated/norse.torch.functional.receptive_field.gaussian_kernel.rst", "generated/norse.torch.functional.receptive_field.spatial_receptive_field.rst", "generated/norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives.rst", "generated/norse.torch.functional.receptive_field.temporal_scale_distribution.rst", "generated/norse.torch.functional.regularization.rst", "generated/norse.torch.functional.regularization.regularize_step.rst", "generated/norse.torch.functional.regularization.spike_accumulator.rst", "generated/norse.torch.functional.regularization.voltage_accumulator.rst", "generated/norse.torch.functional.signed_poisson_encode.rst", "generated/norse.torch.functional.signed_poisson_encode_step.rst", "generated/norse.torch.functional.spike_latency_encode.rst", "generated/norse.torch.functional.spike_latency_lif_encode.rst", "generated/norse.torch.functional.spikes_to_times_decoder.rst", "generated/norse.torch.functional.stdp.rst", "generated/norse.torch.functional.stdp_sensor.rst", "generated/norse.torch.functional.stdp_sensor_step.rst", "generated/norse.torch.functional.stp_step.rst", "generated/norse.torch.functional.super_fn.rst", "generated/norse.torch.functional.superspike.rst", "generated/norse.torch.functional.test.rst", "generated/norse.torch.functional.test.test_coba_lif.rst", "generated/norse.torch.functional.test.test_decode.rst", "generated/norse.torch.functional.test.test_encode.rst", "generated/norse.torch.functional.test.test_exp_filter.rst", "generated/norse.torch.functional.test.test_heaviside.rst", "generated/norse.torch.functional.test.test_iaf.rst", "generated/norse.torch.functional.test.test_izhikevich.rst", "generated/norse.torch.functional.test.test_leaky_integrator.rst", "generated/norse.torch.functional.test.test_leaky_integrator_box.rst", "generated/norse.torch.functional.test.test_lif.rst", "generated/norse.torch.functional.test.test_lif_adex.rst", "generated/norse.torch.functional.test.test_lif_adex_refrac.rst", "generated/norse.torch.functional.test.test_lif_box.rst", "generated/norse.torch.functional.test.test_lif_ex.rst", "generated/norse.torch.functional.test.test_lif_mc.rst", "generated/norse.torch.functional.test.test_lif_mc_refrac.rst", "generated/norse.torch.functional.test.test_lif_refrac.rst", "generated/norse.torch.functional.test.test_lift.rst", "generated/norse.torch.functional.test.test_logical.rst", "generated/norse.torch.functional.test.test_lsnn.rst", "generated/norse.torch.functional.test.test_receptive_field.rst", "generated/norse.torch.functional.test.test_regularization.rst", "generated/norse.torch.functional.test.test_spikes_to_times_decoder.rst", "generated/norse.torch.functional.test.test_stdp.rst", "generated/norse.torch.functional.test.test_stdp_sensor.rst", "generated/norse.torch.functional.test.test_superspike.rst", "generated/norse.torch.functional.test.test_threshold.rst", "generated/norse.torch.functional.test.test_tsodyks_makram.rst", "generated/norse.torch.functional.threshold.rst", "generated/norse.torch.functional.triangle_fn.rst", "generated/norse.torch.functional.tsodyks_makram.rst", "generated/norse.torch.models.rst", "generated/norse.torch.models.conv.rst", "generated/norse.torch.models.mobilenet.rst", "generated/norse.torch.models.test.rst", "generated/norse.torch.models.test.test_conv.rst", "generated/norse.torch.models.test.test_mobilenet.rst", "generated/norse.torch.models.test.test_vgg.rst", "generated/norse.torch.models.vgg.rst", "generated/norse.torch.module.rst", "generated/norse.torch.module.Lift.rst", "generated/norse.torch.module.RegularizationCell.rst", "generated/norse.torch.module.SequentialState.rst", "generated/norse.torch.module.coba_lif.rst", "generated/norse.torch.module.coba_lif.CobaLIFCell.rst", "generated/norse.torch.module.conv.rst", "generated/norse.torch.module.conv.LConv2d.rst", "generated/norse.torch.module.encode.rst", "generated/norse.torch.module.encode.ConstantCurrentLIFEncoder.rst", "generated/norse.torch.module.encode.PoissonEncoder.rst", "generated/norse.torch.module.encode.PoissonEncoderStep.rst", "generated/norse.torch.module.encode.PopulationEncoder.rst", "generated/norse.torch.module.encode.SignedPoissonEncoder.rst", "generated/norse.torch.module.encode.SpikeLatencyEncoder.rst", "generated/norse.torch.module.encode.SpikeLatencyLIFEncoder.rst", "generated/norse.torch.module.exp_filter.rst", "generated/norse.torch.module.iaf.rst", "generated/norse.torch.module.iaf.IAFCell.rst", "generated/norse.torch.module.iaf.IAFFeedForwardState.rst", "generated/norse.torch.module.iaf.IAFParameters.rst", "generated/norse.torch.module.izhikevich.rst", "generated/norse.torch.module.izhikevich.Izhikevich.rst", "generated/norse.torch.module.izhikevich.IzhikevichCell.rst", "generated/norse.torch.module.izhikevich.IzhikevichRecurrent.rst", "generated/norse.torch.module.izhikevich.IzhikevichRecurrentCell.rst", "generated/norse.torch.module.izhikevich.IzhikevichSpikingBehavior.rst", "generated/norse.torch.module.izhikevich.IzhikevichState.rst", "generated/norse.torch.module.leaky_integrator.rst", "generated/norse.torch.module.leaky_integrator.LI.rst", "generated/norse.torch.module.leaky_integrator.LICell.rst", "generated/norse.torch.module.leaky_integrator.LILinearCell.rst", "generated/norse.torch.module.leaky_integrator.LIParameters.rst", "generated/norse.torch.module.leaky_integrator.LIState.rst", "generated/norse.torch.module.leaky_integrator_box.rst", "generated/norse.torch.module.lif.rst", "generated/norse.torch.module.lif.LIF.rst", "generated/norse.torch.module.lif.LIFCell.rst", "generated/norse.torch.module.lif.LIFParameters.rst", "generated/norse.torch.module.lif.LIFRecurrent.rst", "generated/norse.torch.module.lif.LIFRecurrentCell.rst", "generated/norse.torch.module.lif.LIFState.rst", "generated/norse.torch.module.lif_adex.rst", "generated/norse.torch.module.lif_adex.LIFAdEx.rst", "generated/norse.torch.module.lif_adex.LIFAdExCell.rst", "generated/norse.torch.module.lif_adex.LIFAdExRecurrent.rst", "generated/norse.torch.module.lif_adex.LIFAdExRecurrentCell.rst", "generated/norse.torch.module.lif_adex_refrac.rst", "generated/norse.torch.module.lif_box.rst", "generated/norse.torch.module.lif_box.LIFBoxCell.rst", "generated/norse.torch.module.lif_box.LIFBoxFeedForwardState.rst", "generated/norse.torch.module.lif_box.LIFBoxParameters.rst", "generated/norse.torch.module.lif_correlation.rst", "generated/norse.torch.module.lif_ex.rst", "generated/norse.torch.module.lif_ex.LIFEx.rst", "generated/norse.torch.module.lif_ex.LIFExCell.rst", "generated/norse.torch.module.lif_ex.LIFExRecurrent.rst", "generated/norse.torch.module.lif_ex.LIFExRecurrentCell.rst", "generated/norse.torch.module.lif_mc.rst", "generated/norse.torch.module.lif_mc.LIFMCRecurrentCell.rst", "generated/norse.torch.module.lif_mc_refrac.rst", "generated/norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell.rst", "generated/norse.torch.module.lif_refrac.rst", "generated/norse.torch.module.lif_refrac.LIFRefracCell.rst", "generated/norse.torch.module.lif_refrac.LIFRefracRecurrentCell.rst", "generated/norse.torch.module.lift.rst", "generated/norse.torch.module.lsnn.rst", "generated/norse.torch.module.lsnn.LSNN.rst", "generated/norse.torch.module.lsnn.LSNNCell.rst", "generated/norse.torch.module.lsnn.LSNNRecurrent.rst", "generated/norse.torch.module.lsnn.LSNNRecurrentCell.rst", "generated/norse.torch.module.receptive_field.rst", "generated/norse.torch.module.receptive_field.SpatialReceptiveField2d.rst", "generated/norse.torch.module.receptive_field.TemporalReceptiveField.rst", "generated/norse.torch.module.regularization.rst", "generated/norse.torch.module.sequential.rst", "generated/norse.torch.module.snn.rst", "generated/norse.torch.module.spikes_to_times_decoder.rst", "generated/norse.torch.module.test.rst", "generated/norse.torch.module.test.test_coba.rst", "generated/norse.torch.module.test.test_conv.rst", "generated/norse.torch.module.test.test_encode.rst", "generated/norse.torch.module.test.test_exp_filter.rst", "generated/norse.torch.module.test.test_iaf.rst", "generated/norse.torch.module.test.test_izhikevich.rst", "generated/norse.torch.module.test.test_leaky_integrator.rst", "generated/norse.torch.module.test.test_leaky_integrator_box.rst", "generated/norse.torch.module.test.test_lif.rst", "generated/norse.torch.module.test.test_lif_adex.rst", "generated/norse.torch.module.test.test_lif_adex_refrac.rst", "generated/norse.torch.module.test.test_lif_box.rst", "generated/norse.torch.module.test.test_lif_correlation.rst", "generated/norse.torch.module.test.test_lif_ex.rst", "generated/norse.torch.module.test.test_lif_mc.rst", "generated/norse.torch.module.test.test_lif_mc_refrac.rst", "generated/norse.torch.module.test.test_lif_refrac.rst", "generated/norse.torch.module.test.test_lift.rst", "generated/norse.torch.module.test.test_lsnn.rst", "generated/norse.torch.module.test.test_receptive_field.rst", "generated/norse.torch.module.test.test_regularization.rst", "generated/norse.torch.module.test.test_sequential.rst", "generated/norse.torch.module.test.test_snn.rst", "generated/norse.torch.module.test.test_spikes_to_times_decoder.rst", "generated/norse.torch.module.test.test_training.rst", "generated/norse.torch.utils.rst", "generated/norse.torch.utils.export_nir.rst", "generated/norse.torch.utils.import_nir.rst", "generated/norse.torch.utils.plot.rst", "generated/norse.torch.utils.plot.plot.rst", "generated/norse.torch.utils.plot.plot_heatmap_2d.rst", "generated/norse.torch.utils.plot.plot_heatmap_3d.rst", "generated/norse.torch.utils.plot.plot_histogram_2d.rst", "generated/norse.torch.utils.plot.plot_izhikevich.rst", "generated/norse.torch.utils.plot.plot_neuron_states.rst", "generated/norse.torch.utils.plot.plot_scatter_3d.rst", "generated/norse.torch.utils.plot.plot_spikes_2d.rst", "generated/norse.torch.utils.pytree.rst", "generated/norse.torch.utils.tensorboard.rst", "generated/norse.torch.utils.tensorboard.hook_spike_activity_mean.rst", "generated/norse.torch.utils.tensorboard.hook_spike_activity_sum.rst", "generated/norse.torch.utils.tensorboard.hook_spike_histogram_mean.rst", "generated/norse.torch.utils.tensorboard.hook_spike_histogram_sum.rst", "generated/norse.torch.utils.tensorboard.hook_spike_image.rst", "generated/norse.torch.utils.tensorboard.tensorboard.rst", "generated/norse.torch.utils.test.rst", "generated/norse.torch.utils.test.test_nir_export.rst", "generated/norse.torch.utils.test.test_nir_import.rst", "generated/norse.torch.utils.test.test_tensorboard.rst", "generated/norse.utils.rst", "index.md", "norse.torch.rst", "norse.torch.functional.rst", "norse.torch.utils.rst", "pages/about.rst", "pages/development.md", "pages/hardware.rst", "pages/installing.md", "pages/papers.rst", "pages/parameters.ipynb", "pages/spiking.ipynb", "pages/started.ipynb", "pages/tasks.rst", "pages/working.ipynb"], "titles": ["Complete API", "norse", "norse.benchmark", "norse.benchmark.benchmark", "norse.benchmark.main", "norse.benchmark.norse_lif", "norse.benchmark.plot", "norse.dataset", "norse.dataset.memory", "norse.dataset.spiking_heidelberg", "norse.task", "norse.task.cifar10", "norse.task.correlation_experiment", "norse.task.memory", "norse.task.mnist", "norse.task.mnist_pl", "norse.torch", "norse.torch.functional", "norse.torch.functional.LIFFeedForwardState", "norse.torch.functional.LIFParameters", "norse.torch.functional.LIFRefracFeedForwardState", "norse.torch.functional.LIFRefracParameters", "norse.torch.functional.LSNNFeedForwardState", "norse.torch.functional.LSNNParameters", "norse.torch.functional.STDPSensorParameters", "norse.torch.functional.STDPSensorState", "norse.torch.functional.TsodyksMakramParameters", "norse.torch.functional.TsodyksMakramState", "norse.torch.functional.adjoint", "norse.torch.functional.adjoint.lif_adjoint", "norse.torch.functional.adjoint.lif_mc_adjoint", "norse.torch.functional.adjoint.lif_mc_refrac_adjoint", "norse.torch.functional.adjoint.lif_refrac_adjoint", "norse.torch.functional.adjoint.lsnn_adjoint", "norse.torch.functional.adjoint.test", "norse.torch.functional.adjoint.test.test_lif_adjoint", "norse.torch.functional.adjoint.test.test_lif_refrac_adjoint", "norse.torch.functional.adjoint.test.test_lsnn_adjoint", "norse.torch.functional.circ_dist_fn", "norse.torch.functional.coba_lif", "norse.torch.functional.coba_lif.CobaLIFFeedForwardState", "norse.torch.functional.coba_lif.CobaLIFParameters", "norse.torch.functional.coba_lif.coba_lif_feed_forward_step", "norse.torch.functional.constant_current_lif_encode", "norse.torch.functional.correlation_sensor", "norse.torch.functional.decode", "norse.torch.functional.encode", "norse.torch.functional.euclidean_distance", "norse.torch.functional.filter", "norse.torch.functional.gaussian_rbf", "norse.torch.functional.heavi_circ_fn", "norse.torch.functional.heavi_erfc_fn", "norse.torch.functional.heavi_tanh_fn", "norse.torch.functional.heaviside", "norse.torch.functional.iaf", "norse.torch.functional.iaf.IAFFeedForwardState", "norse.torch.functional.iaf.IAFParameters", "norse.torch.functional.iaf.iaf_feed_forward_step", "norse.torch.functional.izhikevich", "norse.torch.functional.izhikevich.IzhikevichParameters", "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior", "norse.torch.functional.izhikevich.accomodation", "norse.torch.functional.izhikevich.bistability", "norse.torch.functional.izhikevich.class_1_exc", "norse.torch.functional.izhikevich.class_2_exc", "norse.torch.functional.izhikevich.dap", "norse.torch.functional.izhikevich.inhibition_induced_bursting", "norse.torch.functional.izhikevich.inhibition_induced_spiking", "norse.torch.functional.izhikevich.integrator", "norse.torch.functional.izhikevich.izhikevich_feed_forward_step", "norse.torch.functional.izhikevich.mixed_mode", "norse.torch.functional.izhikevich.phasic_bursting", "norse.torch.functional.izhikevich.phasic_spiking", "norse.torch.functional.izhikevich.rebound_burst", "norse.torch.functional.izhikevich.rebound_spike", "norse.torch.functional.izhikevich.resonator", "norse.torch.functional.izhikevich.spike_frequency_adaptation", "norse.torch.functional.izhikevich.spike_latency", "norse.torch.functional.izhikevich.subthreshold_oscillation", "norse.torch.functional.izhikevich.tonic_bursting", "norse.torch.functional.izhikevich.tonic_spiking", "norse.torch.functional.leaky_integrator", "norse.torch.functional.leaky_integrator.LIParameters", "norse.torch.functional.leaky_integrator.LIState", "norse.torch.functional.leaky_integrator.li_feed_forward_step", "norse.torch.functional.leaky_integrator_box", "norse.torch.functional.lif", "norse.torch.functional.lif_adex", "norse.torch.functional.lif_adex.LIFAdExFeedForwardState", "norse.torch.functional.lif_adex.LIFAdExParameters", "norse.torch.functional.lif_adex.lif_adex_current_encoder", "norse.torch.functional.lif_adex.lif_adex_feed_forward_step", "norse.torch.functional.lif_adex_current_encoder", "norse.torch.functional.lif_adex_refrac", "norse.torch.functional.lif_box", "norse.torch.functional.lif_box.LIFBoxFeedForwardState", "norse.torch.functional.lif_box.LIFBoxParameters", "norse.torch.functional.lif_box.lif_box_feed_forward_step", "norse.torch.functional.lif_correlation", "norse.torch.functional.lif_current_encoder", "norse.torch.functional.lif_ex", "norse.torch.functional.lif_ex.LIFExFeedForwardState", "norse.torch.functional.lif_ex.LIFExParameters", "norse.torch.functional.lif_ex.lif_ex_current_encoder", "norse.torch.functional.lif_ex.lif_ex_feed_forward_step", "norse.torch.functional.lif_ex_current_encoder", "norse.torch.functional.lif_feed_forward_adjoint_step", "norse.torch.functional.lif_feed_forward_adjoint_step_sparse", "norse.torch.functional.lif_feed_forward_step", "norse.torch.functional.lif_mc", "norse.torch.functional.lif_mc_feed_forward_step", "norse.torch.functional.lif_mc_refrac", "norse.torch.functional.lif_mc_refrac_feed_forward_step", "norse.torch.functional.lif_refrac", "norse.torch.functional.lif_refrac_feed_forward_adjoint_step", "norse.torch.functional.lif_refrac_feed_forward_step", "norse.torch.functional.lift", "norse.torch.functional.logical", "norse.torch.functional.logical.logical_and", "norse.torch.functional.logical.logical_or", "norse.torch.functional.logical.logical_xor", "norse.torch.functional.logical.muller_c", "norse.torch.functional.logical.posedge_detector", "norse.torch.functional.logistic_fn", "norse.torch.functional.lsnn", "norse.torch.functional.lsnn_feed_forward_adjoint_step", "norse.torch.functional.lsnn_feed_forward_step", "norse.torch.functional.poisson_encode", "norse.torch.functional.poisson_encode_step", "norse.torch.functional.population_encode", "norse.torch.functional.receptive_field", "norse.torch.functional.receptive_field.gaussian_kernel", "norse.torch.functional.receptive_field.spatial_receptive_field", "norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives", "norse.torch.functional.receptive_field.temporal_scale_distribution", "norse.torch.functional.regularization", "norse.torch.functional.regularization.regularize_step", "norse.torch.functional.regularization.spike_accumulator", "norse.torch.functional.regularization.voltage_accumulator", "norse.torch.functional.signed_poisson_encode", "norse.torch.functional.signed_poisson_encode_step", "norse.torch.functional.spike_latency_encode", "norse.torch.functional.spike_latency_lif_encode", "norse.torch.functional.spikes_to_times_decoder", "norse.torch.functional.stdp", "norse.torch.functional.stdp_sensor", "norse.torch.functional.stdp_sensor_step", "norse.torch.functional.stp_step", "norse.torch.functional.super_fn", "norse.torch.functional.superspike", "norse.torch.functional.test", "norse.torch.functional.test.test_coba_lif", "norse.torch.functional.test.test_decode", "norse.torch.functional.test.test_encode", "norse.torch.functional.test.test_exp_filter", "norse.torch.functional.test.test_heaviside", "norse.torch.functional.test.test_iaf", "norse.torch.functional.test.test_izhikevich", "norse.torch.functional.test.test_leaky_integrator", "norse.torch.functional.test.test_leaky_integrator_box", "norse.torch.functional.test.test_lif", "norse.torch.functional.test.test_lif_adex", "norse.torch.functional.test.test_lif_adex_refrac", "norse.torch.functional.test.test_lif_box", "norse.torch.functional.test.test_lif_ex", "norse.torch.functional.test.test_lif_mc", "norse.torch.functional.test.test_lif_mc_refrac", "norse.torch.functional.test.test_lif_refrac", "norse.torch.functional.test.test_lift", "norse.torch.functional.test.test_logical", "norse.torch.functional.test.test_lsnn", "norse.torch.functional.test.test_receptive_field", "norse.torch.functional.test.test_regularization", "norse.torch.functional.test.test_spikes_to_times_decoder", "norse.torch.functional.test.test_stdp", "norse.torch.functional.test.test_stdp_sensor", "norse.torch.functional.test.test_superspike", "norse.torch.functional.test.test_threshold", "norse.torch.functional.test.test_tsodyks_makram", "norse.torch.functional.threshold", "norse.torch.functional.triangle_fn", "norse.torch.functional.tsodyks_makram", "norse.torch.models", "norse.torch.models.conv", "norse.torch.models.mobilenet", "norse.torch.models.test", "norse.torch.models.test.test_conv", "norse.torch.models.test.test_mobilenet", "norse.torch.models.test.test_vgg", "norse.torch.models.vgg", "norse.torch.module", "norse.torch.module.Lift", "norse.torch.module.RegularizationCell", "norse.torch.module.SequentialState", "norse.torch.module.coba_lif", "norse.torch.module.coba_lif.CobaLIFCell", "norse.torch.module.conv", "norse.torch.module.conv.LConv2d", "norse.torch.module.encode", "norse.torch.module.encode.ConstantCurrentLIFEncoder", "norse.torch.module.encode.PoissonEncoder", "norse.torch.module.encode.PoissonEncoderStep", "norse.torch.module.encode.PopulationEncoder", "norse.torch.module.encode.SignedPoissonEncoder", "norse.torch.module.encode.SpikeLatencyEncoder", "norse.torch.module.encode.SpikeLatencyLIFEncoder", "norse.torch.module.exp_filter", "norse.torch.module.iaf", "norse.torch.module.iaf.IAFCell", "norse.torch.module.iaf.IAFFeedForwardState", "norse.torch.module.iaf.IAFParameters", "norse.torch.module.izhikevich", "norse.torch.module.izhikevich.Izhikevich", "norse.torch.module.izhikevich.IzhikevichCell", "norse.torch.module.izhikevich.IzhikevichRecurrent", "norse.torch.module.izhikevich.IzhikevichRecurrentCell", "norse.torch.module.izhikevich.IzhikevichSpikingBehavior", "norse.torch.module.izhikevich.IzhikevichState", "norse.torch.module.leaky_integrator", "norse.torch.module.leaky_integrator.LI", "norse.torch.module.leaky_integrator.LICell", "norse.torch.module.leaky_integrator.LILinearCell", "norse.torch.module.leaky_integrator.LIParameters", "norse.torch.module.leaky_integrator.LIState", "norse.torch.module.leaky_integrator_box", "norse.torch.module.lif", "norse.torch.module.lif.LIF", "norse.torch.module.lif.LIFCell", "norse.torch.module.lif.LIFParameters", "norse.torch.module.lif.LIFRecurrent", "norse.torch.module.lif.LIFRecurrentCell", "norse.torch.module.lif.LIFState", "norse.torch.module.lif_adex", "norse.torch.module.lif_adex.LIFAdEx", "norse.torch.module.lif_adex.LIFAdExCell", "norse.torch.module.lif_adex.LIFAdExRecurrent", "norse.torch.module.lif_adex.LIFAdExRecurrentCell", "norse.torch.module.lif_adex_refrac", "norse.torch.module.lif_box", "norse.torch.module.lif_box.LIFBoxCell", "norse.torch.module.lif_box.LIFBoxFeedForwardState", "norse.torch.module.lif_box.LIFBoxParameters", "norse.torch.module.lif_correlation", "norse.torch.module.lif_ex", "norse.torch.module.lif_ex.LIFEx", "norse.torch.module.lif_ex.LIFExCell", "norse.torch.module.lif_ex.LIFExRecurrent", "norse.torch.module.lif_ex.LIFExRecurrentCell", "norse.torch.module.lif_mc", "norse.torch.module.lif_mc.LIFMCRecurrentCell", "norse.torch.module.lif_mc_refrac", "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell", "norse.torch.module.lif_refrac", "norse.torch.module.lif_refrac.LIFRefracCell", "norse.torch.module.lif_refrac.LIFRefracRecurrentCell", "norse.torch.module.lift", "norse.torch.module.lsnn", "norse.torch.module.lsnn.LSNN", "norse.torch.module.lsnn.LSNNCell", "norse.torch.module.lsnn.LSNNRecurrent", "norse.torch.module.lsnn.LSNNRecurrentCell", "norse.torch.module.receptive_field", "norse.torch.module.receptive_field.SpatialReceptiveField2d", "norse.torch.module.receptive_field.TemporalReceptiveField", "norse.torch.module.regularization", "norse.torch.module.sequential", "norse.torch.module.snn", "norse.torch.module.spikes_to_times_decoder", "norse.torch.module.test", "norse.torch.module.test.test_coba", "norse.torch.module.test.test_conv", "norse.torch.module.test.test_encode", "norse.torch.module.test.test_exp_filter", "norse.torch.module.test.test_iaf", "norse.torch.module.test.test_izhikevich", "norse.torch.module.test.test_leaky_integrator", "norse.torch.module.test.test_leaky_integrator_box", "norse.torch.module.test.test_lif", "norse.torch.module.test.test_lif_adex", "norse.torch.module.test.test_lif_adex_refrac", "norse.torch.module.test.test_lif_box", "norse.torch.module.test.test_lif_correlation", "norse.torch.module.test.test_lif_ex", "norse.torch.module.test.test_lif_mc", "norse.torch.module.test.test_lif_mc_refrac", "norse.torch.module.test.test_lif_refrac", "norse.torch.module.test.test_lift", "norse.torch.module.test.test_lsnn", "norse.torch.module.test.test_receptive_field", "norse.torch.module.test.test_regularization", "norse.torch.module.test.test_sequential", "norse.torch.module.test.test_snn", "norse.torch.module.test.test_spikes_to_times_decoder", "norse.torch.module.test.test_training", "norse.torch.utils", "norse.torch.utils.export_nir", "norse.torch.utils.import_nir", "norse.torch.utils.plot", "norse.torch.utils.plot.plot", "norse.torch.utils.plot.plot_heatmap_2d", "norse.torch.utils.plot.plot_heatmap_3d", "norse.torch.utils.plot.plot_histogram_2d", "norse.torch.utils.plot.plot_izhikevich", "norse.torch.utils.plot.plot_neuron_states", "norse.torch.utils.plot.plot_scatter_3d", "norse.torch.utils.plot.plot_spikes_2d", "norse.torch.utils.pytree", "norse.torch.utils.tensorboard", "norse.torch.utils.tensorboard.hook_spike_activity_mean", "norse.torch.utils.tensorboard.hook_spike_activity_sum", "norse.torch.utils.tensorboard.hook_spike_histogram_mean", "norse.torch.utils.tensorboard.hook_spike_histogram_sum", "norse.torch.utils.tensorboard.hook_spike_image", "norse.torch.utils.tensorboard.tensorboard", "norse.torch.utils.test", "norse.torch.utils.test.test_nir_export", "norse.torch.utils.test.test_nir_import", "norse.torch.utils.test.test_tensorboard", "norse.utils", "Getting started", "norse.torch", "norse.torch.functional", "norse.torch.utils", "<span class=\"section-number\">9. </span>About Norse", "<span class=\"section-number\">10. </span>Development Documentation", "<span class=\"section-number\">7. </span>Hardware acceleration", "<span class=\"section-number\">1. </span>Installing Norse", "<span class=\"section-number\">8. </span>Papers citing Norse", "<span class=\"section-number\">6. </span>Parameter learning in Spiking Neural Networks", "<span class=\"section-number\">4. </span>Introduction to spiking systems", "<span class=\"section-number\">2. </span>Quickstart", "<span class=\"section-number\">5. </span>Running Tasks", "<span class=\"section-number\">3. </span>Working with Norse"], "terms": {"librari": [1, 15, 16, 319, 326, 329, 331, 332], "do": [1, 16, 326, 328, 329], "deep": [1, 16, 319, 326, 327, 330], "learn": [1, 14, 15, 16, 319, 326, 327, 329, 330, 331], "spike": [1, 7, 9, 14, 15, 16, 17, 19, 41, 43, 46, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 89, 90, 91, 92, 94, 96, 97, 102, 104, 106, 107, 108, 110, 115, 116, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 190, 192, 195, 199, 200, 201, 203, 204, 205, 210, 212, 213, 214, 215, 216, 218, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 241, 244, 245, 246, 247, 249, 254, 260, 261, 264, 266, 298, 299, 300, 301, 304, 305, 308, 309, 310, 311, 312, 319, 320, 322, 323, 324, 327, 330, 331, 332], "neural": [1, 7, 9, 16, 17, 86, 190, 266, 319, 320, 321, 322, 323, 327, 329, 330, 331, 332], "network": [1, 7, 9, 14, 15, 16, 17, 86, 190, 266, 294, 319, 320, 321, 322, 323, 326, 327, 329, 330, 331, 332], "modul": [1, 2, 7, 10, 16, 17, 22, 28, 34, 45, 85, 86, 91, 94, 97, 104, 108, 124, 135, 150, 153, 154, 182, 185, 294, 297, 307, 308, 309, 310, 311, 312, 314, 318, 319, 320, 321, 324, 325, 328, 329, 330, 332], "tool": [2, 323, 332], "script": 2, "class": [3, 5, 8, 9, 11, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 39, 40, 41, 44, 54, 55, 56, 58, 59, 60, 81, 82, 83, 85, 86, 87, 88, 89, 93, 94, 95, 96, 98, 100, 101, 102, 113, 116, 124, 143, 144, 145, 149, 179, 181, 183, 184, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 274, 277, 291, 293, 299, 300, 301, 304, 305, 306, 317, 324, 325, 328, 331], "function": [4, 5, 6, 11, 12, 13, 14, 15, 16, 184, 186, 187, 188, 189, 192, 202, 206, 218, 224, 225, 226, 227, 229, 230, 234, 238, 239, 256, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 304, 305, 306, 313, 315, 316, 317, 320, 324, 325, 328, 329, 330, 332], "tempor": [7, 45, 116, 134, 141, 191, 197, 204, 212, 214, 226, 229, 233, 235, 244, 246, 263, 319, 329, 331, 332], "data": [7, 43, 48, 49, 127, 128, 129, 137, 138, 139, 140, 141, 191, 192, 193, 199, 202, 204, 206, 212, 214, 215, 219, 226, 227, 229, 230, 233, 234, 235, 244, 246, 257, 259, 297, 299, 300, 301, 304, 307, 325, 327, 328, 329, 332], "ideal": 7, "analysi": 7, "The": [9, 43, 49, 81, 86, 116, 124, 129, 131, 132, 133, 134, 135, 136, 137, 138, 192, 197, 199, 202, 212, 214, 218, 219, 226, 229, 233, 235, 244, 246, 257, 258, 259, 262, 263, 299, 301, 305, 308, 309, 310, 311, 312, 319, 320, 321, 323, 324, 328, 329, 330, 331, 332], "heidelberg": [9, 319, 323], "digit": [9, 14, 15, 331], "shd": 9, "audio": 9, "http": [9, 90, 91, 92, 103, 104, 105, 127, 128, 134, 147, 197, 234, 236, 245, 247, 257, 259, 319, 325, 326, 327, 328, 330, 332], "compneuro": 9, "net": [9, 331], "post": [9, 146], "2019": 9, "licens": 9, "under": [9, 319, 323], "cc": 9, "A": [9, 43, 49, 53, 81, 86, 94, 116, 124, 127, 128, 129, 131, 136, 137, 138, 139, 140, 141, 192, 193, 202, 212, 214, 218, 219, 225, 226, 229, 233, 235, 238, 244, 246, 256, 257, 259, 263, 297, 299, 300, 301, 303, 304, 305, 307, 308, 309, 310, 311, 312, 319, 320, 321, 324, 326, 327, 328, 330], "4": [9, 43, 61, 63, 68, 70, 74, 89, 90, 91, 92, 192, 193, 199, 215, 227, 229, 230, 233, 234, 235, 236, 246, 263, 300, 319, 328, 329, 330], "0": [9, 19, 21, 23, 26, 41, 42, 43, 53, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 86, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 122, 125, 126, 127, 128, 129, 133, 137, 139, 140, 141, 142, 146, 147, 148, 180, 195, 197, 199, 200, 201, 202, 203, 204, 205, 208, 210, 212, 213, 214, 215, 219, 220, 221, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 239, 241, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 262, 263, 300, 302, 304, 319, 324, 325, 326, 328, 329, 330, 332], "cramer": [9, 327], "b": [9, 22, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 124, 125, 126, 258, 260, 324], "stradmann": [9, 327], "y": [9, 47, 48, 118, 119, 120, 300, 304, 332], "schemmel": [9, 327], "j": [9, 141, 204, 327], "zenk": 9, "f": [9, 86, 328], "systemat": 9, "evalu": [9, 116], "arxiv": [9, 257, 259, 327], "1910": 9, "07407": 9, "cs": 9, "q": [9, 327], "bio": [9, 319], "org": [9, 90, 91, 92, 147, 197, 234, 236, 257, 259, 319, 325, 326, 327, 330], "ab": [9, 257, 259, 327], "These": [10, 130, 261, 320, 321, 331], "serv": [10, 319, 328, 331, 332], "1": [10, 19, 21, 23, 24, 26, 43, 49, 53, 56, 57, 59, 61, 62, 63, 65, 66, 67, 68, 75, 81, 85, 86, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 122, 124, 125, 126, 127, 128, 129, 133, 134, 139, 140, 141, 142, 146, 191, 193, 195, 197, 199, 200, 201, 202, 203, 204, 205, 208, 210, 218, 219, 220, 221, 226, 227, 228, 229, 230, 233, 234, 235, 236, 239, 241, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 262, 263, 300, 301, 302, 304, 319, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 332], "illustr": [10, 328, 331, 332], "what": [10, 136, 141, 204, 331], "type": [10, 129, 136, 192, 202, 263, 319, 324, 326, 331], "can": [10, 81, 85, 86, 94, 116, 129, 133, 134, 135, 142, 192, 197, 202, 205, 238, 264, 308, 309, 310, 311, 312, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "done": [10, 324, 326, 329, 330, 331, 332], "2": [10, 43, 49, 64, 65, 66, 70, 76, 77, 79, 80, 89, 90, 91, 92, 131, 132, 133, 134, 192, 193, 199, 212, 214, 215, 219, 226, 227, 229, 230, 233, 234, 235, 236, 244, 246, 257, 259, 262, 263, 324, 327, 328, 329, 330, 331, 332], "how": [10, 81, 133, 218, 262, 319, 320, 321, 324, 325, 328, 329, 330, 331, 332], "us": [10, 15, 19, 24, 41, 45, 48, 56, 57, 59, 86, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 108, 110, 115, 125, 126, 127, 128, 130, 139, 140, 142, 195, 197, 200, 201, 203, 205, 206, 208, 210, 212, 214, 215, 219, 220, 221, 226, 227, 228, 229, 230, 233, 234, 235, 236, 239, 241, 244, 245, 246, 247, 249, 253, 254, 257, 258, 259, 260, 261, 262, 263, 300, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332], "specif": [10, 90, 91, 92, 97, 99, 103, 104, 105, 108, 126, 130, 133, 195, 213, 215, 219, 220, 221, 227, 230, 234, 236, 239, 245, 247, 253, 254, 258, 260, 261, 262, 299, 300, 301, 304, 305, 320, 321, 324, 329, 331, 332], "pleas": [10, 319, 324, 326, 327, 328, 330, 331], "note": [10, 27, 46, 129, 319, 324, 326, 328, 330, 331, 332], "some": [10, 46, 81, 85, 135, 136, 137, 138, 192, 218, 224, 300, 320, 321, 324, 326, 328, 329, 331, 332], "requir": [10, 129, 138, 263, 319, 328, 331, 332], "addit": [10, 133, 193, 197, 221, 326, 328, 331], "depend": [10, 135, 294, 319, 322, 327, 331, 332], "like": [10, 46, 136, 193, 326, 331, 332], "openai": [10, 331], "gym": [10, 331], "cartpol": [10, 319], "which": [10, 116, 127, 128, 129, 132, 133, 134, 135, 136, 139, 140, 192, 197, 200, 201, 202, 203, 212, 214, 226, 229, 233, 235, 244, 246, 257, 258, 259, 262, 263, 302, 304, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332], "includ": [10, 116, 133, 135, 192, 319, 321, 323, 331], "vanilla": [10, 331], "refer": [10, 86, 147, 308, 309, 310, 311, 312, 319, 324, 326, 327, 332], "page": [10, 319, 326, 327, 329, 330, 331, 332], "thorough": 10, "explan": 10, "execut": [10, 329, 330, 332], "run": [10, 328, 332], "experi": [10, 328, 329, 332], "In": [14, 15, 81, 85, 86, 124, 135, 191, 218, 224, 320, 321, 324, 326, 327, 328, 329, 332], "thi": [14, 15, 16, 81, 85, 86, 94, 124, 125, 135, 141, 191, 197, 204, 218, 224, 238, 264, 308, 309, 310, 311, 312, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332], "we": [14, 15, 27, 81, 133, 197, 218, 262, 300, 303, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "train": [14, 15, 127, 139, 142, 200, 203, 205, 293, 319, 326, 329, 330, 331], "convolut": [14, 15, 91, 104, 108, 197, 234, 262, 329, 332], "recognit": [14, 15], "mnist": [15, 319, 325, 332], "version": [15, 94, 116, 219, 220, 221, 238, 319, 320, 321, 325, 326, 328], "pytorch": [15, 16, 45, 91, 104, 108, 193, 197, 234, 308, 309, 310, 311, 312, 319, 320, 322, 324, 325, 326, 328, 329, 330, 332], "lightn": [15, 319, 326], "reduc": [15, 330], "amount": [15, 81, 218, 320, 321], "boilerpl": [15, 324, 328], "code": [15, 28, 129, 141, 202, 204, 299, 300, 301, 302, 303, 304, 305, 319, 324, 328, 329, 330, 332], "around": [15, 319, 324], "log": [15, 308, 309, 310, 311, 312, 328, 331], "checkpoint": [15, 328, 331], "etc": 15, "packag": [16, 294, 322, 324, 326, 328], "contain": [16, 43, 49, 127, 128, 129, 135, 137, 138, 139, 140, 212, 214, 219, 226, 229, 233, 235, 244, 246, 264, 303, 319, 321, 324, 326, 328, 329, 332], "extend": [16, 319], "stateless": [17, 45, 46, 321], "compon": [17, 135, 319, 321, 324], "v": [18, 22, 40, 55, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 88, 90, 91, 92, 95, 97, 99, 101, 103, 104, 105, 108, 124, 125, 126, 138, 195, 208, 209, 213, 215, 217, 218, 219, 220, 221, 223, 227, 230, 231, 234, 236, 239, 240, 245, 247, 249, 253, 254, 258, 260, 301, 320, 321, 326, 327, 329, 332], "tensor": [18, 19, 20, 21, 22, 23, 24, 25, 27, 38, 40, 41, 42, 43, 45, 49, 50, 51, 52, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 88, 89, 90, 91, 92, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 116, 123, 125, 126, 127, 128, 129, 131, 133, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 180, 191, 195, 197, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 212, 214, 215, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 263, 299, 300, 301, 304, 305, 308, 309, 310, 311, 312, 324, 325, 328, 329, 330, 332], "i": [18, 22, 81, 83, 85, 86, 88, 90, 91, 92, 97, 99, 101, 103, 104, 105, 108, 124, 125, 126, 133, 213, 215, 218, 219, 220, 221, 223, 227, 230, 231, 234, 236, 239, 245, 247, 249, 253, 254, 258, 260, 262, 303, 308, 309, 310, 311, 312, 320, 321, 324, 327, 329, 332], "sourc": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 38, 40, 41, 42, 43, 47, 49, 50, 51, 52, 55, 56, 57, 59, 60, 69, 82, 83, 84, 88, 89, 90, 91, 92, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 180, 191, 192, 193, 195, 197, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 262, 263, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 319], "state": [18, 20, 21, 22, 24, 25, 27, 40, 42, 43, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 88, 90, 91, 92, 95, 97, 99, 101, 103, 104, 105, 106, 107, 108, 110, 112, 115, 116, 121, 125, 126, 135, 136, 137, 138, 146, 147, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 262, 263, 271, 301, 303, 308, 309, 310, 311, 312, 320, 321, 324, 329], "feed": [18, 20, 40, 55, 88, 95, 101, 110, 115, 209, 234, 240], "forward": [18, 20, 40, 55, 88, 95, 101, 106, 107, 110, 114, 115, 125, 135, 136, 192, 193, 202, 209, 234, 240, 257, 259, 321, 324, 325, 328], "lif": [18, 19, 20, 21, 40, 41, 42, 43, 57, 90, 91, 92, 94, 95, 96, 97, 99, 104, 108, 110, 112, 114, 115, 124, 125, 126, 142, 191, 192, 195, 205, 234, 236, 238, 239, 240, 241, 245, 247, 249, 251, 253, 254, 258, 301, 303, 305, 308, 309, 310, 311, 312, 324, 325, 329, 330, 332], "neuron": [18, 19, 20, 21, 23, 28, 40, 41, 42, 43, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 114, 115, 116, 124, 125, 126, 129, 136, 141, 142, 193, 195, 199, 202, 204, 205, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 249, 253, 254, 257, 258, 259, 260, 263, 297, 299, 302, 308, 309, 310, 311, 325, 331], "paramet": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 40, 41, 42, 43, 49, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 115, 116, 125, 126, 127, 128, 129, 133, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 191, 192, 195, 197, 199, 200, 201, 202, 203, 205, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 244, 245, 246, 247, 249, 253, 254, 257, 258, 259, 260, 262, 263, 264, 297, 320, 321, 324, 325, 327, 329, 332], "membran": [18, 19, 22, 23, 40, 41, 43, 55, 59, 81, 82, 83, 85, 86, 88, 89, 90, 92, 95, 96, 101, 102, 125, 135, 138, 199, 209, 217, 218, 222, 223, 224, 228, 231, 240, 241, 264, 320, 321, 329, 332], "potenti": [18, 19, 22, 23, 40, 41, 55, 56, 59, 82, 88, 89, 95, 96, 101, 102, 138, 209, 210, 217, 222, 228, 231, 240, 241, 329, 330], "synapt": [18, 19, 22, 23, 26, 41, 42, 82, 88, 89, 101, 102, 125, 146, 222, 228, 231, 328, 329], "input": [18, 22, 27, 40, 41, 42, 43, 46, 57, 81, 83, 85, 88, 90, 91, 92, 97, 99, 101, 103, 104, 105, 106, 107, 108, 110, 114, 115, 116, 124, 125, 126, 127, 128, 129, 138, 139, 140, 141, 142, 147, 195, 197, 199, 200, 201, 202, 203, 204, 205, 213, 215, 218, 219, 221, 223, 224, 229, 230, 231, 234, 235, 236, 239, 245, 246, 247, 249, 253, 254, 258, 259, 260, 262, 263, 302, 320, 321, 324, 328, 330, 332], "current": [18, 22, 27, 42, 43, 57, 81, 83, 85, 86, 88, 90, 91, 92, 94, 97, 99, 101, 103, 104, 105, 106, 107, 108, 110, 114, 115, 125, 126, 142, 199, 218, 223, 224, 231, 234, 236, 238, 239, 302, 320, 321, 326, 329, 332], "__init__": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 40, 41, 55, 56, 59, 60, 82, 83, 88, 89, 95, 96, 101, 102, 191, 192, 193, 195, 197, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 262, 263, 324, 325, 328], "method": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 40, 41, 42, 43, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 86, 88, 89, 90, 91, 92, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 142, 191, 192, 193, 195, 197, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 262, 263, 319, 324, 325, 326, 328, 329, 332], "attribut": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 40, 41, 55, 56, 59, 60, 82, 83, 88, 89, 95, 96, 101, 102, 191, 192, 193, 195, 197, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 262, 263], "tau_syn_inv": [19, 21, 23, 43, 82, 84, 89, 90, 91, 92, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 142, 199, 205, 219, 220, 221, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 328, 329], "200": [19, 21, 23, 43, 71, 73, 74, 82, 84, 89, 90, 91, 92, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 142, 199, 205, 219, 220, 221, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 305, 328, 329], "tau_mem_inv": [19, 21, 23, 43, 82, 84, 89, 90, 91, 92, 96, 97, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 142, 199, 205, 219, 220, 221, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 239, 241, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 328, 329], "100": [19, 21, 23, 41, 42, 43, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 89, 90, 91, 92, 96, 97, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 127, 139, 142, 148, 195, 199, 200, 203, 205, 208, 210, 219, 220, 221, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 239, 241, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 304, 324, 325, 328, 329], "v_leak": [19, 21, 23, 43, 82, 84, 89, 90, 91, 92, 96, 97, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 142, 199, 205, 219, 220, 221, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 239, 241, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 328, 329], "v_th": [19, 21, 23, 43, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 89, 90, 91, 92, 96, 97, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 142, 199, 205, 208, 210, 226, 227, 228, 229, 230, 233, 234, 235, 236, 239, 241, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 328, 329], "v_reset": [19, 21, 23, 41, 42, 43, 56, 57, 89, 90, 91, 92, 96, 97, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 142, 195, 199, 205, 208, 210, 226, 227, 228, 229, 230, 233, 234, 235, 236, 239, 241, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 328], "str": [19, 23, 41, 56, 59, 89, 96, 102, 197, 210, 228, 241, 303, 308, 309, 310, 311, 312, 324], "super": [19, 21, 23, 41, 42, 43, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 89, 90, 91, 92, 96, 97, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 142, 195, 199, 205, 208, 210, 226, 227, 228, 229, 230, 233, 234, 235, 236, 239, 241, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 325, 328], "alpha": [19, 21, 23, 41, 42, 43, 48, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 89, 90, 91, 92, 96, 97, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 142, 148, 180, 195, 199, 205, 208, 210, 226, 227, 228, 229, 230, 233, 234, 235, 236, 239, 241, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 324, 328, 329], "float": [19, 23, 26, 38, 41, 42, 43, 49, 50, 51, 52, 56, 57, 59, 69, 84, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 123, 125, 126, 127, 128, 131, 132, 133, 134, 139, 140, 142, 146, 147, 148, 180, 195, 199, 200, 201, 203, 205, 208, 210, 212, 214, 215, 219, 220, 221, 226, 227, 228, 229, 230, 233, 234, 235, 236, 239, 241, 244, 245, 246, 247, 249, 253, 254, 257, 258, 259, 260, 262, 263, 302], "parametr": [19, 56, 59, 89, 96, 102, 210, 228, 241], "invers": [19, 23, 41, 59, 81, 82, 89, 96, 102, 218, 222, 228, 241, 320, 321, 328, 329], "time": [19, 23, 24, 26, 41, 42, 43, 45, 48, 57, 59, 81, 82, 85, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 106, 107, 108, 110, 115, 116, 124, 126, 127, 128, 134, 135, 138, 139, 140, 141, 142, 146, 191, 195, 197, 199, 200, 201, 203, 204, 205, 206, 212, 213, 214, 215, 218, 219, 222, 224, 226, 227, 228, 229, 230, 233, 234, 235, 236, 239, 241, 244, 245, 246, 247, 257, 258, 259, 263, 264, 298, 299, 300, 302, 303, 304, 320, 329, 330, 331], "constant": [19, 23, 24, 26, 41, 43, 59, 81, 82, 89, 96, 102, 124, 141, 199, 204, 218, 222, 228, 241, 263, 320, 321, 329, 332], "tau_": [19, 23, 48, 81, 85, 86, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 108, 124, 126, 195, 218, 219, 220, 221, 227, 228, 230, 234, 236, 239, 241, 245, 247, 249, 253, 254, 258, 260, 320, 321, 328, 329], "text": [19, 23, 57, 81, 85, 86, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 108, 124, 126, 195, 208, 213, 215, 218, 219, 220, 221, 227, 228, 230, 234, 236, 239, 241, 245, 247, 249, 253, 254, 258, 260, 320, 321, 328, 329], "syn": [19, 23, 81, 86, 89, 90, 91, 92, 99, 102, 103, 104, 105, 108, 124, 126, 195, 218, 219, 220, 221, 227, 228, 230, 234, 236, 245, 247, 249, 253, 254, 258, 260, 320, 321, 329], "ms": [19, 26, 59, 89, 96, 102, 228, 241, 302, 328, 329], "mem": [19, 23, 81, 85, 86, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 108, 124, 126, 195, 218, 219, 220, 221, 227, 228, 230, 234, 236, 239, 241, 245, 247, 249, 253, 254, 258, 260, 320, 321, 329], "leak": [19, 23, 41, 81, 82, 85, 86, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 108, 124, 126, 195, 218, 219, 220, 221, 222, 224, 227, 228, 230, 234, 236, 239, 241, 245, 247, 249, 253, 254, 258, 260, 320, 321], "mv": [19, 56, 59, 89, 96, 102, 210, 213, 215, 228, 241], "threshold": [19, 22, 23, 41, 56, 59, 86, 89, 94, 96, 102, 126, 210, 225, 228, 238, 241, 258, 320, 324, 328, 329, 332], "reset": [19, 23, 41, 56, 57, 59, 89, 90, 91, 92, 96, 97, 102, 104, 108, 126, 195, 208, 210, 227, 228, 230, 236, 239, 241, 245, 247, 249, 253, 254, 258, 260, 329, 332], "determin": [19, 41, 56, 59, 89, 96, 102, 122, 124, 210, 228, 241, 328, 331, 332], "relev": [19, 41, 56, 59, 89, 96, 102, 210, 228, 241, 327], "surrog": [19, 41, 56, 59, 89, 96, 102, 210, 228, 241, 324, 328, 332], "gradient": [19, 41, 56, 59, 86, 89, 96, 102, 210, 228, 241, 293, 319, 324, 328, 332], "hyper": [19, 41, 56, 59, 89, 96, 102, 210, 228, 241], "comput": [19, 41, 56, 57, 59, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 108, 110, 115, 118, 119, 120, 121, 195, 208, 210, 213, 215, 227, 228, 230, 234, 236, 239, 241, 245, 247, 249, 253, 254, 260, 302, 323, 327, 329], "liffeedforwardst": [20, 106, 107, 108, 110], "rho": [20, 21, 253, 254], "absolut": [20, 21, 253, 254], "refractori": [20, 21, 114, 115, 142, 205, 253, 254], "period": [20, 21, 114, 115, 142, 205, 253, 254], "integr": [20, 21, 22, 42, 55, 56, 57, 81, 82, 83, 85, 89, 90, 91, 92, 94, 97, 99, 102, 103, 104, 105, 106, 107, 108, 110, 114, 115, 125, 126, 127, 128, 139, 140, 142, 146, 147, 195, 200, 201, 203, 205, 208, 209, 210, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 233, 234, 235, 236, 238, 239, 244, 245, 246, 247, 249, 253, 254, 257, 258, 259, 260, 323, 324, 329, 330, 332], "count": [20, 21, 135, 136, 192, 321, 328], "toward": [20, 21], "zero": [20, 21, 138, 212, 214, 215, 219, 226, 227, 229, 230, 233, 235, 244, 246, 257, 259, 329], "lifparamet": [21, 43, 99, 106, 107, 108, 110, 112, 114, 115, 142, 195, 199, 205, 226, 227, 229, 230, 249, 251, 253, 254, 328, 329], "rho_reset": [21, 112, 114, 115, 251, 253, 254], "5": [21, 41, 42, 59, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 112, 114, 115, 129, 132, 133, 191, 192, 195, 202, 212, 214, 215, 226, 227, 229, 230, 233, 235, 244, 246, 251, 253, 254, 257, 259, 262, 328, 329], "kept": 22, "lsnn": [22, 23, 125, 126, 332], "adapt": [22, 23, 88, 89, 90, 91, 92, 103, 104, 105, 124, 125, 126, 234, 236, 245, 247, 257, 258, 259, 332], "tau_adapt_inv": [23, 125, 126, 257, 258, 259, 260], "0012": [23, 125, 126, 257, 258, 259, 260], "beta": [23, 125, 126, 257, 258, 259, 260], "8000": [23, 43, 66, 67, 125, 126, 199, 257, 258, 259, 260], "an": [23, 24, 25, 43, 48, 56, 57, 89, 90, 91, 92, 97, 102, 104, 108, 116, 124, 127, 129, 135, 136, 137, 139, 142, 192, 197, 205, 208, 210, 215, 221, 234, 239, 263, 300, 301, 302, 303, 305, 312, 319, 321, 324, 326, 327, 328, 329, 331, 332], "tau_b": [23, 124], "eta_p": [24, 146], "eta_m": [24, 146], "tau_ac_inv": [24, 146], "10": [24, 41, 42, 134, 146, 195, 212, 213, 214, 219, 226, 229, 233, 235, 236, 244, 245, 246, 247, 254, 259, 301, 303, 304, 305, 319, 324, 325, 327, 328, 329, 331, 332], "tau_c_inv": [24, 146], "stdp": [24, 25, 146, 332], "sensor": [24, 25, 146], "event": [24, 25, 45, 86, 94, 130, 146, 225, 238, 261, 297, 319, 320, 321, 323, 327, 329], "driven": [24, 25, 146, 319, 323], "plastic": [24, 332], "rule": [24, 146, 206, 327], "correl": 24, "anti": 24, "a_pr": 25, "a_post": 25, "presynapt": 25, "postsynapt": 25, "tau_f_inv": 26, "20": [26, 41, 42, 191, 195, 234, 236, 245, 247, 253, 254, 302, 325, 328, 329], "tau_s_inv": 26, "50": [26, 79, 327], "tau_d_inv": 26, "3333333333333333": 26, "u": [26, 27, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 213, 215, 217, 328], "45": [26, 66], "tsodyk": [26, 27, 147, 332], "makram": [26, 27, 147], "model": [26, 27, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 86, 90, 91, 92, 94, 97, 104, 108, 110, 115, 127, 128, 139, 140, 142, 147, 193, 195, 200, 201, 203, 205, 213, 215, 216, 225, 227, 230, 234, 236, 238, 239, 245, 247, 249, 253, 254, 260, 302, 319, 326, 327, 331], "facilit": [26, 328], "depress": 26, "size": [26, 43, 116, 127, 129, 132, 133, 139, 192, 195, 197, 215, 221, 230, 236, 245, 247, 249, 254, 259, 260, 262, 263, 302, 331], "jump": [26, 57, 90, 91, 92, 94, 97, 104, 108, 124, 126, 195, 208, 224, 227, 230, 234, 236, 238, 239, 245, 247, 249, 253, 254, 258, 260, 320, 321, 324], "util": [26, 27, 328], "variabl": [26, 59, 125, 217, 303, 330, 332], "x": [27, 38, 47, 48, 49, 50, 51, 52, 118, 119, 120, 123, 131, 132, 148, 180, 300, 304, 325, 328, 332], "ar": [27, 45, 81, 118, 119, 120, 121, 122, 127, 128, 130, 133, 139, 141, 195, 200, 201, 203, 204, 218, 230, 236, 245, 247, 249, 254, 260, 261, 262, 263, 293, 304, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "track": [27, 130, 212, 214, 226, 229, 233, 235, 244, 246, 261, 319, 320, 321, 324, 327, 332], "separ": 27, "fraction": 27, "remain": [27, 328], "avail": [27, 81, 85, 86, 319, 321, 324, 326], "resourc": [27, 319, 323, 329], "base": [28, 40, 41, 42, 49, 106, 107, 114, 125, 130, 134, 136, 195, 261, 263, 266, 297, 303, 319, 322, 323, 326, 327, 332], "activ": [28, 86, 116, 129, 202, 226, 227, 229, 230, 263, 300, 304, 308, 309, 310, 311, 312, 319, 327, 329, 330, 332], "optim": [28, 324, 328, 332], "k": [38, 49, 50, 51, 52, 59, 123, 129, 202], "g_e": [40, 195], "g_i": [40, 195], "conduct": [40, 41, 42, 59, 110, 195, 249], "excitatori": [40, 41], "inhibitori": [40, 41], "tau_syn_exc_inv": [41, 42, 195], "2000": [41, 42, 43, 195, 199], "tau_syn_inh_inv": [41, 42, 195], "c_m_inv": [41, 42, 195], "g_l": [41, 42, 195], "2500": [41, 42, 195], "e_rev_i": [41, 42, 195], "e_rev_": [41, 42, 195], "60": [41, 42, 62, 63, 65, 67, 68, 74, 75, 78, 195, 329, 331], "v_rest": [41, 42, 195], "70": [41, 42, 65, 70, 76, 77, 79, 80, 195, 331], "v_thresh": [41, 42, 195], "capacit": 41, "revers": 41, "rest": 41, "input_tensor": [42, 84, 97, 108, 110, 112, 115, 126, 239, 324], "cobaliffeedforwardst": 42, "p": [42, 43, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 90, 91, 92, 97, 99, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 116, 125, 126, 142, 146, 147, 195, 199, 205, 208, 212, 214, 215, 216, 219, 220, 221, 226, 227, 229, 230, 233, 234, 235, 236, 239, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 324, 326, 328, 329], "cobalifparamet": [42, 195], "dt": [42, 43, 57, 69, 84, 90, 91, 92, 97, 99, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 125, 126, 127, 128, 139, 140, 142, 146, 147, 195, 199, 200, 201, 203, 205, 208, 212, 214, 215, 219, 220, 221, 226, 227, 229, 230, 233, 234, 235, 236, 239, 244, 245, 246, 247, 249, 253, 254, 257, 258, 259, 260, 263, 328, 329], "001": [42, 43, 57, 69, 84, 90, 91, 92, 97, 99, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 125, 126, 127, 128, 139, 140, 142, 146, 147, 195, 199, 200, 201, 203, 205, 208, 212, 214, 215, 221, 226, 227, 229, 233, 235, 239, 244, 246, 257, 258, 259, 263, 328, 329], "tupl": [42, 57, 69, 84, 90, 91, 92, 97, 99, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 116, 126, 133, 136, 147, 197, 212, 214, 215, 219, 226, 227, 229, 230, 233, 235, 244, 246, 262, 263, 303, 308, 309, 310, 311, 312, 324], "euler": [42, 90, 91, 92, 97, 99, 103, 104, 105, 106, 107, 108, 110, 114, 115, 125, 126, 147, 195, 215, 227, 230, 234, 236, 239, 245, 247, 249, 253, 254, 258, 260], "step": [42, 43, 53, 57, 86, 90, 91, 92, 97, 99, 103, 104, 105, 106, 107, 108, 110, 114, 115, 125, 126, 127, 128, 129, 135, 136, 139, 140, 142, 146, 147, 192, 195, 197, 199, 200, 201, 203, 205, 208, 212, 213, 214, 215, 226, 227, 229, 230, 233, 234, 235, 236, 239, 244, 245, 246, 247, 249, 253, 254, 257, 258, 259, 260, 302, 321, 324, 326, 328, 329], "input_curr": [43, 69, 90, 92, 99, 103, 105, 142], "seq_length": [43, 127, 129, 139, 142, 191, 199, 200, 203, 205, 325, 328], "int": [43, 127, 129, 132, 133, 134, 137, 138, 139, 142, 195, 197, 199, 200, 202, 203, 205, 214, 215, 221, 229, 230, 235, 236, 245, 246, 247, 249, 251, 254, 259, 260, 262, 263, 302], "encod": [43, 127, 128, 129, 139, 141, 142, 153, 271, 328], "fix": [43, 199, 328], "voltag": [43, 81, 83, 85, 86, 90, 92, 99, 103, 105, 125, 138, 199, 218, 219, 223, 224, 320, 321, 325, 328, 332], "simul": [43, 199, 263, 302, 319, 330, 331, 332], "occur": [43, 81, 86, 122, 142, 199, 205, 218, 320, 321], "dure": [43, 199, 326], "number": [43, 53, 127, 129, 133, 134, 139, 140, 142, 192, 197, 199, 200, 202, 203, 205, 215, 221, 229, 230, 235, 236, 246, 249, 254, 259, 260, 262, 263, 319, 324, 328, 329, 331], "timestep": [43, 57, 81, 85, 90, 91, 92, 97, 99, 103, 104, 105, 108, 110, 115, 125, 126, 147, 193, 199, 208, 212, 214, 218, 219, 220, 221, 224, 226, 229, 233, 235, 239, 244, 246, 249, 253, 254, 260, 263, 302, 320, 321, 329, 330, 332], "iter": [43, 199, 219, 263], "exampl": [43, 127, 128, 129, 133, 141, 191, 192, 193, 195, 199, 202, 204, 212, 213, 214, 215, 219, 226, 227, 229, 230, 233, 234, 235, 236, 244, 245, 246, 247, 253, 254, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 325, 331], "as_tensor": [43, 129, 141, 199, 202, 204, 324, 329], "8": [43, 67, 76, 132, 193, 199, 326, 329], "16": [43, 61, 64, 71, 72, 73, 74, 75, 78, 191, 193, 195, 199, 213, 215, 234, 236, 245, 247, 253, 254, 324], "two": [43, 81, 129, 133, 197, 199, 202, 218, 299, 305, 319, 320, 321, 326, 329, 330, 332], "term": [43, 85, 94, 97, 124, 133, 135, 136, 192, 199, 224, 238, 239, 256, 257, 259, 262, 332], "4000": [43, 199], "0000": [43, 129, 199, 202, 328], "3800": [43, 199], "7600": [43, 199], "each": [43, 81, 129, 133, 135, 141, 192, 199, 202, 218, 262, 320, 321, 324, 329, 331, 332], "repres": [43, 127, 128, 129, 139, 200, 201, 202, 203, 327], "initi": [43, 132, 191, 192, 193, 195, 197, 199, 200, 201, 202, 203, 204, 205, 212, 213, 214, 215, 219, 220, 221, 226, 227, 229, 230, 233, 234, 235, 236, 239, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 262, 263, 328], "delta": [43, 48, 199], "between": [43, 49, 81, 110, 129, 134, 197, 199, 202, 218, 249, 263, 320, 321, 329, 332], "return": [43, 46, 116, 127, 128, 129, 136, 137, 138, 139, 140, 141, 202, 212, 214, 215, 219, 226, 227, 229, 230, 233, 235, 244, 246, 299, 300, 301, 303, 304, 305, 308, 309, 310, 311, 312, 324, 325, 328, 329, 330], "extra": [43, 127, 129, 139], "dimens": [43, 45, 116, 127, 129, 133, 139, 191, 197, 200, 203, 219, 263, 299, 300, 304, 305, 329, 330, 332], "where": [45, 48, 91, 104, 108, 116, 135, 141, 191, 195, 230, 234, 236, 245, 247, 249, 254, 260, 263, 264, 319, 321, 324, 325, 329, 331], "convert": [45, 46, 49, 129, 332], "numer": [45, 46, 129, 136, 323], "represent": 45, "mani": [45, 331, 332], "simpli": [45, 135, 321, 325, 330, 332], "mirror": 45, "aggreg": [45, 136, 137, 138, 192, 262], "differ": [45, 46, 81, 85, 129, 202, 218, 319, 320, 321, 329, 330, 332], "thei": [45, 319, 324, 328, 329, 330, 332], "typic": [45, 129, 136, 202, 299, 319, 329, 332], "first": [45, 81, 116, 141, 142, 197, 204, 205, 218, 263, 299, 320, 321, 324, 326, 328, 332], "therefor": [45, 133, 262, 323, 324, 328, 330, 332], "inject": [45, 329, 330], "lift": [45, 193, 332], "ed": 45, "situat": [45, 328], "you": [45, 304, 319, 324, 325, 326, 328, 329, 330, 331, 332], "need": [45, 133, 142, 262, 324, 326, 330, 331, 332], "pickl": 45, "offer": [46, 326], "wai": [46, 328, 329], "domain": [46, 116, 132, 319, 323, 332], "population_encod": 46, "doe": [46, 328], "rather": [46, 324, 328], "valu": [46, 49, 59, 89, 127, 128, 129, 134, 136, 139, 140, 142, 197, 200, 201, 202, 203, 205, 263, 299, 300, 301, 304, 305, 324, 328, 329, 330, 332], "have": [46, 81, 85, 142, 205, 218, 304, 308, 309, 310, 311, 312, 319, 320, 321, 324, 326, 328, 329, 330, 331, 332], "via": [46, 324, 326, 332], "instanc": [46, 192, 293, 331], "poisson": [46, 127, 128, 140], "simpl": [47, 320, 323, 325, 328, 329, 330, 332], "euclidean": [47, 129, 202], "distanc": [47, 49, 129, 202], "metric": 47, "exponenti": [48, 89, 90, 91, 92, 102, 104, 106, 107, 114, 125, 206, 234, 236, 245, 247, 263, 329], "smooth": [48, 206], "seri": [48, 206, 332], "window": [48, 206, 302], "s": [48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 106, 107, 110, 114, 115, 125, 126, 131, 135, 136, 137, 138, 141, 146, 147, 192, 193, 204, 216, 264, 319, 321, 323, 324, 328, 329, 330, 332], "t": [48, 192, 197, 300, 304, 328, 329, 332], "factor": [48, 88, 129, 202], "math": 48, "e": [48, 133, 262, 308, 309, 310, 311, 312, 319, 323, 330, 331], "filter_inv": 48, "sigma": 49, "gaussian": [49, 129, 131, 202], "radial": [49, 129, 202], "basi": [49, 129, 202], "kernel": [49, 129, 131, 132, 133, 197, 202, 262], "calcul": [49, 129, 202], "given": [49, 116, 124, 191, 303, 304, 328, 329], "mathbf": 49, "below": [49, 133, 326, 327, 329, 330, 331, 332], "exp": [49, 90, 91, 92, 103, 104, 105, 234, 236, 245, 247], "left": [49, 90, 91, 92, 103, 104, 105, 234, 236, 245, 247, 324], "frac": 49, "right": [49, 90, 91, 92, 103, 104, 105, 234, 236, 245, 247, 324, 328], "spread": 49, "distribut": [49, 133, 140, 262, 263, 304, 328], "default": [49, 86, 89, 129, 132, 133, 134, 135, 136, 137, 138, 192, 197, 202, 212, 214, 215, 226, 227, 229, 230, 233, 235, 236, 244, 245, 246, 247, 249, 254, 257, 258, 259, 263, 299, 301, 302, 304, 305, 321, 328, 329], "jit": 53, "scriptfunct": 53, "object": [53, 116, 130, 261, 300, 303, 305, 320, 321, 324], "truncat": 53, "everyth": [53, 330], "els": [53, 328], "h": [53, 86, 197], "n": [53, 86, 116, 133, 191, 197, 263, 326, 332], "begin": [53, 81, 85, 86, 90, 91, 92, 99, 103, 104, 105, 108, 124, 126, 195, 213, 215, 218, 219, 220, 221, 227, 230, 234, 236, 245, 247, 249, 253, 254, 258, 260, 320, 321], "case": [53, 81, 86, 133, 197, 218, 319, 320, 321, 324, 328], "gt": [53, 86], "end": [53, 81, 85, 86, 90, 91, 92, 99, 103, 104, 105, 108, 124, 126, 195, 213, 215, 218, 219, 220, 221, 227, 230, 234, 236, 245, 247, 249, 253, 254, 258, 260, 320, 321], "fire": [55, 56, 57, 86, 89, 90, 91, 92, 94, 97, 99, 102, 103, 104, 105, 106, 107, 108, 114, 124, 208, 209, 210, 227, 230, 238, 239, 324, 329, 330, 332], "input_spik": [57, 91, 104, 108, 141], "iaffeedforwardst": 57, "iafparamet": [57, 208], "feedforward": [57, 208], "singl": [57, 90, 91, 92, 97, 99, 103, 104, 105, 106, 107, 108, 110, 114, 115, 125, 193, 195, 197, 208, 213, 215, 227, 230, 234, 236, 239, 245, 247, 249, 253, 254, 260, 301, 305, 308, 309, 310, 311, 312, 328, 330], "dot": [57, 81, 85, 86, 90, 91, 92, 97, 99, 103, 104, 105, 108, 124, 126, 195, 208, 213, 215, 218, 219, 220, 221, 227, 230, 234, 236, 239, 245, 247, 249, 253, 254, 258, 260, 320, 321, 324], "togeth": [57, 90, 91, 92, 97, 104, 108, 126, 195, 208, 227, 230, 234, 236, 239, 245, 247, 249, 253, 254, 258, 260], "condit": [57, 90, 91, 92, 97, 104, 108, 124, 126, 195, 208, 227, 230, 234, 236, 239, 245, 247, 249, 253, 254, 258, 260], "z": [57, 86, 90, 91, 92, 97, 104, 108, 122, 124, 126, 129, 136, 137, 138, 147, 192, 195, 202, 208, 227, 230, 231, 234, 236, 239, 245, 247, 249, 253, 254, 258, 260, 324, 328, 329], "theta": [57, 86, 90, 91, 92, 97, 104, 108, 124, 126, 195, 208, 227, 230, 234, 236, 239, 245, 247, 249, 253, 254, 258, 260], "v_": [57, 81, 85, 86, 90, 91, 92, 97, 99, 103, 104, 105, 108, 124, 126, 195, 208, 218, 219, 220, 221, 227, 230, 234, 236, 239, 245, 247, 249, 253, 254, 258, 260, 320, 321, 328, 329], "th": [57, 86, 90, 91, 92, 97, 103, 104, 105, 108, 124, 126, 195, 208, 227, 230, 234, 236, 239, 245, 247, 249, 253, 254, 258, 260, 328, 329], "transit": [57, 90, 91, 92, 97, 104, 108, 122, 126, 195, 208, 219, 220, 221, 227, 230, 234, 236, 239, 245, 247, 249, 253, 254, 258, 260], "equat": [57, 81, 90, 91, 92, 97, 104, 108, 124, 126, 195, 208, 218, 219, 220, 221, 227, 230, 234, 236, 239, 245, 247, 249, 253, 254, 258, 260, 320, 321, 332], "leaki": [57, 81, 82, 83, 85, 89, 90, 91, 92, 94, 97, 99, 102, 103, 104, 105, 106, 107, 108, 114, 208, 218, 219, 220, 221, 222, 223, 224, 227, 230, 238, 239, 324, 329, 330, 332], "unus": [57, 208], "ad": [57, 81, 133, 197, 208, 218, 262, 320, 321, 324, 328, 329], "compat": [57, 208, 319], "c": [59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 121, 131, 134, 213, 215, 263, 319, 326], "d": [59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 124, 131, 213, 215, 256, 320, 326, 327], "sq": [59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "04": [59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 328], "mn": [59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "bia": [59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 328], "140": [59, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 213, 215], "30": [59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 191, 213, 215, 234, 253], "tau_inv": [59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "250": [59, 62, 63, 64, 66, 67, 68, 70, 72, 75, 76, 77, 78, 79, 80, 302], "av": 59, "scale": [59, 129, 130, 132, 133, 134, 202, 261, 262, 263, 320, 321, 328, 331], "recoveri": [59, 217, 332], "smaller": [59, 329], "result": [59, 91, 104, 108, 127, 139, 142, 200, 203, 205, 234, 328, 329], "slower": [59, 329], "sensit": 59, "subthreshold": 59, "fluctuat": 59, "greater": 59, "coupl": [59, 89, 249], "more": [59, 81, 85, 86, 90, 91, 92, 97, 99, 103, 104, 105, 108, 124, 126, 135, 195, 213, 215, 219, 220, 221, 224, 225, 227, 230, 234, 236, 239, 245, 247, 253, 254, 256, 258, 260, 308, 309, 310, 311, 312, 319, 320, 321, 324, 326, 327, 328, 330, 331, 332], "strongli": 59, "possibl": [59, 323, 325, 330], "oscil": 59, "low": 59, "dynam": [59, 81, 85, 86, 124, 321, 324, 327, 328], "after": [59, 212, 214, 219, 226, 229, 233, 235, 244, 246, 328], "caus": 59, "slow": [59, 81, 218, 320, 321], "high": [59, 319, 323], "na": [59, 89], "squar": [59, 132, 133, 262], "izhikevichparamet": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 212, 214, 215, 216], "izhikevichst": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 212, 214, 215, 216], "behavior": [60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 216, 302], "izhikevichspikingbehavior": [61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 212, 213, 214, 215, 302], "02": [61, 63, 67, 68, 70, 71, 72, 77, 79, 80, 304, 328], "55": [61, 63, 68, 70, 71], "500": 61, "65": [61, 64, 72, 76, 77, 80], "requires_grad": [61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 328], "true": [61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 226, 227, 229, 230, 262, 299, 300, 303, 304, 328], "26": [62, 64, 75, 78], "61": [62, 328], "15": 62, "8600": 62, "6": [63, 68, 72, 77, 80, 193, 319, 328], "108": [63, 68, 328], "64": [64, 71, 72, 73, 74, 191], "6400": 64, "21": [65, 327], "14": [65, 70, 76, 77, 79, 80, 328], "026": 66, "63": [66, 67], "25": [71, 72, 73, 74], "05": [71, 78], "03": [73, 74, 328], "52": 73, "62": [75, 78], "1200": [75, 78], "01": [76, 328], "describ": [81, 85, 86, 131, 218, 224, 319, 320, 321, 324, 325, 326, 331, 332], "incom": [81, 85, 218, 224, 263, 320, 321, 332], "over": [81, 85, 86, 90, 91, 92, 103, 104, 105, 133, 135, 138, 191, 218, 219, 224, 234, 236, 245, 247, 262, 263, 264, 298, 303, 320, 321, 324, 329, 330, 332], "never": [81, 85, 218, 224, 320, 321, 332], "other": [81, 85, 106, 107, 125, 134, 135, 191, 218, 224, 264, 319, 320, 321, 328, 329, 332], "word": [81, 85, 191, 218, 224, 320, 321, 329, 332], "add": [81, 85, 124, 218, 224, 320, 321, 326], "up": [81, 85, 218, 224, 262, 320, 321, 324, 328, 331], "while": [81, 85, 218, 224, 319, 320, 321, 323, 328, 332], "out": [81, 85, 94, 197, 218, 224, 238, 259, 320, 321, 326, 328], "everi": [81, 85, 218, 224, 262, 320, 321], "align": [81, 85, 86, 90, 91, 92, 99, 103, 104, 105, 108, 124, 126, 195, 213, 215, 218, 219, 220, 221, 227, 230, 234, 236, 245, 247, 249, 253, 254, 258, 260, 320, 321], "across": [81, 218, 320, 321], "chang": [81, 86, 129, 134, 202, 218, 263, 320, 321, 324], "second": [81, 197, 218, 299, 320, 321, 329], "flow": [81, 218, 320, 321], "notic": [81, 218, 320, 321, 330], "both": [81, 133, 191, 192, 193, 195, 197, 199, 200, 201, 202, 203, 204, 205, 212, 213, 214, 215, 218, 219, 220, 221, 226, 227, 229, 230, 233, 234, 235, 236, 239, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 262, 263, 320, 321, 323, 328, 332], "parameter": [81, 218, 320, 321], "tau": [81, 218, 320, 321], "control": [81, 86, 218, 320, 321, 328, 331], "fast": [81, 141, 204, 218, 320, 321], "larg": [81, 218, 320, 321, 323, 328, 331], "mean": [81, 124, 218, 308, 309, 310, 311, 319, 320, 321, 324, 326, 328, 332], "small": [81, 218, 320, 321], "call": [81, 218, 320, 321, 325, 328, 329, 331, 332], "avoid": [81, 218, 320, 321], "recalcul": [81, 218, 320, 321], "mem_inv": [81, 218, 320, 321], "syn_inv": [81, 218, 320, 321], "respect": [81, 129, 195, 202, 218, 230, 236, 245, 247, 249, 254, 260, 320, 321], "so": [81, 85, 218, 319, 320, 321, 324, 328, 329, 330, 331], "rapid": [81, 218, 320, 321], "recal": [81, 218, 320, 321, 331], "charg": [81, 218, 320, 321], "point": [81, 86, 218, 300, 320, 321, 324, 329], "rate": [81, 141, 204, 218, 320, 321, 331], "being": [81, 218, 320, 321, 324], "subtract": [81, 218, 320, 321], "inform": [81, 85, 86, 136, 224, 225, 256, 297, 319, 320, 321, 326, 329], "found": [81, 85, 86, 319, 321, 324, 327, 328, 332], "wikipedia": [81, 85, 86, 135, 218, 320, 321], "book": [81, 85, 86, 321], "w": [81, 85, 86, 124, 197, 219, 220, 221, 256, 320, 321, 324], "gerstner": [81, 85, 86, 321], "et": [81, 85, 86, 130, 261, 320, 321], "al": [81, 85, 86, 130, 261, 320, 321], "freeli": [81, 85, 86, 321], "onlin": [81, 85, 86, 103, 104, 105, 245, 247, 321], "listat": [84, 219], "liparamet": [84, 219, 220, 221, 329], "from": [85, 89, 90, 91, 92, 103, 104, 105, 106, 107, 122, 125, 130, 132, 133, 134, 136, 137, 138, 192, 197, 212, 213, 214, 215, 219, 226, 229, 233, 234, 235, 236, 244, 245, 246, 247, 257, 259, 261, 262, 263, 300, 302, 305, 308, 309, 310, 311, 312, 319, 320, 321, 323, 324, 325, 327, 328, 329, 332], "_": [85, 116, 137, 191, 303, 305, 325, 328, 329], "exclud": 85, "ani": [85, 116, 136, 137, 138, 192, 299, 301, 303, 305, 308, 309, 310, 311, 312, 323, 324, 328, 331, 332], "immedi": [85, 329, 332], "stepwis": 85, "impact": 85, "henc": 85, "box": [85, 94, 96, 224, 238, 241, 324], "popular": [86, 94, 225, 238, 320, 321, 332], "combin": [86, 94, 133, 225, 238, 262, 320, 321, 329], "leaky_integr": [86, 94, 225, 238, 320, 321], "produc": [86, 94, 197, 225, 238, 320, 321, 329], "inflow": 86, "see": [86, 127, 128, 129, 130, 133, 141, 197, 204, 218, 224, 225, 256, 261, 319, 320, 321, 324, 326, 328, 329, 330, 332], "stand": 86, "increas": [86, 129, 202, 329, 332], "certain": [86, 324, 331, 332], "regular": [86, 116, 124, 192, 330], "artifici": [86, 319, 329, 332], "behaviour": [86, 263, 329], "set": [86, 129, 134, 202, 215, 229, 230, 235, 236, 246, 263, 303, 329, 330], "field": [86, 129, 130, 132, 133, 134, 202, 261, 262, 263], "superspik": [86, 324, 332], "synthet": 86, "approach": [86, 327, 328, 332], "heavisid": 86, "lifadex": [88, 90, 92], "adaptation_curr": [89, 90, 91, 92, 233, 234, 235, 236], "adaptation_spik": [89, 90, 91, 92, 233, 234, 235, 236], "0200": [89, 90, 91, 92, 233, 234, 235, 236, 328], "delta_t": [89, 90, 91, 92, 102, 103, 104, 105, 233, 234, 235, 236, 244, 245, 246, 247], "5000": [89, 90, 91, 92, 102, 103, 104, 105, 233, 234, 235, 236, 244, 245, 246, 247], "tau_ada_inv": [89, 90, 91, 92, 233, 234, 235, 236], "neuralensembl": 89, "pynn": 89, "ns": [89, 90, 92], "trigger": 89, "sharp": [89, 102], "speed": [89, 102, 323], "growth": [89, 102], "ada": [89, 90, 91, 92, 234, 236], "lifadexparamet": [90, 91, 92, 233, 234, 235, 236], "www": [90, 91, 92, 127, 128, 147, 234, 236], "scholarpedia": [90, 91, 92, 147, 234, 236], "articl": [90, 91, 92, 134, 147, 234, 236, 325, 331], "adaptive_exponential_integr": [90, 91, 92, 234, 236], "fire_model": [90, 91, 92, 234, 236], "implement": [90, 91, 92, 94, 97, 99, 103, 104, 105, 106, 107, 108, 114, 125, 126, 195, 197, 213, 215, 219, 220, 221, 227, 230, 234, 236, 238, 239, 245, 247, 253, 254, 258, 260, 320, 321, 328, 329, 332], "one": [90, 91, 92, 97, 99, 103, 104, 105, 108, 126, 127, 133, 136, 139, 195, 200, 203, 213, 215, 227, 230, 234, 236, 239, 245, 247, 253, 254, 258, 260, 262, 319, 325, 329, 330, 331, 332], "follow": [90, 91, 92, 97, 99, 103, 104, 105, 108, 126, 195, 213, 215, 227, 230, 234, 236, 239, 245, 247, 253, 254, 258, 260, 319, 323, 324, 328, 332], "od": [90, 91, 92, 97, 99, 103, 104, 105, 108, 126, 195, 213, 215, 219, 220, 221, 227, 230, 234, 236, 239, 245, 247, 253, 254, 258, 260], "a_": [90, 91, 92, 234, 236], "i_": [90, 91, 92, 104, 108, 219, 220, 221, 234], "z_": [90, 91, 92, 195, 230, 236, 245, 247, 249, 254, 260], "rec": [90, 91, 92, 195, 230, 236, 245, 247, 249, 254, 260], "lifadexfeedforwardst": 91, "It": [91, 94, 97, 104, 108, 135, 234, 238, 239, 320, 321, 324, 325, 328, 331], "take": [91, 97, 104, 108, 116, 129, 136, 141, 202, 204, 234, 239, 263, 326, 328, 329, 330, 332], "gener": [91, 97, 104, 108, 127, 128, 133, 134, 139, 140, 197, 234, 239, 262, 263, 304, 308, 309, 310, 311, 312, 328], "arbitrari": [91, 97, 104, 108, 234, 239, 259, 263], "meant": [91, 104, 108, 234, 319, 332], "appli": [91, 104, 108, 116, 124, 191, 192, 193, 197, 226, 227, 229, 230, 234, 308, 309, 310, 311, 312, 319, 324, 327, 332], "simplifi": [94, 238, 320, 321, 324, 325], "compar": [94, 238, 320, 321, 329], "leav": [94, 238, 320, 321, 328], "make": [94, 141, 204, 238, 300, 320, 321, 326, 330], "computation": [94, 238, 320, 321, 324, 332], "simpler": [94, 238, 320, 321], "imposs": [94, 238, 320, 321], "physic": [94, 238, 320, 321], "system": [94, 238, 319, 320, 321, 324, 328, 330, 332], "becaus": [94, 133, 238, 262, 320, 321, 323, 326, 328, 330, 332], "cannot": [94, 238, 320, 321, 330], "natur": [94, 238, 320, 321, 324, 330], "sudden": [94, 238, 320, 321], "give": [94, 238, 320, 321, 331], "its": [94, 129, 202, 238, 320, 321, 324, 329], "name": [94, 238, 300, 304, 308, 309, 310, 311, 312, 319, 320, 321, 329], "shift": [94, 238, 320, 321], "instantan": [94, 224, 238, 320, 321], "drawn": [94, 133, 238, 262, 320, 321], "lifboxfeedforwardst": [97, 239], "lifboxparamet": [97, 239], "without": [97, 133, 213, 215, 219, 220, 227, 230, 234, 239, 245, 253, 257, 258, 262, 326, 331, 332], "lifex": [101, 103, 105, 234, 247], "lifexparamet": [103, 104, 105, 244, 245, 246, 247], "neuronaldynam": [103, 104, 105, 245, 247], "epfl": [103, 104, 105, 245, 247], "ch": [103, 104, 105, 245, 247], "ch5": [103, 104, 105, 245, 247], "s2": [103, 104, 105, 245, 247], "html": [103, 104, 105, 197, 245, 247, 325, 328, 330, 332], "lifexfeedforwardst": 104, "adjoint": [106, 107, 114, 125, 257, 258, 259, 260, 328], "backward": [106, 107, 114, 125, 328], "synaps": [106, 107, 114, 125], "cell": [106, 107, 125, 136, 137, 138, 141, 192, 204, 213, 220, 221, 258, 301, 303, 328, 329, 332], "g_coupl": [110, 112, 249, 251], "multi": [110, 249], "compart": [110, 249], "weight": [110, 125, 215, 221, 229, 230, 235, 236, 246, 297, 328], "lifrefracfeedforwardst": [112, 114, 115], "lifrefracparamet": [112, 114, 115, 251, 253, 254], "none": [116, 127, 128, 129, 134, 136, 137, 138, 139, 140, 192, 197, 202, 204, 215, 244, 246, 249, 251, 262, 263, 299, 301, 303, 304, 305, 308, 309, 310, 311, 312, 328, 329], "creat": [116, 131, 132, 133, 140, 262, 263, 319, 323, 326, 330], "callabl": [116, 129, 202, 263, 308, 309, 310, 311, 312], "later": [116, 135, 192, 321, 324, 331], "wa": 116, "now": [116, 323, 324, 325, 326, 328, 332], "assum": [116, 127, 128, 139, 140, 141, 200, 201, 203, 204, 303, 308, 309, 310, 311, 312, 319, 330], "whose": [116, 129, 202, 329], "option": [116, 134, 136, 137, 138, 192, 197, 249, 251, 263, 299, 301, 304, 319], "output": [116, 129, 133, 135, 191, 195, 197, 202, 213, 234, 236, 245, 247, 253, 254, 257, 259, 262, 308, 309, 310, 311, 312, 321, 328, 329, 330, 332], "hand": 116, "when": [116, 124, 133, 140, 308, 309, 310, 311, 312, 324, 326, 332], "outer": [116, 191, 330], "applic": [116, 212, 214, 219, 226, 229, 233, 235, 244, 246, 323, 324, 327, 328, 329], "provid": [116, 118, 119, 120, 121, 122, 133, 134, 191, 263, 323, 326, 330, 331, 332], "shape": [116, 197, 259, 263, 325, 328, 329], "bitvector": [118, 119, 120, 121, 122], "xor": 120, "y_prev": 121, "x_1": 121, "x_2": 121, "muller": 121, "element": [121, 197, 327], "next": [121, 324], "previou": [121, 332], "z_prev": 122, "whether": [122, 226, 227, 229, 230, 303], "ha": [122, 138, 319, 323, 324, 325, 326, 328], "long": [124, 256, 257, 259, 332], "short": [124, 147, 256, 257, 259, 319, 332], "memori": [124, 256, 257, 259, 332], "build": [124, 256, 319, 320, 324, 325, 326, 331, 332], "work": [124, 193, 256, 305, 308, 309, 310, 311, 312, 319, 320, 323, 324, 326, 328, 329, 330], "g": [124, 256, 320, 327, 330, 331], "bellec": [124, 256, 320, 331], "salaj": [124, 256, 320, 331], "subramonei": [124, 256, 320], "r": [124, 141, 192, 204, 256, 320], "legenstein": [124, 256, 320, 331], "maass": [124, 256, 320, 331], "igitugraz": [124, 256, 320], "offici": [124, 256, 320, 326], "similar": [124, 142, 205, 305, 330, 331], "contrast": [124, 329], "practic": [124, 324, 328], "less": [124, 332], "same": [124, 197, 304, 324, 329], "lsnnfeedforwardst": [125, 126], "lsnnparamet": [125, 126, 257, 258, 259, 260], "threshhold": 125, "input_weight": [125, 215, 229, 230, 235, 236, 246], "recurrent_weight": [125, 215, 229, 230, 235, 236, 246], "recurr": [125, 193, 195, 213, 215, 219, 220, 227, 229, 230, 231, 233, 234, 235, 236, 245, 246, 247, 249, 253, 254, 257, 258, 259, 260, 327, 329, 330, 331, 332], "unit": [125, 126, 258, 260, 329], "input_valu": [127, 128, 129, 139, 140], "f_max": [127, 128, 139, 140, 200, 201, 203], "rang": [127, 128, 139, 200, 201, 203, 263, 300, 304, 324, 328, 329], "higher": [127, 139, 200, 203, 326, 329, 332], "binari": [127, 128, 130, 139, 200, 201, 261, 320, 321, 329, 332], "cn": [127, 128], "nyu": [127, 128], "edu": [127, 128], "david": [127, 128, 327], "handout": [127, 128], "pdf": [127, 128, 299, 300, 301, 302, 304, 305], "interv": [127, 128, 139, 140], "sequence_length": [127, 139, 142, 200, 203, 205], "maxim": [127, 128, 139, 140, 200, 201, 203], "frequenc": [127, 128, 139, 140, 200, 201, 203], "hertz": [127, 128, 139, 140, 200, 201, 203], "emit": [127, 128, 139, 140, 200, 201, 203, 330, 332], "should": [127, 128, 134, 136, 139, 140, 142, 200, 201, 203, 205, 263, 304, 324, 325, 328, 330, 332], "coincid": [127, 128, 139, 140, 142, 200, 201, 203, 205], "pseudorandom": [127, 139, 140], "usual": [127, 139, 140], "manual_se": [127, 139, 140], "seed": [127, 139, 140], "pass": [127, 139, 140, 193, 197, 262, 329, 332], "argument": [127, 131, 132, 133, 134, 139, 140, 193, 197, 227, 262, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312], "1000": [128, 140, 191, 201, 329], "out_featur": [129, 202], "union": [129, 133, 197, 202, 262], "gaussian_rbf": [129, 202], "distance_funct": [129, 202], "euclidean_dist": [129, 202], "popul": [129, 202, 328], "singular": [129, 202], "list": [129, 133, 193, 202, 262, 303, 304, 326, 327, 328, 332], "length": [129, 202, 304], "equal": [129, 132, 202, 327], "visualis": [129, 202, 302, 326], "imagin": [129, 202, 324], "get": [129, 202, 326, 327, 328, 330, 332], "close": [129, 202, 324, 326, 328, 329], "recept": [129, 130, 132, 133, 134, 202, 261, 262, 263], "curv": [129, 202, 332], "imag": [129, 197, 202, 312, 328, 331], "credit": [129, 202], "andrew": [129, 202], "richardson": [129, 202], "3": [129, 180, 192, 193, 202, 303, 304, 319, 326, 328, 329, 332], "pop_encod": 129, "8825": [129, 202], "6065": [129, 202], "poisson_encod": 129, "squeez": [129, 304], "per": [129, 202], "maximum": [129, 134, 202, 263], "also": [129, 202, 215, 221, 229, 230, 235, 236, 246, 249, 254, 259, 260, 319, 324, 326, 328, 329, 331, 332], "individu": [129, 202], "sampl": [129, 132, 202, 304, 328, 332], "center": [129, 202, 323], "index": [129, 202, 328], "actual": [129, 202, 330], "stimulu": 129, "abov": [129, 197, 215, 229, 230, 235, 236, 246, 324, 329, 330, 331, 332], "deriv": [130, 133, 261, 262, 320, 321, 324], "space": [130, 133, 197, 261, 262, 263, 320, 321, 329], "theori": [130, 261, 320, 321], "paper": [130, 261, 319, 320, 321, 331], "norm": [130, 261, 320, 321], "visual": [130, 141, 204, 261, 320, 321, 324], "lindeberg": [130, 134, 261, 320, 321], "2021": [130, 261, 319, 320, 321, 327], "For": [130, 141, 204, 261, 320, 321, 323, 324, 326, 328, 332], "signal": [130, 261, 320, 321, 332], "translat": [130, 261, 320, 321], "invari": [130, 261, 320, 321], "pedersen": [130, 261, 319, 320, 321, 323, 327], "2023": [130, 261, 320, 321, 327], "effici": [131, 323, 332], "2d": [131, 141, 197, 298, 302, 305], "matrix": [131, 215, 229, 230, 235, 236, 246], "varianc": 131, "2x2": 131, "covari": 131, "eccentr": [131, 132, 133, 262], "angl": [132, 133, 262], "ratio": [132, 133, 262], "rotat": 132, "radian": 132, "pixel": [132, 133, 262], "coordin": 132, "n_scale": [133, 134, 262, 263], "n_angl": [133, 262], "n_ratio": [133, 262], "min_scal": [133, 134, 262, 263], "max_scal": [133, 134, 262, 263], "min_ratio": [133, 262], "max_ratio": [133, 262], "1st": 133, "direct": [133, 197, 323], "decid": [133, 136, 262], "scan": [133, 262], "exist": [133, 262, 319, 324, 326, 328, 330, 332], "perfectli": [133, 262], "symmetr": [133, 262], "reason": [133, 262, 326], "howev": [133, 262, 319, 324, 328], "still": [133, 262], "final": [133, 324, 328, 332], "come": [133, 328], "spatial": [133, 262], "logarithm": [133, 134, 262, 263], "angular": [133, 262], "orient": [133, 262, 327], "flat": [133, 262], "either": [133, 197, 324, 325, 326, 332], "made": 133, "except": 133, "omit": [133, 224], "Or": [133, 326], "specifi": 133, "partial_x": 133, "partial": [133, 323, 329], "2_y": 133, "41421": [134, 263], "accord": 134, "lindeberg2016": 134, "minimum": [134, 263], "If": [134, 262, 263, 304, 319, 325, 326, 328, 329, 330, 331, 332], "ignor": [134, 263, 324], "exclus": [134, 263], "sqrt": [134, 263], "2016": 134, "causal": 134, "recurs": 134, "spatio": 134, "link": [134, 331], "springer": [134, 327], "com": [134, 319, 326, 328], "1007": [134, 327], "s10851": 134, "015": 134, "0613": [134, 328], "9": [134, 326, 328, 329], "oper": [135, 197, 264, 329, 332], "layer": [135, 193, 212, 214, 219, 226, 229, 233, 235, 244, 246, 257, 259, 264, 298, 300, 304, 305, 321, 324, 328, 329, 330], "desir": [135, 264, 321], "properti": [135, 138, 264, 321, 323], "aim": [135, 319, 321], "collect": [135, 321], "just": [135, 321, 328, 329], "job": [135, 321], "user": [135, 321, 324], "error": [135, 136, 192, 321], "read": [135, 308, 309, 310, 311, 312, 319, 321, 324, 330], "accumul": [136, 137, 138, 192], "spike_accumul": [136, 192], "push": 136, "futur": 136, "inclus": 136, "total": [137, 328], "sum": [137, 262, 309, 311, 320, 328], "integ": 137, "new": [137, 138, 324, 326, 330], "regularizationst": [137, 138], "all": [138, 141, 197, 204, 212, 214, 219, 226, 229, 233, 235, 244, 246, 262, 319, 324, 328, 329, 331], "entri": 138, "sign": [140, 203], "vector": 140, "remov": [141, 204, 215, 229, 230, 235, 236, 246, 326], "basic": [141, 204, 330, 332], "measur": [141, 204, 328], "sens": [141, 204, 323, 327, 329], "strong": [141, 204], "van": [141, 204], "rullen": [141, 204], "thorp": [141, 204], "2001": [141, 204], "versu": [141, 204], "order": [141, 204, 303, 328], "retin": [141, 204], "ganglion": [141, 204], "tell": [141, 204], "cortex": [141, 204], "identifi": [141, 204, 329], "uniqu": [141, 204], "posit": [141, 142, 204, 328], "within": [141, 323, 332], "sequenc": [141, 191, 212, 214, 226, 229, 233, 235, 244, 246, 327, 329], "least": 141, "retain": 141, "constantcurrentlifencod": [142, 204, 205, 325, 328], "thought": [142, 205], "infinit": [142, 205], "z_pre": 146, "z_post": 146, "stdpsensorst": 146, "stdpsensorparamet": 146, "pre": [146, 328], "tsodyksmakramst": 147, "tsodyksmakramparamet": 147, "stp": 147, "term_synaptic_plast": 147, "exp_filt": 154, "adher": [190, 320, 325], "nn": [190, 191, 192, 193, 195, 197, 199, 200, 201, 202, 203, 204, 205, 212, 213, 214, 215, 219, 220, 221, 226, 227, 229, 230, 233, 234, 235, 236, 239, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 262, 263, 264, 320, 325, 328, 330], "interfac": [190, 320, 326, 331], "batch_siz": [191, 195, 213, 215, 234, 236, 245, 247, 253, 254, 325, 328], "in_channel": [191, 197, 262], "out_channel": [191, 197], "32": [191, 328], "conv2d": [191, 193, 197, 262], "randn": [191, 195, 213, 234, 236, 245, 247, 253, 254, 299, 300, 301, 305, 324, 325, 328], "sequenti": [191, 193, 204, 330], "intern": [191, 192, 193, 195, 197, 199, 200, 201, 202, 203, 204, 205, 212, 213, 214, 215, 219, 220, 221, 226, 227, 229, 230, 233, 234, 235, 236, 239, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 262, 263, 327, 328], "share": [191, 192, 193, 195, 197, 199, 200, 201, 202, 203, 204, 205, 212, 213, 214, 215, 219, 220, 221, 226, 227, 229, 230, 233, 234, 235, 236, 239, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 262, 263], "scriptmodul": [191, 192, 193, 195, 197, 199, 200, 201, 202, 203, 204, 205, 212, 213, 214, 215, 219, 220, 221, 226, 227, 229, 230, 233, 234, 235, 236, 239, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 262, 263], "regularis": [192, 264], "loss": [192, 328], "import": [192, 193, 213, 215, 257, 259, 300, 302, 305, 308, 309, 310, 311, 312, 325, 328, 329, 330, 331, 332], "lifcel": [192, 226, 308, 309, 310, 311, 312, 324, 325, 329, 332], "ones": [192, 193, 301, 303, 328, 330, 332], "batch": [192, 193, 212, 214, 215, 226, 227, 229, 230, 233, 235, 244, 246, 328, 331], "regularization_term": 192, "1e": 192, "arg": [193, 197, 204, 214, 325, 328], "handl": [193, 330], "snn": [193, 263, 308, 309, 310, 311, 312, 324, 327, 332], "channel": [193, 197, 262, 263, 326], "flatten": 193, "12": 193, "lifrecurr": 193, "lsnnrecurr": [193, 332], "rnn": [193, 329, 330], "input_s": [195, 214, 215, 221, 229, 230, 235, 236, 245, 246, 247, 249, 251, 254, 259, 260, 328], "hidden_s": [195, 214, 215, 221, 229, 230, 235, 236, 245, 246, 247, 249, 251, 254, 259, 260, 328], "c_": [195, 197], "e_": 195, "rev_": 195, "rev_i": 195, "relu": [195, 329], "w_": [195, 197, 230, 236, 247, 249, 254, 260], "hidden": [195, 215, 221, 229, 230, 235, 236, 245, 246, 247, 249, 254, 259, 260, 328], "s0": [195, 213, 234, 236, 245, 247, 253, 254], "kernel_s": 197, "stride": 197, "pad": 197, "dilat": 197, "group": 197, "devic": [197, 325, 328, 331], "dtype": 197, "pointwis": 197, "doc": [197, 319], "stabl": [197, 328], "highlight": 197, "document": [197, 308, 309, 310, 311, 312, 319, 332], "reproduc": 197, "part": [197, 324, 332], "here": [197, 319, 325, 326, 328, 332], "expect": [197, 300, 304, 319, 328, 329, 330, 332], "notat": 197, "referenc": 197, "turn": [197, 328, 329], "simplest": [197, 329], "ext": 197, "h_": 197, "along": 197, "denot": [197, 263], "groups_not": 197, "height": 197, "width": 197, "convolv": 197, "four": [197, 300, 304], "side": 197, "block": [197, 320], "connect": [197, 215, 229, 230, 235, 236, 245, 246, 247, 249, 254, 328], "constant_current_lif_encod": 199, "kwarg": [204, 212, 213, 214, 215, 219, 220, 226, 227, 229, 230, 233, 234, 235, 236, 244, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 262, 299, 300, 301, 303, 304, 305, 328], "arrai": 204, "thumb": 206, "techiqu": 206, "spiking_method": [212, 213, 214, 215], "wrap": [212, 214, 219, 226, 229, 233, 235, 244, 246, 330], "izhikevichcel": 212, "keep": [212, 214, 226, 229, 233, 235, 244, 246, 319, 324, 327, 330, 332], "last": [212, 214, 219, 226, 229, 233, 235, 244, 246, 328, 329], "l": [212, 214, 215, 219, 226, 227, 229, 230, 233, 235, 244, 246, 300, 304, 327], "allow": [212, 214, 215, 224, 226, 229, 230, 233, 235, 236, 244, 245, 246, 247, 249, 254, 257, 258, 259, 326, 332], "configur": [212, 214, 226, 229, 233, 235, 244, 246, 257, 258, 259, 330, 331], "optimiz": [212, 214, 226, 229, 233, 235, 244, 246, 257, 258, 259], "04v\u00b2": [213, 215], "5v": [213, 215], "bv": [213, 215], "tonic": [213, 215], "tonic_spik": [213, 215, 302], "izhikevichrecurrentcel": 214, "known": [215, 221, 230, 236, 249, 254, 259, 260, 326], "featur": [215, 221, 230, 236, 249, 254, 259, 260, 326, 332], "random": [215, 229, 230, 235, 236, 246, 328, 332], "normal": [215, 229, 230, 235, 236, 246, 324, 328], "autaps": [215, 229, 230, 235, 236, 245, 246, 249, 254, 328], "bool": [215, 226, 227, 229, 230, 235, 236, 245, 246, 247, 249, 254, 257, 258, 259, 260, 262, 299, 300, 303, 304], "self": [215, 229, 230, 235, 236, 245, 246, 247, 249, 254, 319, 325, 328], "fals": [215, 226, 227, 229, 230, 235, 236, 245, 246, 247, 249, 254, 257, 258, 259, 260, 262, 299, 300, 304, 328, 329], "Will": [215, 229, 230, 235, 236, 246, 263], "custom": [215, 229, 230, 235, 236, 246, 319], "licel": [219, 328], "_outer_": 219, "discret": [219, 220, 221, 332], "linear": [221, 328, 329, 330], "particular": [224, 329], "veri": [225, 320, 328, 331], "lifstat": [226, 227, 229, 230], "spars": [226, 227, 229, 230, 319, 323, 329, 332], "lifrecurrentcel": [229, 328], "lifadexcel": 233, "lifadexlay": 233, "lifexst": [233, 244, 246], "lif_ex": 234, "lifadexrecurrentcel": 235, "lifadexst": 235, "lifexcel": 244, "lifexrecurrentcel": 246, "g_": 249, "refrac": [253, 254], "z_r": [253, 254], "rho_": [253, 254], "1803": [257, 259], "09574": [257, 259], "usag": [257, 259], "wit": 259, "dimension": [262, 263, 299, 301], "output_channel": 262, "map": 262, "mai": [262, 294, 322, 324], "blow": 262, "complex": [262, 330], "underli": [262, 324], "snncell": 263, "leaky_integrator_box": 263, "liboxcel": 263, "activation_state_map": 263, "namedtupl": [263, 324], "lambda": 263, "time_const": 263, "select": [263, 326], "scatter": [263, 300, 304], "linspac": 263, "sinc": [263, 324, 325, 329], "liboxparamet": 263, "hardcod": 263, "overwrit": 263, "automat": [263, 324], "stai": 293, "intact": 293, "properli": 293, "propag": 293, "subpackag": [294, 322], "matplotlib": [294, 299, 300, 301, 304, 305, 322, 328, 329], "tensorboard": [294, 326, 331], "3d": [298, 300], "ax": [299, 300, 301, 303, 304, 305, 328], "show_colorbar": [299, 300, 304], "heatmat": 299, "28": [299, 300, 325, 328], "png": [299, 300, 301, 302, 304, 305], "hire": [299, 300, 301, 302, 304, 305], "id": 299, "axi": [299, 301, 305, 332], "pyplot": [299, 300, 301, 304, 305, 328, 329], "gca": [299, 301, 305], "show": [299, 300, 304, 305, 310, 311, 319, 324, 326, 329, 330], "colorbar": [299, 300, 304], "kei": [299, 300, 301, 304, 305, 308, 309, 310, 311, 312], "style": [299, 300, 301, 304, 305, 328, 329], "figur": [299, 300, 301, 304, 305, 324, 329], "fed": [299, 300, 301, 304, 305], "imshow": [299, 300, 305], "heatmap": 300, "sever": [300, 328, 332], "instead": [300, 328], "dispers": 300, "plt": [300, 303, 304, 305, 328, 329], "namedtensor": [300, 304], "histogram": [301, 310, 311, 328], "hist": [301, 328], "time_print": 302, "time_curr": 302, "timestep_print": 302, "izhikevich": [302, 324], "By": [302, 329], "250m": 302, "1m": 302, "strengh": 302, "goe": 302, "label": [303, 328, 329, 331], "line": [303, 308, 309, 326, 328, 329, 331], "render": 303, "further": [303, 329, 330, 331], "manipul": [303, 329], "multipl": 304, "shown": [304, 332], "subplot": [304, 328], "three": [304, 319, 326, 332], "bernoulli": 304, "sample_shap": 304, "grid": [304, 329], "diagram": 305, "plot_heatmap_2d": 305, "black": [305, 324], "white": [305, 332], "meth": 305, "write": [307, 324, 328], "writer": [308, 309, 310, 311, 312], "summarywrit": [308, 309, 310, 311, 312], "hook": [308, 309, 310, 311, 312], "plot": [308, 309, 310, 311, 312, 328, 329], "That": [308, 309, 310, 311, 312], "onli": [308, 309, 310, 311, 312, 328, 329, 330, 332], "about": [308, 309, 310, 311, 312, 319, 327, 328, 330, 331, 332], "register_forward_hook": [308, 309, 310, 311, 312], "regist": [308, 309, 310, 311, 312, 325, 326, 328], "relat": 313, "exploit": 319, "advantag": [319, 328], "inspir": [319, 324, 327, 329, 331], "fundament": [319, 324, 328, 332], "expand": 319, "primit": [319, 325], "bring": 319, "modern": 319, "proven": 319, "infrastructur": [319, 323], "github": [319, 326, 332], "io": [319, 326, 328, 332], "To": [319, 324, 325, 326, 329, 330, 332], "try": [319, 326], "best": [319, 328], "jupyt": [319, 326, 328], "notebook": [319, 328, 329, 330], "googl": [319, 327], "collab": 319, "altern": [319, 331], "task": [319, 325, 326, 327, 328, 332], "python": [319, 324, 326, 328, 331, 332], "m": [319, 325, 327, 328, 331], "quickstart": 319, "your": [319, 324, 325, 326, 330], "own": [319, 323, 324, 325, 330, 332], "explain": [319, 324, 332], "few": [319, 327], "concept": [319, 324], "7": [319, 326, 328], "termin": 319, "friendli": 319, "environ": [319, 326, 331], "necessari": [319, 324, 325], "detail": [319, 326, 327, 330, 331], "instruct": 319, "methodinstructionsprerequisit": 319, "pypi": 319, "pip": [319, 331], "qu": 319, "git": [319, 326], "With": [319, 328, 332], "docker": 319, "pull": [319, 326], "quai": [319, 326], "conda": 319, "anaconda": 319, "miniconda": 319, "bundl": 319, "correct": [319, 325, 328, 332], "sscce": 319, "invok": [319, 328], "directori": [319, 324, 326], "our": [319, 323, 325, 326, 328, 330, 332], "consol": 319, "help": [319, 331], "classif": [319, 331], "cifar": [319, 331], "cifar10": 319, "balanc": [319, 331], "polici": 319, "demonstr": [319, 324, 328, 330, 331], "variant": 319, "mnist_pl": [319, 331], "gpu": [319, 325, 331], "introduct": [319, 328, 330, 332], "visit": 319, "port": [319, 332], "complet": [319, 327], "scratch": 319, "motiv": [319, 323, 329], "briefli": 319, "unfortun": [319, 324], "intens": 319, "hardwar": [319, 323, 326, 327, 329], "acceler": [319, 327, 332], "dedic": 319, "warmli": 319, "encourag": 319, "alwai": [319, 328, 330], "welcom": 319, "wish": [319, 324, 330], "guidelin": 319, "christian": [319, 323, 327, 328], "pehl": [319, 323, 327, 328], "cpehl": 319, "postdoc": 319, "univers": 319, "germani": [319, 323], "jen": [319, 323, 327], "jegp": 319, "doctor": 319, "student": 319, "kth": 319, "royal": 319, "institut": 319, "technolog": 319, "sweden": [319, 323], "research": [319, 323, 329, 332], "receiv": [319, 323], "fund": [319, 323], "ec": [319, 323], "horizon": [319, 323], "2020": [319, 323], "framework": [319, 323, 327], "programm": [319, 323], "grant": [319, 323], "agreement": [319, 323], "785907": [319, 323], "945539": [319, 323], "hbp": [319, 323], "deutsch": [319, 323], "forschungsgemeinschaft": [319, 323], "dfg": [319, 323], "german": [319, 323], "fundat": [319, 323], "excel": [319, 323, 325], "strategi": [319, 323], "exc": [319, 323], "2181": [319, 323], "390900948": [319, 323], "structur": [319, 323, 324, 327], "cluster": [319, 323], "cite": 319, "softwar": [319, 327], "norse2021": 319, "author": [319, 328], "egholm": [319, 327], "titl": 319, "month": 319, "jan": 319, "year": 319, "ai": 319, "publish": 319, "zenodo": 319, "doi": [319, 327], "5281": 319, "4422025": 319, "url": [319, 326, 327], "literatur": [319, 327, 332], "lgplv3": 319, "until": 320, "project": 323, "interest": 323, "explor": [323, 328, 329], "benefit": [323, 326, 328], "broad": 323, "energi": 323, "solv": [323, 324, 332], "von": [323, 327], "neumann": 323, "bottleneck": 323, "host": 323, "awar": 323, "fact": 323, "effort": 323, "undertaken": 323, "area": 323, "chose": 323, "develop": [323, 326], "did": 323, "find": [323, 331], "suffici": 323, "mostli": 323, "toolset": 323, "person": 323, "convinc": 323, "outsid": 323, "scope": 323, "primarili": 323, "concern": [323, 328], "plan": 323, "academ": 323, "commerci": 323, "neuromorph": [323, 327, 329], "platform": [323, 325], "question": 323, "comment": 323, "maintain": 323, "were": 323, "enabl": [323, 326], "nation": 323, "supercomput": 323, "naiss": 323, "chalmer": 323, "centr": 323, "scienc": [323, 327], "engin": [323, 327], "c3se": 323, "perform": 323, "north": 323, "hpc2n": 323, "uppsala": 323, "multidisciplinari": 323, "advanc": 323, "uppmax": 323, "swedish": 323, "council": 323, "through": [323, 325, 327, 331], "2022": [323, 327], "06725": 323, "programmat": 324, "intend": 324, "audienc": 324, "want": 324, "understand": 324, "achiev": [324, 332], "hypothet": 324, "biolog": [324, 328, 329, 330, 331, 332], "rudimentari": 324, "syntact": 324, "sugar": 324, "compos": [324, 328], "better": [324, 332], "circumv": 324, "hierarchi": 324, "red": [324, 329], "torch": [324, 325, 326, 328, 329, 330, 332], "directli": 324, "fig": [324, 328, 332], "file": [324, 328], "access": [324, 326, 328, 329, 331], "lif_feed_forward_step": 324, "similarli": [324, 328], "As": [324, 328, 329], "know": [324, 329, 330], "essenti": [324, 328], "modular": 324, "wrapper": 324, "inde": 324, "re": 324, "counterpart": 324, "realiz": 324, "onc": [324, 329, 332], "built": [324, 325, 331], "test": [324, 327], "straight": 324, "worth": [324, 325], "mention": 324, "tediou": 324, "accommod": 324, "arrow": 324, "py": [324, 326, 328], "folder": 324, "differenti": 324, "imper": 324, "would": [324, 326, 328, 330, 332], "cumbersom": 324, "problem": 324, "luckili": 324, "broken": 324, "down": 324, "constitu": 324, "isol": [324, 326], "unless": 324, "discontinu": 324, "happen": [324, 326, 329], "often": [324, 328], "why": 324, "approxim": 324, "studi": 324, "api": [324, 327], "subject": 324, "innerv": 324, "And": [324, 326], "scalar": [324, 332], "def": [324, 325, 328, 329], "my_dynam": 324, "resolv": 324, "interpret": 324, "loop": 324, "mock_data": 324, "pretti": 324, "bit": 324, "hyperparamet": [324, 328], "myparamet": 324, "thing": [324, 325, 329, 330, 332], "top": [325, 326], "support": [325, 326, 328, 332], "cover": [325, 329], "cuda": [325, 326, 328], "familiaris": 325, "yourself": 325, "tutori": [325, 328, 330], "beginn": [325, 330], "nn_tutori": 325, "might": [325, 326, 329], "sometim": 325, "recommend": [325, 326, 330, 332], "idiosyncrasi": 325, "buffer": 325, "setup": [325, 326], "correctli": 325, "move": 325, "lifconvnet": 325, "input_featur": [325, 328], "constant_current_encod": 325, "rsnn": 325, "convnet4": 325, "view": [325, 328], "reshap": 325, "max": [325, 328, 329], "log_p_i": [325, 328], "log_softmax": [325, 328], "dim": [325, 328], "initialis": [325, 328], "main": [325, 332], "chosen": [326, 328], "hint": 326, "primari": 326, "prerequisit": 326, "met": 326, "manag": 326, "preinstal": 326, "most": [326, 328, 329], "linux": 326, "unix": 326, "distro": 326, "guid": 326, "start": [326, 329, 330, 332], "local": [326, 332], "command": 326, "latest": 326, "clone": 326, "cd": 326, "torchtext": 326, "torchvis": [326, 328], "easier": 326, "introspect": 326, "filesystem": 326, "go": 326, "replac": [326, 328, 329, 330, 332], "full": 326, "path": 326, "8888": 326, "bash": 326, "pip3": 326, "dir": 326, "ip": 326, "root": [326, 328], "copi": 326, "past": 326, "browser": 326, "voila": 326, "nvidia": 326, "runtim": 326, "ref": 326, "hopefulli": 326, "address": 326, "hesit": 326, "reach": [326, 329], "issu": 326, "discord": 326, "chat": 326, "server": 326, "gg": 326, "7fgn359": 326, "reli": 326, "optimis": [326, 328], "hotspot": 326, "download": [326, 328], "cmake": 326, "befor": [326, 328, 330], "header": 326, "alreadi": [326, 328], "debian": 326, "ubuntu": 326, "apt": 326, "python3": [326, 328, 331], "dev": 326, "interf": 326, "uninstal": 326, "reinstal": 326, "prefer": 326, "280": 326, "07": 326, "solut": [326, 330], "forg": 326, "temptest2": 326, "present": 327, "than": [327, 332], "touch": 327, "miss": 327, "contact": 327, "eik": 327, "manuel": 327, "bansbach": 327, "alexand": 327, "bank": 327, "laurent": 327, "schmalen": 327, "decis": 327, "feedback": 327, "semanticscholar": 327, "corpusid": 327, "253420324": 327, "ding": 327, "chen": 327, "peixi": 327, "peng": 327, "tiejun": 327, "huang": 327, "yonghong": 327, "tian": 327, "reinforc": 327, "corr": 327, "2201": 327, "09754": 327, "julien": 327, "dupeyroux": 327, "toolbox": 327, "robot": [327, 331], "rida": 327, "el": 327, "allami": 327, "alberto": 327, "marchisio": 327, "muhammad": 327, "shafiqu": 327, "ihsen": 327, "alouani": 327, "secur": 327, "against": 327, "adversari": 327, "attack": 327, "inher": 327, "proceed": 327, "24th": 327, "confer": 327, "design": [327, 330], "autom": 327, "europ": 327, "date": 327, "2012": 327, "05321": 327, "manna": 327, "alex": 327, "vicent": 327, "sola": 327, "paul": 327, "kirkland": 327, "trevor": 327, "bihl": 327, "gaetano": 327, "di": 327, "caterina": 327, "review": 327, "expans": 327, "spyketorch": 327, "227": 327, "238": 327, "eric": 327, "\u00fc": 327, "ller": 327, "elia": [327, 331], "arnold": 327, "oliv": 327, "breitwies": 327, "milena": 327, "czierlinski": 327, "arn": 327, "emmel": 327, "jakob": 327, "kaiser": 327, "mauch": 327, "sebastian": 327, "schmitt": 327, "philipp": 327, "spilger": 327, "raphael": 327, "stock": 327, "yannik": 327, "johann": 327, "wei": 327, "andrea": 327, "baumbach": 327, "billaudel": 327, "benjamin": 327, "falk": 327, "leonard": 327, "ebert": 327, "julian": 327, "\u00f6": 327, "ltz": 327, "joscha": 327, "ilmberg": 327, "vitali": 327, "karasenko": 327, "mitja": 327, "kleider": 327, "aron": 327, "leibfri": 327, "scalabl": 327, "frontier": 327, "neurosci": 327, "247595115": 327, "rg": 327, "conradt": 327, "aestream": 327, "process": [327, 329], "coroutin": 327, "annual": 327, "neuro": 327, "254926426": 327, "mechislav": 327, "pugavko": 327, "oleg": 327, "maslennikov": 327, "vladimir": 327, "nekorkin": 327, "multitask": 327, "scientif": 327, "report": 327, "13": 327, "3997": 327, "xiaoh": 327, "xue": 327, "ralf": 327, "wimmer": 327, "michael": 327, "halassa": 327, "zhe": 327, "sage": 327, "cognit": 327, "feb": 327, "s12559": 327, "022": 327, "09994": 327, "semeant": 327, "scholar": 327, "seen": [328, 332], "those": 328, "treat": 328, "arbitrarili": 328, "machin": [328, 329], "context": 328, "recent": [328, 329], "becom": [328, 332], "clear": 328, "benefiti": 328, "them": [328, 329, 332], "distinct": 328, "incorpor": 328, "nors": [328, 329, 331], "instanti": 328, "easi": [328, 331], "enough": 328, "appropri": 328, "choic": [328, 329, 332], "lognorm": 328, "guarante": 328, "choos": 328, "standard": 328, "deviat": 328, "neg": 328, "unlik": 328, "numpi": [328, 329], "np": [328, 329], "bin": 328, "histtyp": 328, "xlabel": [328, 329], "matric": 328, "appear": 328, "enter": 328, "been": 328, "0844": 328, "1764": 328, "1839": 328, "1869": 328, "0841": 328, "0727": 328, "0188": 328, "2647": 328, "0894": 328, "0275": 328, "1649": 328, "1509": 328, "0831": 328, "0741": 328, "0715": 328, "1074": 328, "0067": 328, "1763": 328, "0676": 328, "2874": 328, "0584": 328, "0970": 328, "1389": 328, "0307": 328, "0107": 328, "0661": 328, "1247": 328, "0926": 328, "1189": 328, "1783": 328, "0133": 328, "2666": 328, "1170": 328, "0890": 328, "0625": 328, "0603": 328, "0000e": 328, "00": 328, "4917e": 328, "0391e": 328, "6651e": 328, "4238e": 328, "1778e": 328, "0886e": 328, "6647e": 328, "9056e": 328, "4135e": 328, "1090e": 328, "2118e": 328, "4632e": 328, "2936e": 328, "0304e": 328, "1324e": 328, "9782e": 328, "0679e": 328, "7562e": 328, "2033e": 328, "7462e": 328, "9331e": 328, "8899e": 328, "4876e": 328, "2687e": 328, "8961e": 328, "2480e": 328, "4753e": 328, "0499e": 328, "6278e": 328, "2545e": 328, "easiest": 328, "rectifi": [328, 329], "explicit": [328, 329], "parametrizedlifrecurrentcel": 328, "98": 328, "7486": 328, "103": 328, "7047": 328, "90": [328, 332], "1544": 328, "8152": 328, "116": 328, "8103": 328, "127": 328, "3513": 328, "91": 328, "7788": 328, "123": 328, "3718": 328, "121": 328, "0056": 328, "93": 328, "7975": 328, "58": 328, "6813": 328, "5439": 328, "111": 328, "2695": 328, "87": 328, "9447": 328, "8763": 328, "72": 328, "4548": 328, "78": 328, "0757": 328, "82": 328, "8928": 328, "66": 328, "6461": 328, "130": 328, "5326": 328, "9820": 328, "80": 328, "5310": 328, "107": 328, "7462": 328, "73": 328, "9318": 328, "97": 328, "1105": 328, "86": 328, "6684": 328, "2531": 328, "147": 328, "9238": 328, "0274": 328, "102": 328, "5388": 328, "6900": 328, "1577": 328, "110": 328, "8876": 328, "1148": 328, "135": 328, "1662": 328, "1490": 328, "89": 328, "0394": 328, "84": 328, "9042": 328, "9535": 328, "96": 328, "4251": 328, "8752": 328, "94": 328, "8718": 328, "0281": 328, "9265": 328, "119": 328, "3314": 328, "112": 328, "6192": 328, "3703": 328, "101": 328, "9120": 328, "131": 328, "6114": 328, "3992": 328, "7916": 328, "142": 328, "5801": 328, "109": 328, "4116": 328, "1337": 328, "106": 328, "6532": 328, "1069": 328, "88": 328, "7928": 328, "4811": 328, "9577": 328, "5994": 328, "117": 328, "2476": 328, "4056": 328, "129": 328, "1484": 328, "92": 328, "4877": 328, "8958": 328, "9079": 328, "4909": 328, "132": 328, "5020": 328, "3701": 328, "0548": 328, "95": 328, "5723": 328, "6428": 328, "125": 328, "7537": 328, "118": 328, "8862": 328, "4861": 328, "83": 328, "7141": 328, "2028": 328, "5160": 328, "105": 328, "0836": 328, "1045": 328, "124": 328, "7439": 328, "9382": 328, "120": 328, "7335": 328, "8137": 328, "3083": 328, "0703": 328, "7255": 328, "8980": 328, "7842": 328, "3907": 328, "7361": 328, "85": [328, 329], "6607": 328, "0778": 328, "74": 328, "6282": 328, "3310": 328, "67": 328, "7986": 328, "0878": 328, "2535": 328, "5521": 328, "6008": 328, "4485": 328, "5952": 328, "3669": 328, "5759": 328, "4933": 328, "5083": 328, "2988": 328, "5008": 328, "3606": 328, "3894": 328, "5964": 328, "5041": 328, "4465": 328, "5111": 328, "5291": 328, "4923": 328, "5099": 328, "4743": 328, "4086": 328, "4623": 328, "4911": 328, "4170": 328, "3768": 328, "4694": 328, "4262": 328, "4564": 328, "4122": 328, "6785": 328, "4884": 328, "5004": 328, "4132": 328, "5958": 328, "4399": 328, "3585": 328, "4342": 328, "4143": 328, "4828": 328, "5840": 328, "5314": 328, "5042": 328, "4853": 328, "3081": 328, "6244": 328, "3988": 328, "3273": 328, "5505": 328, "4304": 328, "3532": 328, "6276": 328, "3183": 328, "4425": 328, "6667": 328, "5914": 328, "3918": 328, "4613": 328, "4344": 328, "5242": 328, "3851": 328, "6702": 328, "6567": 328, "5133": 328, "6577": 328, "5093": 328, "5290": 328, "4653": 328, "5768": 328, "4998": 328, "3329": 328, "4477": 328, "4659": 328, "3066": 328, "4883": 328, "4605": 328, "5029": 328, "6058": 328, "5472": 328, "4766": 328, "4874": 328, "5204": 328, "5146": 328, "6527": 328, "4271": 328, "4638": 328, "2950": 328, "4157": 328, "4438": 328, "4175": 328, "7700": 328, "4745": 328, "6799": 328, "2523": 328, "5286": 328, "6600": 328, "4857": 328, "6356": 328, "4565": 328, "1118": 328, "1194": 328, "0862": 328, "0014": 328, "2534": 328, "0426": 328, "1814": 328, "0284": 328, "1859": 328, "0901": 328, "0203": 328, "1008": 328, "0340": 328, "0705": 328, "1802": 328, "0143": 328, "1175": 328, "1542": 328, "3608": 328, "2564": 328, "1587": 328, "1018": 328, "0750": 328, "1549": 328, "2636": 328, "1583": 328, "0375": 328, "1833": 328, "0739": 328, "0243": 328, "0167": 328, "1723": 328, "0784": 328, "2461": 328, "1150": 328, "0358": 328, "1853": 328, "1322": 328, "1957": 328, "1526": 328, "0907": 328, "3080": 328, "3178": 328, "0266": 328, "1780": 328, "1263": 328, "1473": 328, "1441": 328, "0490": 328, "0554": 328, "0183": 328, "1051": 328, "1875": 328, "0691": 328, "4555": 328, "1379": 328, "1998": 328, "0305": 328, "0215": 328, "2390": 328, "adopt": 328, "necessarili": 328, "great": 328, "256": 328, "transform": [328, 329], "totensor": 328, "1307": 328, "train_data": 328, "train_load": 328, "dataload": 328, "shuffl": 328, "test_load": 328, "yann": 328, "lecun": 328, "exdb": 328, "idx3": 328, "ubyt": 328, "gz": 328, "raw": 328, "9912422": 328, "145036441": 328, "62it": 328, "extract": 328, "idx1": 328, "28881": 328, "123105379": 328, "90it": 328, "t10k": 328, "1648877": 328, "41988035": 328, "99it": 328, "4542": 328, "24114593": 328, "38it": 328, "simplic": 328, "consid": [328, 332], "hidden_featur": 328, "output_featur": 328, "recurrent_cel": 328, "fc_out": 328, "s1": 328, "ts": [328, 329], "vo": 328, "stack": [328, 329], "decod": 328, "independ": 328, "probabl": [328, 331], "sophist": 328, "don": 328, "care": 328, "tqdm": 328, "trang": 328, "epoch": [328, 331], "max_epoch": 328, "target": 328, "zero_grad": 328, "nll_loss": 328, "append": [328, 329], "item": 328, "mean_loss": 328, "eval": 328, "test_loss": 328, "no_grad": 328, "reduct": 328, "pred": 328, "argmax": 328, "keepdim": 328, "eq": 328, "view_a": 328, "len": 328, "accuraci": [328, 332], "lr": 328, "002": 328, "is_avail": 328, "cpu": 328, "run_train": 328, "training_loss": 328, "autograd": 328, "set_detect_anomali": 328, "print": 328, "impati": 328, "decreas": [328, 329], "noth": 328, "home": 328, "adam": 328, "tau_mem_inv_befor": 328, "detach": [328, 329], "v_th_befor": 328, "model_aft": 328, "importerror": 328, "traceback": [328, 329], "17": 328, "11": 328, "opt": 328, "hostedtoolcach": 328, "x64": 328, "lib": 328, "site": 328, "311": 328, "tnrang": 328, "309": 328, "310": 328, "shortcut": 328, "tqdm_notebook": 328, "233": 328, "231": 328, "unit_scal": 328, "232": 328, "status_print": 328, "fp": 328, "desc": 328, "ncol": 328, "234": 328, "pbar": 328, "proxi": 328, "235": 328, "displai": 328, "99": 328, "fallback": 328, "bar": 328, "deprec": 328, "info": 328, "prepar": 328, "ipython": 328, "progress": 328, "iprogress": 328, "187": 328, "451": 328, "558": 328, "872": 328, "rais": 328, "warn_noipyw": 328, "min": [328, 329], "updat": [328, 332], "ipywidget": [328, 329], "readthedoc": 328, "en": 328, "user_instal": 328, "tau_mem_inv_aft": 328, "v_th_after": 328, "timeconst": 328, "figsiz": 328, "set_xlabel": 328, "legend": [328, 329], "0x7fe665b8efd0": 328, "0x7fe665b8a8e0": 328, "conclud": [328, 330], "mainli": [328, 332], "knowledg": [328, 330], "At": [328, 332], "moment": 328, "discretis": [328, 329], "limit": 328, "though": 328, "could": [328, 329], "public": 328, "resembl": 328, "ml": 328, "challeng": 328, "techniqu": 328, "account": 328, "naiv": 328, "involv": 328, "haven": 328, "jointli": 328, "consist": [329, 332], "wise": 329, "non": [329, 332], "circuit": 329, "One": 329, "look": [329, 330, 331, 332], "regard": 329, "exchang": 329, "restrict": 329, "art": 329, "conveni": 329, "eventu": 329, "goal": 329, "fulli": 329, "But": 329, "even": [329, 331], "curiou": 329, "closer": 329, "brain": 329, "investig": 329, "hit": [329, 330, 332], "press": [329, 330, 332], "live": [329, 330, 332], "aswel": 329, "cours": 329, "matplotlibrc": 329, "__version__": 329, "capacitor": 329, "li": 329, "convent": 329, "place": 329, "trace": 329, "voltage_trac": 329, "evolut": 329, "indic": 329, "vertic": 329, "ylabel": 329, "axvlin": 329, "color": 329, "line2d": 329, "0x7fa158319bd0": 329, "influenc": [329, 330], "slider": 329, "interact": 329, "intslid": 329, "floatslid": 329, "functool": 329, "continuous_upd": 329, "tau_mem": 329, "tau_syn": 329, "t0": 329, "t1": 329, "num_neuron": 329, "modulenotfounderror": 329, "No": 329, "consequent": 329, "decai": [329, 332], "quickli": [329, 330], "stimul": 329, "success": 329, "lead": [329, 332], "increasingli": 329, "foundat": 329, "principl": 329, "arriv": [329, 331, 332], "helper": 329, "record": 329, "integrate_and_record_voltag": 329, "input_spike_train": 329, "repeat": 329, "t_0": 329, "t_1": 329, "millisecond": 329, "40": [329, 332], "150": 329, "lif_integr": 329, "zs": 329, "lif_voltage_trac": 329, "axhlin": 329, "grei": 329, "realist": 330, "effect": 330, "seamlessli": [330, 332], "caveat": 330, "rememb": 330, "histori": 330, "sequentialst": 330, "trivial": 330, "construct": 330, "wide": 330, "familiar": 330, "action": 330, "inner": 330, "2156": 330, "grad_fn": 330, "addmmbackward0": 330, "perfect": 330, "store": [330, 331], "depth": 330, "next_stat": 330, "honestli": 330, "far": 330, "highli": 330, "suit": 330, "quickstart_tutori": 330, "continu": 330, "load": 331, "anoth": [331, 332], "backpropag": 331, "particularli": 331, "program": 331, "abseil": 331, "extens": 331, "cli": 331, "descript": 331, "flag": 331, "exercis": 331, "counter": 331, "gravit": 331, "forc": 331, "upright": 331, "instal": 331, "databas": 331, "000": 331, "32x32": 331, "classifi": 331, "pattern": 331, "correlation_experi": 331, "guillaum": 331, "franz": 331, "scherr": 331, "hajek": 331, "darjan": 331, "robert": 331, "wolfgang": 331, "handwritten": 331, "verifi": 331, "littl": 331, "overhead": 331, "parallelis": 331, "much": 331, "successfulli": 331, "juwel": 331, "hpc": 331, "dataset": [331, 332], "correspond": 331, "speech_command": 331, "idea": 332, "behind": 332, "product": 332, "suggest": 332, "tabl": 332, "content": 332, "famou": 332, "efficaci": 332, "react": 332, "rare": 332, "exactli": 332, "someon": 332, "wouldn": 332, "respond": 332, "memebran": 332, "electr": 332, "tension": 332, "chanc": 332, "fig_working_ap": 332, "peak": 332, "crucial": 332, "hardest": 332, "free": 332, "plug": 332, "plai": 332, "distinguish": 332, "lsnncell": 332, "lsnnrecurrentcel": 332, "remix": 332, "fit": 332, "tri": 332, "apart": 332, "algorithm": 332, "plausibl": 332, "let": 332, "markram": 332, "replic": 332, "ann": 332, "architectur": 332, "section": 332}, "objects": {"": [[1, 0, 0, "-", "norse"]], "norse": [[2, 0, 0, "-", "benchmark"], [7, 0, 0, "-", "dataset"], [10, 0, 0, "-", "task"], [16, 0, 0, "-", "torch"], [318, 0, 0, "-", "utils"]], "norse.benchmark": [[3, 0, 0, "-", "benchmark"], [4, 0, 0, "-", "main"], [5, 0, 0, "-", "norse_lif"], [6, 0, 0, "-", "plot"]], "norse.dataset": [[8, 0, 0, "-", "memory"], [9, 0, 0, "-", "spiking_heidelberg"]], "norse.task": [[11, 0, 0, "-", "cifar10"], [12, 0, 0, "-", "correlation_experiment"], [13, 0, 0, "-", "memory"], [14, 0, 0, "-", "mnist"], [15, 0, 0, "-", "mnist_pl"]], "norse.torch": [[321, 0, 0, "module-7", "functional"], [182, 0, 0, "-", "models"], [320, 0, 0, "-", "module"], [294, 0, 0, "-", "utils"]], "norse.torch.functional": [[18, 1, 1, "", "LIFFeedForwardState"], [19, 1, 1, "", "LIFParameters"], [20, 1, 1, "", "LIFRefracFeedForwardState"], [21, 1, 1, "", "LIFRefracParameters"], [22, 1, 1, "", "LSNNFeedForwardState"], [23, 1, 1, "", "LSNNParameters"], [24, 1, 1, "", "STDPSensorParameters"], [25, 1, 1, "", "STDPSensorState"], [26, 1, 1, "", "TsodyksMakramParameters"], [27, 1, 1, "", "TsodyksMakramState"], [28, 0, 0, "-", "adjoint"], [38, 3, 1, "", "circ_dist_fn"], [321, 0, 0, "-", "coba_lif"], [43, 3, 1, "", "constant_current_lif_encode"], [44, 0, 0, "-", "correlation_sensor"], [45, 0, 0, "-", "decode"], [46, 0, 0, "-", "encode"], [47, 3, 1, "", "euclidean_distance"], [48, 0, 0, "-", "filter"], [49, 3, 1, "", "gaussian_rbf"], [50, 3, 1, "", "heavi_circ_fn"], [51, 3, 1, "", "heavi_erfc_fn"], [52, 3, 1, "", "heavi_tanh_fn"], [53, 4, 1, "", "heaviside"], [321, 0, 0, "-", "iaf"], [321, 0, 0, "-", "izhikevich"], [321, 0, 0, "-", "leaky_integrator"], [85, 0, 0, "-", "leaky_integrator_box"], [86, 0, 0, "-", "lif"], [321, 0, 0, "-", "lif_adex"], [92, 3, 1, "", "lif_adex_current_encoder"], [93, 0, 0, "-", "lif_adex_refrac"], [321, 0, 0, "-", "lif_box"], [98, 0, 0, "-", "lif_correlation"], [99, 3, 1, "", "lif_current_encoder"], [321, 0, 0, "-", "lif_ex"], [105, 3, 1, "", "lif_ex_current_encoder"], [106, 3, 1, "", "lif_feed_forward_adjoint_step"], [107, 3, 1, "", "lif_feed_forward_adjoint_step_sparse"], [108, 3, 1, "", "lif_feed_forward_step"], [109, 0, 0, "-", "lif_mc"], [110, 3, 1, "", "lif_mc_feed_forward_step"], [111, 0, 0, "-", "lif_mc_refrac"], [112, 3, 1, "", "lif_mc_refrac_feed_forward_step"], [113, 0, 0, "-", "lif_refrac"], [114, 3, 1, "", "lif_refrac_feed_forward_adjoint_step"], [115, 3, 1, "", "lif_refrac_feed_forward_step"], [116, 3, 1, "", "lift"], [321, 0, 0, "-", "logical"], [123, 3, 1, "", "logistic_fn"], [124, 0, 0, "-", "lsnn"], [125, 3, 1, "", "lsnn_feed_forward_adjoint_step"], [126, 3, 1, "", "lsnn_feed_forward_step"], [127, 3, 1, "", "poisson_encode"], [128, 3, 1, "", "poisson_encode_step"], [129, 3, 1, "", "population_encode"], [321, 0, 0, "-", "receptive_field"], [321, 0, 0, "-", "regularization"], [139, 3, 1, "", "signed_poisson_encode"], [140, 3, 1, "", "signed_poisson_encode_step"], [141, 3, 1, "", "spike_latency_encode"], [142, 3, 1, "", "spike_latency_lif_encode"], [143, 0, 0, "-", "spikes_to_times_decoder"], [144, 0, 0, "-", "stdp"], [145, 0, 0, "-", "stdp_sensor"], [146, 3, 1, "", "stdp_sensor_step"], [147, 3, 1, "", "stp_step"], [148, 3, 1, "", "super_fn"], [149, 0, 0, "-", "superspike"], [150, 0, 0, "-", "test"], [179, 0, 0, "-", "threshold"], [180, 3, 1, "", "triangle_fn"], [181, 0, 0, "-", "tsodyks_makram"]], "norse.torch.functional.LIFFeedForwardState": [[18, 2, 1, "", "__init__"]], "norse.torch.functional.LIFParameters": [[19, 2, 1, "", "__init__"]], "norse.torch.functional.LIFRefracFeedForwardState": [[20, 2, 1, "", "__init__"]], "norse.torch.functional.LIFRefracParameters": [[21, 2, 1, "", "__init__"]], "norse.torch.functional.LSNNFeedForwardState": [[22, 2, 1, "", "__init__"]], "norse.torch.functional.LSNNParameters": [[23, 2, 1, "", "__init__"]], "norse.torch.functional.STDPSensorParameters": [[24, 2, 1, "", "__init__"]], "norse.torch.functional.STDPSensorState": [[25, 2, 1, "", "__init__"]], "norse.torch.functional.TsodyksMakramParameters": [[26, 2, 1, "", "__init__"]], "norse.torch.functional.TsodyksMakramState": [[27, 2, 1, "", "__init__"]], "norse.torch.functional.adjoint": [[29, 0, 0, "-", "lif_adjoint"], [30, 0, 0, "-", "lif_mc_adjoint"], [31, 0, 0, "-", "lif_mc_refrac_adjoint"], [32, 0, 0, "-", "lif_refrac_adjoint"], [33, 0, 0, "-", "lsnn_adjoint"], [34, 0, 0, "-", "test"]], "norse.torch.functional.adjoint.test": [[35, 0, 0, "-", "test_lif_adjoint"], [36, 0, 0, "-", "test_lif_refrac_adjoint"], [37, 0, 0, "-", "test_lsnn_adjoint"]], "norse.torch.functional.coba_lif": [[40, 1, 1, "", "CobaLIFFeedForwardState"], [41, 1, 1, "", "CobaLIFParameters"], [42, 3, 1, "", "coba_lif_feed_forward_step"]], "norse.torch.functional.coba_lif.CobaLIFFeedForwardState": [[40, 2, 1, "", "__init__"]], "norse.torch.functional.coba_lif.CobaLIFParameters": [[41, 2, 1, "", "__init__"]], "norse.torch.functional.iaf": [[55, 1, 1, "", "IAFFeedForwardState"], [56, 1, 1, "", "IAFParameters"], [57, 3, 1, "", "iaf_feed_forward_step"]], "norse.torch.functional.iaf.IAFFeedForwardState": [[55, 2, 1, "", "__init__"]], "norse.torch.functional.iaf.IAFParameters": [[56, 2, 1, "", "__init__"]], "norse.torch.functional.izhikevich": [[59, 1, 1, "", "IzhikevichParameters"], [60, 1, 1, "", "IzhikevichSpikingBehavior"], [61, 4, 1, "", "accomodation"], [62, 4, 1, "", "bistability"], [63, 4, 1, "", "class_1_exc"], [64, 4, 1, "", "class_2_exc"], [65, 4, 1, "", "dap"], [66, 4, 1, "", "inhibition_induced_bursting"], [67, 4, 1, "", "inhibition_induced_spiking"], [68, 4, 1, "", "integrator"], [69, 3, 1, "", "izhikevich_feed_forward_step"], [70, 4, 1, "", "mixed_mode"], [71, 4, 1, "", "phasic_bursting"], [72, 4, 1, "", "phasic_spiking"], [73, 4, 1, "", "rebound_burst"], [74, 4, 1, "", "rebound_spike"], [75, 4, 1, "", "resonator"], [76, 4, 1, "", "spike_frequency_adaptation"], [77, 4, 1, "", "spike_latency"], [78, 4, 1, "", "subthreshold_oscillation"], [79, 4, 1, "", "tonic_bursting"], [80, 4, 1, "", "tonic_spiking"]], "norse.torch.functional.izhikevich.IzhikevichParameters": [[59, 2, 1, "", "__init__"]], "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior": [[60, 2, 1, "", "__init__"]], "norse.torch.functional.leaky_integrator": [[82, 1, 1, "", "LIParameters"], [83, 1, 1, "", "LIState"], [84, 3, 1, "", "li_feed_forward_step"]], "norse.torch.functional.leaky_integrator.LIParameters": [[82, 2, 1, "", "__init__"]], "norse.torch.functional.leaky_integrator.LIState": [[83, 2, 1, "", "__init__"]], "norse.torch.functional.lif_adex": [[88, 1, 1, "", "LIFAdExFeedForwardState"], [89, 1, 1, "", "LIFAdExParameters"], [90, 3, 1, "", "lif_adex_current_encoder"], [91, 3, 1, "", "lif_adex_feed_forward_step"]], "norse.torch.functional.lif_adex.LIFAdExFeedForwardState": [[88, 2, 1, "", "__init__"]], "norse.torch.functional.lif_adex.LIFAdExParameters": [[89, 2, 1, "", "__init__"]], "norse.torch.functional.lif_box": [[95, 1, 1, "", "LIFBoxFeedForwardState"], [96, 1, 1, "", "LIFBoxParameters"], [97, 3, 1, "", "lif_box_feed_forward_step"]], "norse.torch.functional.lif_box.LIFBoxFeedForwardState": [[95, 2, 1, "", "__init__"]], "norse.torch.functional.lif_box.LIFBoxParameters": [[96, 2, 1, "", "__init__"]], "norse.torch.functional.lif_ex": [[101, 1, 1, "", "LIFExFeedForwardState"], [102, 1, 1, "", "LIFExParameters"], [103, 3, 1, "", "lif_ex_current_encoder"], [104, 3, 1, "", "lif_ex_feed_forward_step"]], "norse.torch.functional.lif_ex.LIFExFeedForwardState": [[101, 2, 1, "", "__init__"]], "norse.torch.functional.lif_ex.LIFExParameters": [[102, 2, 1, "", "__init__"]], "norse.torch.functional.logical": [[118, 3, 1, "", "logical_and"], [119, 3, 1, "", "logical_or"], [120, 3, 1, "", "logical_xor"], [121, 3, 1, "", "muller_c"], [122, 3, 1, "", "posedge_detector"]], "norse.torch.functional.receptive_field": [[131, 3, 1, "", "gaussian_kernel"], [132, 3, 1, "", "spatial_receptive_field"], [133, 3, 1, "", "spatial_receptive_fields_with_derivatives"], [134, 3, 1, "", "temporal_scale_distribution"]], "norse.torch.functional.regularization": [[136, 3, 1, "", "regularize_step"], [137, 3, 1, "", "spike_accumulator"], [138, 3, 1, "", "voltage_accumulator"]], "norse.torch.functional.test": [[151, 0, 0, "-", "test_coba_lif"], [152, 0, 0, "-", "test_decode"], [153, 0, 0, "-", "test_encode"], [154, 0, 0, "-", "test_exp_filter"], [155, 0, 0, "-", "test_heaviside"], [156, 0, 0, "-", "test_iaf"], [157, 0, 0, "-", "test_izhikevich"], [158, 0, 0, "-", "test_leaky_integrator"], [159, 0, 0, "-", "test_leaky_integrator_box"], [160, 0, 0, "-", "test_lif"], [161, 0, 0, "-", "test_lif_adex"], [162, 0, 0, "-", "test_lif_adex_refrac"], [163, 0, 0, "-", "test_lif_box"], [164, 0, 0, "-", "test_lif_ex"], [165, 0, 0, "-", "test_lif_mc"], [166, 0, 0, "-", "test_lif_mc_refrac"], [167, 0, 0, "-", "test_lif_refrac"], [168, 0, 0, "-", "test_lift"], [169, 0, 0, "-", "test_logical"], [170, 0, 0, "-", "test_lsnn"], [171, 0, 0, "-", "test_receptive_field"], [172, 0, 0, "-", "test_regularization"], [173, 0, 0, "-", "test_spikes_to_times_decoder"], [174, 0, 0, "-", "test_stdp"], [175, 0, 0, "-", "test_stdp_sensor"], [176, 0, 0, "-", "test_superspike"], [177, 0, 0, "-", "test_threshold"], [178, 0, 0, "-", "test_tsodyks_makram"]], "norse.torch.models": [[183, 0, 0, "-", "conv"], [184, 0, 0, "-", "mobilenet"], [185, 0, 0, "-", "test"], [189, 0, 0, "-", "vgg"]], "norse.torch.models.test": [[186, 0, 0, "-", "test_conv"], [187, 0, 0, "-", "test_mobilenet"], [188, 0, 0, "-", "test_vgg"]], "norse.torch.module": [[191, 1, 1, "", "Lift"], [192, 1, 1, "", "RegularizationCell"], [193, 1, 1, "", "SequentialState"], [320, 0, 0, "-", "coba_lif"], [320, 0, 0, "-", "conv"], [320, 0, 0, "-", "encode"], [206, 0, 0, "-", "exp_filter"], [320, 0, 0, "-", "iaf"], [320, 0, 0, "-", "izhikevich"], [320, 0, 0, "-", "leaky_integrator"], [224, 0, 0, "-", "leaky_integrator_box"], [320, 0, 0, "-", "lif"], [320, 0, 0, "-", "lif_adex"], [237, 0, 0, "-", "lif_adex_refrac"], [320, 0, 0, "-", "lif_box"], [242, 0, 0, "-", "lif_correlation"], [320, 0, 0, "-", "lif_ex"], [320, 0, 0, "-", "lif_mc"], [320, 0, 0, "-", "lif_mc_refrac"], [320, 0, 0, "-", "lif_refrac"], [255, 0, 0, "-", "lift"], [320, 0, 0, "-", "lsnn"], [320, 0, 0, "-", "receptive_field"], [264, 0, 0, "-", "regularization"], [265, 0, 0, "-", "sequential"], [266, 0, 0, "-", "snn"], [267, 0, 0, "-", "spikes_to_times_decoder"], [268, 0, 0, "-", "test"]], "norse.torch.module.Lift": [[191, 2, 1, "", "__init__"]], "norse.torch.module.RegularizationCell": [[192, 2, 1, "", "__init__"]], "norse.torch.module.SequentialState": [[193, 2, 1, "", "__init__"]], "norse.torch.module.coba_lif": [[195, 1, 1, "", "CobaLIFCell"]], "norse.torch.module.coba_lif.CobaLIFCell": [[195, 2, 1, "", "__init__"]], "norse.torch.module.conv": [[197, 1, 1, "", "LConv2d"]], "norse.torch.module.conv.LConv2d": [[197, 2, 1, "", "__init__"]], "norse.torch.module.encode": [[199, 1, 1, "", "ConstantCurrentLIFEncoder"], [200, 1, 1, "", "PoissonEncoder"], [201, 1, 1, "", "PoissonEncoderStep"], [202, 1, 1, "", "PopulationEncoder"], [203, 1, 1, "", "SignedPoissonEncoder"], [204, 1, 1, "", "SpikeLatencyEncoder"], [205, 1, 1, "", "SpikeLatencyLIFEncoder"]], "norse.torch.module.encode.ConstantCurrentLIFEncoder": [[199, 2, 1, "", "__init__"]], "norse.torch.module.encode.PoissonEncoder": [[200, 2, 1, "", "__init__"]], "norse.torch.module.encode.PoissonEncoderStep": [[201, 2, 1, "", "__init__"]], "norse.torch.module.encode.PopulationEncoder": [[202, 2, 1, "", "__init__"]], "norse.torch.module.encode.SignedPoissonEncoder": [[203, 2, 1, "", "__init__"]], "norse.torch.module.encode.SpikeLatencyEncoder": [[204, 2, 1, "", "__init__"]], "norse.torch.module.encode.SpikeLatencyLIFEncoder": [[205, 2, 1, "", "__init__"]], "norse.torch.module.iaf": [[208, 1, 1, "", "IAFCell"], [209, 1, 1, "", "IAFFeedForwardState"], [210, 1, 1, "", "IAFParameters"]], "norse.torch.module.iaf.IAFCell": [[208, 2, 1, "", "__init__"]], "norse.torch.module.iaf.IAFFeedForwardState": [[209, 2, 1, "", "__init__"]], "norse.torch.module.iaf.IAFParameters": [[210, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich": [[212, 1, 1, "", "Izhikevich"], [213, 1, 1, "", "IzhikevichCell"], [214, 1, 1, "", "IzhikevichRecurrent"], [215, 1, 1, "", "IzhikevichRecurrentCell"], [216, 1, 1, "", "IzhikevichSpikingBehavior"], [217, 1, 1, "", "IzhikevichState"]], "norse.torch.module.izhikevich.Izhikevich": [[212, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichCell": [[213, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichRecurrent": [[214, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichRecurrentCell": [[215, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichSpikingBehavior": [[216, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichState": [[217, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator": [[219, 1, 1, "", "LI"], [220, 1, 1, "", "LICell"], [221, 1, 1, "", "LILinearCell"], [222, 1, 1, "", "LIParameters"], [223, 1, 1, "", "LIState"]], "norse.torch.module.leaky_integrator.LI": [[219, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LICell": [[220, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LILinearCell": [[221, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LIParameters": [[222, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LIState": [[223, 2, 1, "", "__init__"]], "norse.torch.module.lif": [[226, 1, 1, "", "LIF"], [227, 1, 1, "", "LIFCell"], [228, 1, 1, "", "LIFParameters"], [229, 1, 1, "", "LIFRecurrent"], [230, 1, 1, "", "LIFRecurrentCell"], [231, 1, 1, "", "LIFState"]], "norse.torch.module.lif.LIF": [[226, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFCell": [[227, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFParameters": [[228, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFRecurrent": [[229, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFRecurrentCell": [[230, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFState": [[231, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex": [[233, 1, 1, "", "LIFAdEx"], [234, 1, 1, "", "LIFAdExCell"], [235, 1, 1, "", "LIFAdExRecurrent"], [236, 1, 1, "", "LIFAdExRecurrentCell"]], "norse.torch.module.lif_adex.LIFAdEx": [[233, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex.LIFAdExCell": [[234, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex.LIFAdExRecurrent": [[235, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex.LIFAdExRecurrentCell": [[236, 2, 1, "", "__init__"]], "norse.torch.module.lif_box": [[239, 1, 1, "", "LIFBoxCell"], [240, 1, 1, "", "LIFBoxFeedForwardState"], [241, 1, 1, "", "LIFBoxParameters"]], "norse.torch.module.lif_box.LIFBoxCell": [[239, 2, 1, "", "__init__"]], "norse.torch.module.lif_box.LIFBoxFeedForwardState": [[240, 2, 1, "", "__init__"]], "norse.torch.module.lif_box.LIFBoxParameters": [[241, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex": [[244, 1, 1, "", "LIFEx"], [245, 1, 1, "", "LIFExCell"], [246, 1, 1, "", "LIFExRecurrent"], [247, 1, 1, "", "LIFExRecurrentCell"]], "norse.torch.module.lif_ex.LIFEx": [[244, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex.LIFExCell": [[245, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex.LIFExRecurrent": [[246, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex.LIFExRecurrentCell": [[247, 2, 1, "", "__init__"]], "norse.torch.module.lif_mc": [[249, 1, 1, "", "LIFMCRecurrentCell"]], "norse.torch.module.lif_mc.LIFMCRecurrentCell": [[249, 2, 1, "", "__init__"]], "norse.torch.module.lif_mc_refrac": [[251, 1, 1, "", "LIFMCRefracRecurrentCell"]], "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell": [[251, 2, 1, "", "__init__"]], "norse.torch.module.lif_refrac": [[253, 1, 1, "", "LIFRefracCell"], [254, 1, 1, "", "LIFRefracRecurrentCell"]], "norse.torch.module.lif_refrac.LIFRefracCell": [[253, 2, 1, "", "__init__"]], "norse.torch.module.lif_refrac.LIFRefracRecurrentCell": [[254, 2, 1, "", "__init__"]], "norse.torch.module.lsnn": [[257, 1, 1, "", "LSNN"], [258, 1, 1, "", "LSNNCell"], [259, 1, 1, "", "LSNNRecurrent"], [260, 1, 1, "", "LSNNRecurrentCell"]], "norse.torch.module.lsnn.LSNN": [[257, 2, 1, "", "__init__"]], "norse.torch.module.lsnn.LSNNCell": [[258, 2, 1, "", "__init__"]], "norse.torch.module.lsnn.LSNNRecurrent": [[259, 2, 1, "", "__init__"]], "norse.torch.module.lsnn.LSNNRecurrentCell": [[260, 2, 1, "", "__init__"]], "norse.torch.module.receptive_field": [[262, 1, 1, "", "SpatialReceptiveField2d"], [263, 1, 1, "", "TemporalReceptiveField"]], "norse.torch.module.receptive_field.SpatialReceptiveField2d": [[262, 2, 1, "", "__init__"]], "norse.torch.module.receptive_field.TemporalReceptiveField": [[263, 2, 1, "", "__init__"]], "norse.torch.module.test": [[269, 0, 0, "-", "test_coba"], [270, 0, 0, "-", "test_conv"], [271, 0, 0, "-", "test_encode"], [272, 0, 0, "-", "test_exp_filter"], [273, 0, 0, "-", "test_iaf"], [274, 0, 0, "-", "test_izhikevich"], [275, 0, 0, "-", "test_leaky_integrator"], [276, 0, 0, "-", "test_leaky_integrator_box"], [277, 0, 0, "-", "test_lif"], [278, 0, 0, "-", "test_lif_adex"], [279, 0, 0, "-", "test_lif_adex_refrac"], [280, 0, 0, "-", "test_lif_box"], [281, 0, 0, "-", "test_lif_correlation"], [282, 0, 0, "-", "test_lif_ex"], [283, 0, 0, "-", "test_lif_mc"], [284, 0, 0, "-", "test_lif_mc_refrac"], [285, 0, 0, "-", "test_lif_refrac"], [286, 0, 0, "-", "test_lift"], [287, 0, 0, "-", "test_lsnn"], [288, 0, 0, "-", "test_receptive_field"], [289, 0, 0, "-", "test_regularization"], [290, 0, 0, "-", "test_sequential"], [291, 0, 0, "-", "test_snn"], [292, 0, 0, "-", "test_spikes_to_times_decoder"], [293, 0, 0, "-", "test_training"]], "norse.torch.utils": [[295, 0, 0, "-", "export_nir"], [296, 0, 0, "-", "import_nir"], [297, 0, 0, "-", "plot"], [306, 0, 0, "-", "pytree"], [307, 0, 0, "-", "tensorboard"], [314, 0, 0, "-", "test"]], "norse.torch.utils.plot": [[298, 0, 0, "-", "plot"], [299, 3, 1, "", "plot_heatmap_2d"], [300, 3, 1, "", "plot_heatmap_3d"], [301, 3, 1, "", "plot_histogram_2d"], [302, 3, 1, "", "plot_izhikevich"], [303, 3, 1, "", "plot_neuron_states"], [304, 3, 1, "", "plot_scatter_3d"], [305, 3, 1, "", "plot_spikes_2d"]], "norse.torch.utils.tensorboard": [[308, 3, 1, "", "hook_spike_activity_mean"], [309, 3, 1, "", "hook_spike_activity_sum"], [310, 3, 1, "", "hook_spike_histogram_mean"], [311, 3, 1, "", "hook_spike_histogram_sum"], [312, 3, 1, "", "hook_spike_image"], [313, 0, 0, "-", "tensorboard"]], "norse.torch.utils.test": [[315, 0, 0, "-", "test_nir_export"], [316, 0, 0, "-", "test_nir_import"], [317, 0, 0, "-", "test_tensorboard"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"complet": 0, "api": 0, "nors": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 332], "benchmark": [2, 3, 4, 5, 6], "main": 4, "norse_lif": 5, "plot": [6, 297, 298, 299, 300, 301, 302, 303, 304, 305, 322], "dataset": [7, 8, 9, 328], "memori": [8, 13, 320, 321, 331], "spiking_heidelberg": 9, "task": [10, 11, 12, 13, 14, 15, 331], "cifar10": [11, 331], "correlation_experi": 12, "mnist": [14, 328, 331], "mnist_pl": 15, "torch": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 320, 321, 322], "function": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 321], "liffeedforwardst": 18, "lifparamet": [19, 228], "lifrefracfeedforwardst": 20, "lifrefracparamet": 21, "lsnnfeedforwardst": 22, "lsnnparamet": 23, "stdpsensorparamet": 24, "stdpsensorst": 25, "tsodyksmakramparamet": 26, "tsodyksmakramst": 27, "adjoint": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "lif_adjoint": 29, "lif_mc_adjoint": 30, "lif_mc_refrac_adjoint": 31, "lif_refrac_adjoint": 32, "lsnn_adjoint": 33, "test": [34, 35, 36, 37, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 185, 186, 187, 188, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 314, 315, 316, 317, 328], "test_lif_adjoint": 35, "test_lif_refrac_adjoint": 36, "test_lsnn_adjoint": 37, "circ_dist_fn": 38, "coba_lif": [39, 40, 41, 42, 194, 195], "cobaliffeedforwardst": 40, "cobalifparamet": 41, "coba_lif_feed_forward_step": 42, "constant_current_lif_encod": 43, "correlation_sensor": 44, "decod": 45, "encod": [46, 198, 199, 200, 201, 202, 203, 204, 205, 320, 321], "euclidean_dist": 47, "filter": 48, "gaussian_rbf": 49, "heavi_circ_fn": 50, "heavi_erfc_fn": 51, "heavi_tanh_fn": 52, "heavisid": 53, "iaf": [54, 55, 56, 57, 207, 208, 209, 210, 321], "iaffeedforwardst": [55, 209], "iafparamet": [56, 210], "iaf_feed_forward_step": 57, "izhikevich": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 211, 212, 213, 214, 215, 216, 217, 320, 321], "izhikevichparamet": 59, "izhikevichspikingbehavior": [60, 216], "accomod": 61, "bistabl": 62, "class_1_exc": 63, "class_2_exc": 64, "dap": 65, "inhibition_induced_burst": 66, "inhibition_induced_spik": 67, "integr": [68, 320, 321], "izhikevich_feed_forward_step": 69, "mixed_mod": 70, "phasic_burst": 71, "phasic_spik": 72, "rebound_burst": 73, "rebound_spik": 74, "reson": 75, "spike_frequency_adapt": 76, "spike_lat": 77, "subthreshold_oscil": 78, "tonic_burst": 79, "tonic_spik": 80, "leaky_integr": [81, 82, 83, 84, 218, 219, 220, 221, 222, 223], "liparamet": [82, 222], "listat": [83, 223], "li_feed_forward_step": 84, "leaky_integrator_box": [85, 224], "lif": [86, 225, 226, 227, 228, 229, 230, 231, 320, 321, 328], "lif_adex": [87, 88, 89, 90, 91, 232, 233, 234, 235, 236], "lifadexfeedforwardst": 88, "lifadexparamet": 89, "lif_adex_current_encod": [90, 92], "lif_adex_feed_forward_step": 91, "lif_adex_refrac": [93, 237], "lif_box": [94, 95, 96, 97, 238, 239, 240, 241], "lifboxfeedforwardst": [95, 240], "lifboxparamet": [96, 241], "lif_box_feed_forward_step": 97, "lif_correl": [98, 242], "lif_current_encod": 99, "lif_ex": [100, 101, 102, 103, 104, 243, 244, 245, 246, 247], "lifexfeedforwardst": 101, "lifexparamet": 102, "lif_ex_current_encod": [103, 105], "lif_ex_feed_forward_step": 104, "lif_feed_forward_adjoint_step": 106, "lif_feed_forward_adjoint_step_spars": 107, "lif_feed_forward_step": 108, "lif_mc": [109, 248, 249], "lif_mc_feed_forward_step": 110, "lif_mc_refrac": [111, 250, 251], "lif_mc_refrac_feed_forward_step": 112, "lif_refrac": [113, 252, 253, 254], "lif_refrac_feed_forward_adjoint_step": 114, "lif_refrac_feed_forward_step": 115, "lift": [116, 191, 255], "logic": [117, 118, 119, 120, 121, 122, 321], "logical_and": 118, "logical_or": 119, "logical_xor": 120, "muller_c": 121, "posedge_detector": 122, "logistic_fn": 123, "lsnn": [124, 256, 257, 258, 259, 260, 320, 321], "lsnn_feed_forward_adjoint_step": 125, "lsnn_feed_forward_step": 126, "poisson_encod": 127, "poisson_encode_step": 128, "population_encod": 129, "receptive_field": [130, 131, 132, 133, 134, 261, 262, 263], "gaussian_kernel": 131, "spatial_receptive_field": 132, "spatial_receptive_fields_with_deriv": 133, "temporal_scale_distribut": 134, "regular": [135, 136, 137, 138, 264, 321], "regularize_step": 136, "spike_accumul": 137, "voltage_accumul": 138, "signed_poisson_encod": 139, "signed_poisson_encode_step": 140, "spike_latency_encod": 141, "spike_latency_lif_encod": 142, "spikes_to_times_decod": [143, 267], "stdp": [144, 321], "stdp_sensor": 145, "stdp_sensor_step": 146, "stp_step": 147, "super_fn": 148, "superspik": 149, "test_coba_lif": 151, "test_decod": 152, "test_encod": [153, 271], "test_exp_filt": [154, 272], "test_heavisid": 155, "test_iaf": [156, 273], "test_izhikevich": [157, 274], "test_leaky_integr": [158, 275], "test_leaky_integrator_box": [159, 276], "test_lif": [160, 277], "test_lif_adex": [161, 278], "test_lif_adex_refrac": [162, 279], "test_lif_box": [163, 280], "test_lif_ex": [164, 282], "test_lif_mc": [165, 283], "test_lif_mc_refrac": [166, 284], "test_lif_refrac": [167, 285], "test_lift": [168, 286], "test_log": 169, "test_lsnn": [170, 287], "test_receptive_field": [171, 288], "test_regular": [172, 289], "test_spikes_to_times_decod": [173, 292], "test_stdp": 174, "test_stdp_sensor": 175, "test_superspik": 176, "test_threshold": 177, "test_tsodyks_makram": 178, "threshold": [179, 321], "triangle_fn": 180, "tsodyks_makram": 181, "model": [182, 183, 184, 185, 186, 187, 188, 189, 320, 321, 324, 325, 328, 329, 330, 332], "conv": [183, 196, 197], "mobilenet": 184, "test_conv": [186, 270], "test_mobilenet": 187, "test_vgg": 188, "vgg": 189, "modul": [190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293], "regularizationcel": 192, "sequentialst": 193, "cobalifcel": 195, "lconv2d": 197, "constantcurrentlifencod": 199, "poissonencod": 200, "poissonencoderstep": 201, "populationencod": 202, "signedpoissonencod": 203, "spikelatencyencod": 204, "spikelatencylifencod": 205, "exp_filt": 206, "iafcel": 208, "izhikevichcel": 213, "izhikevichrecurr": 214, "izhikevichrecurrentcel": 215, "izhikevichst": 217, "li": 219, "licel": 220, "lilinearcel": 221, "lifcel": 227, "lifrecurr": 229, "lifrecurrentcel": 230, "lifstat": 231, "lifadex": 233, "lifadexcel": 234, "lifadexrecurr": 235, "lifadexrecurrentcel": 236, "lifboxcel": 239, "lifex": 244, "lifexcel": 245, "lifexrecurr": 246, "lifexrecurrentcel": 247, "lifmcrecurrentcel": 249, "lifmcrefracrecurrentcel": 251, "lifrefraccel": 253, "lifrefracrecurrentcel": 254, "lsnncell": 258, "lsnnrecurr": 259, "lsnnrecurrentcel": 260, "spatialreceptivefield2d": 262, "temporalreceptivefield": 263, "sequenti": 265, "snn": [266, 328], "test_coba": 269, "test_lif_correl": 281, "test_sequenti": 290, "test_snn": 291, "test_train": 293, "util": [294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322], "export_nir": 295, "import_nir": 296, "plot_heatmap_2d": 299, "plot_heatmap_3d": 300, "plot_histogram_2d": 301, "plot_izhikevich": 302, "plot_neuron_st": 303, "plot_scatter_3d": 304, "plot_spikes_2d": 305, "pytre": 306, "tensorboard": [307, 308, 309, 310, 311, 312, 313, 322], "hook_spike_activity_mean": 308, "hook_spike_activity_sum": 309, "hook_spike_histogram_mean": 310, "hook_spike_histogram_sum": 311, "hook_spike_imag": 312, "test_nir_export": 315, "test_nir_import": 316, "test_tensorboard": 317, "get": 319, "start": 319, "instal": [319, 326], "run": [319, 326, 331], "exampl": [319, 324, 328, 332], "advanc": 319, "us": 319, "opim": 319, "contribut": 319, "credit": 319, "citat": 319, "licens": 319, "contain": 320, "convolut": 320, "neuron": [320, 321, 324, 328, 329, 330, 332], "fire": [320, 321], "leaki": [320, 321], "box": [320, 321], "conduct": [320, 321], "base": [320, 321], "adapt": [320, 321], "exponenti": [320, 321], "multicompartment": [320, 321], "refract": 320, "refractori": [320, 321], "long": [320, 321], "short": [320, 321], "term": [320, 321], "recept": [320, 321], "field": [320, 321], "tempor": 321, "oper": 321, "mc": 321, "plastic": 321, "spike": [321, 328, 329], "time": [321, 328, 332], "depend": [321, 326], "tsodyk": 321, "markram": 321, "tdp": 321, "about": 323, "contact": 323, "acknowledg": 323, "develop": 324, "document": 324, "architectur": 324, "import": 324, "shortcut": 324, "comput": 324, "graph": 324, "implement": 324, "hardwar": 325, "acceler": [325, 326], "nest": 325, "requir": 326, "pip": 326, "from": 326, "conda": 326, "docker": 326, "sourc": 326, "option": 326, "notebook": 326, "gpu": 326, "troubleshoot": 326, "common": 326, "problem": [326, 332], "importerror": 326, "norse_op": 326, "so": 326, "undefin": 326, "symbol": 326, "zn2at5addmmerkns_6tensores2_s2_rkn3c106scalares6": 326, "unsatisfiableerror": 326, "The": 326, "follow": 326, "specif": 326, "were": 326, "found": 326, "incompat": 326, "each": 326, "other": 326, "paper": 327, "cite": 327, "paramet": [328, 331], "learn": [328, 332], "neural": 328, "network": 328, "defin": [328, 329], "vari": 328, "membran": 328, "constant": 328, "toi": 328, "train": 328, "small": 328, "recurr": 328, "load": 328, "defitinit": 328, "loop": 328, "evalu": 328, "conclus": 328, "introduct": 329, "system": 329, "simul": 329, "our": 329, "first": 329, "input": 329, "visual": 329, "voltag": 329, "quickstart": 330, "build": 330, "appli": 330, "bonu": 330, "predefin": 330, "state": [330, 332], "cartpol": 331, "correl": 331, "experi": 331, "pytorch": 331, "lightn": 331, "speech": 331, "command": 331, "recognit": 331, "work": 332, "terminolog": 332, "event": 332, "action": 332, "potenti": 332, "dynam": 332, "workflow": 332, "decid": 332, "plasitici": 332, "deep": 332}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 56}})