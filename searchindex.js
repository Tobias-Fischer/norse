Search.setIndex({"docnames": ["api", "generated/norse", "generated/norse.benchmark", "generated/norse.benchmark.benchmark", "generated/norse.benchmark.main", "generated/norse.benchmark.norse_lif", "generated/norse.benchmark.plot", "generated/norse.dataset", "generated/norse.dataset.memory", "generated/norse.dataset.spiking_heidelberg", "generated/norse.task", "generated/norse.task.cifar10", "generated/norse.task.correlation_experiment", "generated/norse.task.memory", "generated/norse.task.mnist", "generated/norse.task.mnist_pl", "generated/norse.torch", "generated/norse.torch.functional", "generated/norse.torch.functional.LIFFeedForwardState", "generated/norse.torch.functional.LIFParameters", "generated/norse.torch.functional.LIFRefracFeedForwardState", "generated/norse.torch.functional.LIFRefracParameters", "generated/norse.torch.functional.LSNNFeedForwardState", "generated/norse.torch.functional.LSNNParameters", "generated/norse.torch.functional.STDPSensorParameters", "generated/norse.torch.functional.STDPSensorState", "generated/norse.torch.functional.TsodyksMakramParameters", "generated/norse.torch.functional.TsodyksMakramState", "generated/norse.torch.functional.adjoint", "generated/norse.torch.functional.adjoint.lif_adjoint", "generated/norse.torch.functional.adjoint.lif_mc_adjoint", "generated/norse.torch.functional.adjoint.lif_mc_refrac_adjoint", "generated/norse.torch.functional.adjoint.lif_refrac_adjoint", "generated/norse.torch.functional.adjoint.lsnn_adjoint", "generated/norse.torch.functional.adjoint.test", "generated/norse.torch.functional.adjoint.test.test_lif_adjoint", "generated/norse.torch.functional.adjoint.test.test_lif_refrac_adjoint", "generated/norse.torch.functional.adjoint.test.test_lsnn_adjoint", "generated/norse.torch.functional.circ_dist_fn", "generated/norse.torch.functional.coba_lif", "generated/norse.torch.functional.coba_lif.CobaLIFFeedForwardState", "generated/norse.torch.functional.coba_lif.CobaLIFParameters", "generated/norse.torch.functional.coba_lif.coba_lif_feed_forward_step", "generated/norse.torch.functional.constant_current_lif_encode", "generated/norse.torch.functional.correlation_sensor", "generated/norse.torch.functional.decode", "generated/norse.torch.functional.encode", "generated/norse.torch.functional.euclidean_distance", "generated/norse.torch.functional.filter", "generated/norse.torch.functional.gaussian_rbf", "generated/norse.torch.functional.heavi_circ_fn", "generated/norse.torch.functional.heavi_erfc_fn", "generated/norse.torch.functional.heavi_tanh_fn", "generated/norse.torch.functional.heaviside", "generated/norse.torch.functional.iaf", "generated/norse.torch.functional.iaf.IAFFeedForwardState", "generated/norse.torch.functional.iaf.IAFParameters", "generated/norse.torch.functional.iaf.iaf_feed_forward_step", "generated/norse.torch.functional.izhikevich", "generated/norse.torch.functional.izhikevich.IzhikevichParameters", "generated/norse.torch.functional.izhikevich.IzhikevichSpikingBehavior", "generated/norse.torch.functional.izhikevich.accomodation", "generated/norse.torch.functional.izhikevich.bistability", "generated/norse.torch.functional.izhikevich.class_1_exc", "generated/norse.torch.functional.izhikevich.class_2_exc", "generated/norse.torch.functional.izhikevich.dap", "generated/norse.torch.functional.izhikevich.inhibition_induced_bursting", "generated/norse.torch.functional.izhikevich.inhibition_induced_spiking", "generated/norse.torch.functional.izhikevich.integrator", "generated/norse.torch.functional.izhikevich.izhikevich_feed_forward_step", "generated/norse.torch.functional.izhikevich.mixed_mode", "generated/norse.torch.functional.izhikevich.phasic_bursting", "generated/norse.torch.functional.izhikevich.phasic_spiking", "generated/norse.torch.functional.izhikevich.rebound_burst", "generated/norse.torch.functional.izhikevich.rebound_spike", "generated/norse.torch.functional.izhikevich.resonator", "generated/norse.torch.functional.izhikevich.spike_frequency_adaptation", "generated/norse.torch.functional.izhikevich.spike_latency", "generated/norse.torch.functional.izhikevich.subthreshold_oscillation", "generated/norse.torch.functional.izhikevich.tonic_bursting", "generated/norse.torch.functional.izhikevich.tonic_spiking", "generated/norse.torch.functional.leaky_integrator", "generated/norse.torch.functional.leaky_integrator.LIParameters", "generated/norse.torch.functional.leaky_integrator.LIState", "generated/norse.torch.functional.leaky_integrator.li_feed_forward_step", "generated/norse.torch.functional.leaky_integrator_box", "generated/norse.torch.functional.lif", "generated/norse.torch.functional.lif_adex", "generated/norse.torch.functional.lif_adex.LIFAdExFeedForwardState", "generated/norse.torch.functional.lif_adex.LIFAdExParameters", "generated/norse.torch.functional.lif_adex.lif_adex_current_encoder", "generated/norse.torch.functional.lif_adex.lif_adex_feed_forward_step", "generated/norse.torch.functional.lif_adex_current_encoder", "generated/norse.torch.functional.lif_adex_refrac", "generated/norse.torch.functional.lif_box", "generated/norse.torch.functional.lif_box.LIFBoxFeedForwardState", "generated/norse.torch.functional.lif_box.LIFBoxParameters", "generated/norse.torch.functional.lif_box.lif_box_feed_forward_step", "generated/norse.torch.functional.lif_correlation", "generated/norse.torch.functional.lif_current_encoder", "generated/norse.torch.functional.lif_ex", "generated/norse.torch.functional.lif_ex.LIFExFeedForwardState", "generated/norse.torch.functional.lif_ex.LIFExParameters", "generated/norse.torch.functional.lif_ex.lif_ex_current_encoder", "generated/norse.torch.functional.lif_ex.lif_ex_feed_forward_step", "generated/norse.torch.functional.lif_ex_current_encoder", "generated/norse.torch.functional.lif_feed_forward_adjoint_step", "generated/norse.torch.functional.lif_feed_forward_adjoint_step_sparse", "generated/norse.torch.functional.lif_feed_forward_step", "generated/norse.torch.functional.lif_mc", "generated/norse.torch.functional.lif_mc_feed_forward_step", "generated/norse.torch.functional.lif_mc_refrac", "generated/norse.torch.functional.lif_mc_refrac_feed_forward_step", "generated/norse.torch.functional.lif_refrac", "generated/norse.torch.functional.lif_refrac_feed_forward_adjoint_step", "generated/norse.torch.functional.lif_refrac_feed_forward_step", "generated/norse.torch.functional.lift", "generated/norse.torch.functional.logical", "generated/norse.torch.functional.logical.logical_and", "generated/norse.torch.functional.logical.logical_or", "generated/norse.torch.functional.logical.logical_xor", "generated/norse.torch.functional.logical.muller_c", "generated/norse.torch.functional.logical.posedge_detector", "generated/norse.torch.functional.logistic_fn", "generated/norse.torch.functional.lsnn", "generated/norse.torch.functional.lsnn_feed_forward_adjoint_step", "generated/norse.torch.functional.lsnn_feed_forward_step", "generated/norse.torch.functional.poisson_encode", "generated/norse.torch.functional.poisson_encode_step", "generated/norse.torch.functional.population_encode", "generated/norse.torch.functional.receptive_field", "generated/norse.torch.functional.receptive_field.gaussian_kernel", "generated/norse.torch.functional.receptive_field.spatial_receptive_field", "generated/norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives", "generated/norse.torch.functional.receptive_field.temporal_scale_distribution", "generated/norse.torch.functional.regularization", "generated/norse.torch.functional.regularization.regularize_step", "generated/norse.torch.functional.regularization.spike_accumulator", "generated/norse.torch.functional.regularization.voltage_accumulator", "generated/norse.torch.functional.reset", "generated/norse.torch.functional.signed_poisson_encode", "generated/norse.torch.functional.signed_poisson_encode_step", "generated/norse.torch.functional.spike_latency_encode", "generated/norse.torch.functional.spike_latency_lif_encode", "generated/norse.torch.functional.spikes_to_times_decoder", "generated/norse.torch.functional.stdp", "generated/norse.torch.functional.stdp_sensor", "generated/norse.torch.functional.stdp_sensor_step", "generated/norse.torch.functional.stp_step", "generated/norse.torch.functional.super_fn", "generated/norse.torch.functional.superspike", "generated/norse.torch.functional.test", "generated/norse.torch.functional.test.test_coba_lif", "generated/norse.torch.functional.test.test_decode", "generated/norse.torch.functional.test.test_encode", "generated/norse.torch.functional.test.test_exp_filter", "generated/norse.torch.functional.test.test_heaviside", "generated/norse.torch.functional.test.test_iaf", "generated/norse.torch.functional.test.test_izhikevich", "generated/norse.torch.functional.test.test_leaky_integrator", "generated/norse.torch.functional.test.test_leaky_integrator_box", "generated/norse.torch.functional.test.test_lif", "generated/norse.torch.functional.test.test_lif_adex", "generated/norse.torch.functional.test.test_lif_adex_refrac", "generated/norse.torch.functional.test.test_lif_box", "generated/norse.torch.functional.test.test_lif_ex", "generated/norse.torch.functional.test.test_lif_mc", "generated/norse.torch.functional.test.test_lif_mc_refrac", "generated/norse.torch.functional.test.test_lif_refrac", "generated/norse.torch.functional.test.test_lift", "generated/norse.torch.functional.test.test_logical", "generated/norse.torch.functional.test.test_lsnn", "generated/norse.torch.functional.test.test_receptive_field", "generated/norse.torch.functional.test.test_regularization", "generated/norse.torch.functional.test.test_spikes_to_times_decoder", "generated/norse.torch.functional.test.test_stdp", "generated/norse.torch.functional.test.test_stdp_sensor", "generated/norse.torch.functional.test.test_superspike", "generated/norse.torch.functional.test.test_threshold", "generated/norse.torch.functional.test.test_tsodyks_makram", "generated/norse.torch.functional.threshold", "generated/norse.torch.functional.triangle_fn", "generated/norse.torch.functional.tsodyks_makram", "generated/norse.torch.models", "generated/norse.torch.models.conv", "generated/norse.torch.models.mobilenet", "generated/norse.torch.models.test", "generated/norse.torch.models.test.test_conv", "generated/norse.torch.models.test.test_mobilenet", "generated/norse.torch.models.test.test_vgg", "generated/norse.torch.models.vgg", "generated/norse.torch.module", "generated/norse.torch.module.Lift", "generated/norse.torch.module.RegularizationCell", "generated/norse.torch.module.SequentialState", "generated/norse.torch.module.coba_lif", "generated/norse.torch.module.coba_lif.CobaLIFCell", "generated/norse.torch.module.conv", "generated/norse.torch.module.conv.LConv2d", "generated/norse.torch.module.encode", "generated/norse.torch.module.encode.ConstantCurrentLIFEncoder", "generated/norse.torch.module.encode.PoissonEncoder", "generated/norse.torch.module.encode.PoissonEncoderStep", "generated/norse.torch.module.encode.PopulationEncoder", "generated/norse.torch.module.encode.SignedPoissonEncoder", "generated/norse.torch.module.encode.SpikeLatencyEncoder", "generated/norse.torch.module.encode.SpikeLatencyLIFEncoder", "generated/norse.torch.module.exp_filter", "generated/norse.torch.module.iaf", "generated/norse.torch.module.iaf.IAFCell", "generated/norse.torch.module.iaf.IAFFeedForwardState", "generated/norse.torch.module.iaf.IAFParameters", "generated/norse.torch.module.izhikevich", "generated/norse.torch.module.izhikevich.Izhikevich", "generated/norse.torch.module.izhikevich.IzhikevichCell", "generated/norse.torch.module.izhikevich.IzhikevichRecurrent", "generated/norse.torch.module.izhikevich.IzhikevichRecurrentCell", "generated/norse.torch.module.izhikevich.IzhikevichSpikingBehavior", "generated/norse.torch.module.izhikevich.IzhikevichState", "generated/norse.torch.module.leaky_integrator", "generated/norse.torch.module.leaky_integrator.LI", "generated/norse.torch.module.leaky_integrator.LICell", "generated/norse.torch.module.leaky_integrator.LILinearCell", "generated/norse.torch.module.leaky_integrator.LIParameters", "generated/norse.torch.module.leaky_integrator.LIState", "generated/norse.torch.module.leaky_integrator_box", "generated/norse.torch.module.lif", "generated/norse.torch.module.lif.LIF", "generated/norse.torch.module.lif.LIFCell", "generated/norse.torch.module.lif.LIFParameters", "generated/norse.torch.module.lif.LIFRecurrent", "generated/norse.torch.module.lif.LIFRecurrentCell", "generated/norse.torch.module.lif.LIFState", "generated/norse.torch.module.lif_adex", "generated/norse.torch.module.lif_adex.LIFAdEx", "generated/norse.torch.module.lif_adex.LIFAdExCell", "generated/norse.torch.module.lif_adex.LIFAdExRecurrent", "generated/norse.torch.module.lif_adex.LIFAdExRecurrentCell", "generated/norse.torch.module.lif_adex_refrac", "generated/norse.torch.module.lif_box", "generated/norse.torch.module.lif_box.LIFBoxCell", "generated/norse.torch.module.lif_box.LIFBoxFeedForwardState", "generated/norse.torch.module.lif_box.LIFBoxParameters", "generated/norse.torch.module.lif_correlation", "generated/norse.torch.module.lif_ex", "generated/norse.torch.module.lif_ex.LIFEx", "generated/norse.torch.module.lif_ex.LIFExCell", "generated/norse.torch.module.lif_ex.LIFExRecurrent", "generated/norse.torch.module.lif_ex.LIFExRecurrentCell", "generated/norse.torch.module.lif_mc", "generated/norse.torch.module.lif_mc.LIFMCRecurrentCell", "generated/norse.torch.module.lif_mc_refrac", "generated/norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell", "generated/norse.torch.module.lif_refrac", "generated/norse.torch.module.lif_refrac.LIFRefracCell", "generated/norse.torch.module.lif_refrac.LIFRefracRecurrentCell", "generated/norse.torch.module.lift", "generated/norse.torch.module.lsnn", "generated/norse.torch.module.lsnn.LSNN", "generated/norse.torch.module.lsnn.LSNNCell", "generated/norse.torch.module.lsnn.LSNNRecurrent", "generated/norse.torch.module.lsnn.LSNNRecurrentCell", "generated/norse.torch.module.receptive_field", "generated/norse.torch.module.receptive_field.SpatialReceptiveField2d", "generated/norse.torch.module.receptive_field.TemporalReceptiveField", "generated/norse.torch.module.regularization", "generated/norse.torch.module.sequential", "generated/norse.torch.module.snn", "generated/norse.torch.module.spikes_to_times_decoder", "generated/norse.torch.module.test", "generated/norse.torch.module.test.test_coba", "generated/norse.torch.module.test.test_conv", "generated/norse.torch.module.test.test_encode", "generated/norse.torch.module.test.test_exp_filter", "generated/norse.torch.module.test.test_iaf", "generated/norse.torch.module.test.test_izhikevich", "generated/norse.torch.module.test.test_leaky_integrator", "generated/norse.torch.module.test.test_leaky_integrator_box", "generated/norse.torch.module.test.test_lif", "generated/norse.torch.module.test.test_lif_adex", "generated/norse.torch.module.test.test_lif_adex_refrac", "generated/norse.torch.module.test.test_lif_box", "generated/norse.torch.module.test.test_lif_correlation", "generated/norse.torch.module.test.test_lif_ex", "generated/norse.torch.module.test.test_lif_mc", "generated/norse.torch.module.test.test_lif_mc_refrac", "generated/norse.torch.module.test.test_lif_refrac", "generated/norse.torch.module.test.test_lift", "generated/norse.torch.module.test.test_lsnn", "generated/norse.torch.module.test.test_receptive_field", "generated/norse.torch.module.test.test_regularization", "generated/norse.torch.module.test.test_sequential", "generated/norse.torch.module.test.test_snn", "generated/norse.torch.module.test.test_spikes_to_times_decoder", "generated/norse.torch.module.test.test_training", "generated/norse.torch.utils", "generated/norse.torch.utils.clone", "generated/norse.torch.utils.export_nir", "generated/norse.torch.utils.import_nir", "generated/norse.torch.utils.plot", "generated/norse.torch.utils.plot.plot", "generated/norse.torch.utils.plot.plot_heatmap_2d", "generated/norse.torch.utils.plot.plot_heatmap_3d", "generated/norse.torch.utils.plot.plot_histogram_2d", "generated/norse.torch.utils.plot.plot_izhikevich", "generated/norse.torch.utils.plot.plot_neuron_states", "generated/norse.torch.utils.plot.plot_scatter_3d", "generated/norse.torch.utils.plot.plot_spikes_2d", "generated/norse.torch.utils.pytree", "generated/norse.torch.utils.state", "generated/norse.torch.utils.tensorboard", "generated/norse.torch.utils.tensorboard.hook_spike_activity_mean", "generated/norse.torch.utils.tensorboard.hook_spike_activity_sum", "generated/norse.torch.utils.tensorboard.hook_spike_histogram_mean", "generated/norse.torch.utils.tensorboard.hook_spike_histogram_sum", "generated/norse.torch.utils.tensorboard.hook_spike_image", "generated/norse.torch.utils.tensorboard.tensorboard", "generated/norse.torch.utils.test", "generated/norse.torch.utils.test.test_nir_export", "generated/norse.torch.utils.test.test_nir_import", "generated/norse.torch.utils.test.test_tensorboard", "generated/norse.utils", "index", "norse.torch", "norse.torch.functional", "norse.torch.utils", "pages/about", "pages/development", "pages/hardware", "pages/installing", "pages/papers", "pages/parameters", "pages/spiking", "pages/started", "pages/tasks", "pages/working"], "filenames": ["api.rst", "generated/norse.rst", "generated/norse.benchmark.rst", "generated/norse.benchmark.benchmark.rst", "generated/norse.benchmark.main.rst", "generated/norse.benchmark.norse_lif.rst", "generated/norse.benchmark.plot.rst", "generated/norse.dataset.rst", "generated/norse.dataset.memory.rst", "generated/norse.dataset.spiking_heidelberg.rst", "generated/norse.task.rst", "generated/norse.task.cifar10.rst", "generated/norse.task.correlation_experiment.rst", "generated/norse.task.memory.rst", "generated/norse.task.mnist.rst", "generated/norse.task.mnist_pl.rst", "generated/norse.torch.rst", "generated/norse.torch.functional.rst", "generated/norse.torch.functional.LIFFeedForwardState.rst", "generated/norse.torch.functional.LIFParameters.rst", "generated/norse.torch.functional.LIFRefracFeedForwardState.rst", "generated/norse.torch.functional.LIFRefracParameters.rst", "generated/norse.torch.functional.LSNNFeedForwardState.rst", "generated/norse.torch.functional.LSNNParameters.rst", "generated/norse.torch.functional.STDPSensorParameters.rst", "generated/norse.torch.functional.STDPSensorState.rst", "generated/norse.torch.functional.TsodyksMakramParameters.rst", "generated/norse.torch.functional.TsodyksMakramState.rst", "generated/norse.torch.functional.adjoint.rst", "generated/norse.torch.functional.adjoint.lif_adjoint.rst", "generated/norse.torch.functional.adjoint.lif_mc_adjoint.rst", "generated/norse.torch.functional.adjoint.lif_mc_refrac_adjoint.rst", "generated/norse.torch.functional.adjoint.lif_refrac_adjoint.rst", "generated/norse.torch.functional.adjoint.lsnn_adjoint.rst", "generated/norse.torch.functional.adjoint.test.rst", "generated/norse.torch.functional.adjoint.test.test_lif_adjoint.rst", "generated/norse.torch.functional.adjoint.test.test_lif_refrac_adjoint.rst", "generated/norse.torch.functional.adjoint.test.test_lsnn_adjoint.rst", "generated/norse.torch.functional.circ_dist_fn.rst", "generated/norse.torch.functional.coba_lif.rst", "generated/norse.torch.functional.coba_lif.CobaLIFFeedForwardState.rst", "generated/norse.torch.functional.coba_lif.CobaLIFParameters.rst", "generated/norse.torch.functional.coba_lif.coba_lif_feed_forward_step.rst", "generated/norse.torch.functional.constant_current_lif_encode.rst", "generated/norse.torch.functional.correlation_sensor.rst", "generated/norse.torch.functional.decode.rst", "generated/norse.torch.functional.encode.rst", "generated/norse.torch.functional.euclidean_distance.rst", "generated/norse.torch.functional.filter.rst", "generated/norse.torch.functional.gaussian_rbf.rst", "generated/norse.torch.functional.heavi_circ_fn.rst", "generated/norse.torch.functional.heavi_erfc_fn.rst", "generated/norse.torch.functional.heavi_tanh_fn.rst", "generated/norse.torch.functional.heaviside.rst", "generated/norse.torch.functional.iaf.rst", "generated/norse.torch.functional.iaf.IAFFeedForwardState.rst", "generated/norse.torch.functional.iaf.IAFParameters.rst", "generated/norse.torch.functional.iaf.iaf_feed_forward_step.rst", "generated/norse.torch.functional.izhikevich.rst", "generated/norse.torch.functional.izhikevich.IzhikevichParameters.rst", "generated/norse.torch.functional.izhikevich.IzhikevichSpikingBehavior.rst", "generated/norse.torch.functional.izhikevich.accomodation.rst", "generated/norse.torch.functional.izhikevich.bistability.rst", "generated/norse.torch.functional.izhikevich.class_1_exc.rst", "generated/norse.torch.functional.izhikevich.class_2_exc.rst", "generated/norse.torch.functional.izhikevich.dap.rst", "generated/norse.torch.functional.izhikevich.inhibition_induced_bursting.rst", "generated/norse.torch.functional.izhikevich.inhibition_induced_spiking.rst", "generated/norse.torch.functional.izhikevich.integrator.rst", "generated/norse.torch.functional.izhikevich.izhikevich_feed_forward_step.rst", "generated/norse.torch.functional.izhikevich.mixed_mode.rst", "generated/norse.torch.functional.izhikevich.phasic_bursting.rst", "generated/norse.torch.functional.izhikevich.phasic_spiking.rst", "generated/norse.torch.functional.izhikevich.rebound_burst.rst", "generated/norse.torch.functional.izhikevich.rebound_spike.rst", "generated/norse.torch.functional.izhikevich.resonator.rst", "generated/norse.torch.functional.izhikevich.spike_frequency_adaptation.rst", "generated/norse.torch.functional.izhikevich.spike_latency.rst", "generated/norse.torch.functional.izhikevich.subthreshold_oscillation.rst", "generated/norse.torch.functional.izhikevich.tonic_bursting.rst", "generated/norse.torch.functional.izhikevich.tonic_spiking.rst", "generated/norse.torch.functional.leaky_integrator.rst", "generated/norse.torch.functional.leaky_integrator.LIParameters.rst", "generated/norse.torch.functional.leaky_integrator.LIState.rst", "generated/norse.torch.functional.leaky_integrator.li_feed_forward_step.rst", "generated/norse.torch.functional.leaky_integrator_box.rst", "generated/norse.torch.functional.lif.rst", "generated/norse.torch.functional.lif_adex.rst", "generated/norse.torch.functional.lif_adex.LIFAdExFeedForwardState.rst", "generated/norse.torch.functional.lif_adex.LIFAdExParameters.rst", "generated/norse.torch.functional.lif_adex.lif_adex_current_encoder.rst", "generated/norse.torch.functional.lif_adex.lif_adex_feed_forward_step.rst", "generated/norse.torch.functional.lif_adex_current_encoder.rst", "generated/norse.torch.functional.lif_adex_refrac.rst", "generated/norse.torch.functional.lif_box.rst", "generated/norse.torch.functional.lif_box.LIFBoxFeedForwardState.rst", "generated/norse.torch.functional.lif_box.LIFBoxParameters.rst", "generated/norse.torch.functional.lif_box.lif_box_feed_forward_step.rst", "generated/norse.torch.functional.lif_correlation.rst", "generated/norse.torch.functional.lif_current_encoder.rst", "generated/norse.torch.functional.lif_ex.rst", "generated/norse.torch.functional.lif_ex.LIFExFeedForwardState.rst", "generated/norse.torch.functional.lif_ex.LIFExParameters.rst", "generated/norse.torch.functional.lif_ex.lif_ex_current_encoder.rst", "generated/norse.torch.functional.lif_ex.lif_ex_feed_forward_step.rst", "generated/norse.torch.functional.lif_ex_current_encoder.rst", "generated/norse.torch.functional.lif_feed_forward_adjoint_step.rst", "generated/norse.torch.functional.lif_feed_forward_adjoint_step_sparse.rst", "generated/norse.torch.functional.lif_feed_forward_step.rst", "generated/norse.torch.functional.lif_mc.rst", "generated/norse.torch.functional.lif_mc_feed_forward_step.rst", "generated/norse.torch.functional.lif_mc_refrac.rst", "generated/norse.torch.functional.lif_mc_refrac_feed_forward_step.rst", "generated/norse.torch.functional.lif_refrac.rst", "generated/norse.torch.functional.lif_refrac_feed_forward_adjoint_step.rst", "generated/norse.torch.functional.lif_refrac_feed_forward_step.rst", "generated/norse.torch.functional.lift.rst", "generated/norse.torch.functional.logical.rst", "generated/norse.torch.functional.logical.logical_and.rst", "generated/norse.torch.functional.logical.logical_or.rst", "generated/norse.torch.functional.logical.logical_xor.rst", "generated/norse.torch.functional.logical.muller_c.rst", "generated/norse.torch.functional.logical.posedge_detector.rst", "generated/norse.torch.functional.logistic_fn.rst", "generated/norse.torch.functional.lsnn.rst", "generated/norse.torch.functional.lsnn_feed_forward_adjoint_step.rst", "generated/norse.torch.functional.lsnn_feed_forward_step.rst", "generated/norse.torch.functional.poisson_encode.rst", "generated/norse.torch.functional.poisson_encode_step.rst", "generated/norse.torch.functional.population_encode.rst", "generated/norse.torch.functional.receptive_field.rst", "generated/norse.torch.functional.receptive_field.gaussian_kernel.rst", "generated/norse.torch.functional.receptive_field.spatial_receptive_field.rst", "generated/norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives.rst", "generated/norse.torch.functional.receptive_field.temporal_scale_distribution.rst", "generated/norse.torch.functional.regularization.rst", "generated/norse.torch.functional.regularization.regularize_step.rst", "generated/norse.torch.functional.regularization.spike_accumulator.rst", "generated/norse.torch.functional.regularization.voltage_accumulator.rst", "generated/norse.torch.functional.reset.rst", "generated/norse.torch.functional.signed_poisson_encode.rst", "generated/norse.torch.functional.signed_poisson_encode_step.rst", "generated/norse.torch.functional.spike_latency_encode.rst", "generated/norse.torch.functional.spike_latency_lif_encode.rst", "generated/norse.torch.functional.spikes_to_times_decoder.rst", "generated/norse.torch.functional.stdp.rst", "generated/norse.torch.functional.stdp_sensor.rst", "generated/norse.torch.functional.stdp_sensor_step.rst", "generated/norse.torch.functional.stp_step.rst", "generated/norse.torch.functional.super_fn.rst", "generated/norse.torch.functional.superspike.rst", "generated/norse.torch.functional.test.rst", "generated/norse.torch.functional.test.test_coba_lif.rst", "generated/norse.torch.functional.test.test_decode.rst", "generated/norse.torch.functional.test.test_encode.rst", "generated/norse.torch.functional.test.test_exp_filter.rst", "generated/norse.torch.functional.test.test_heaviside.rst", "generated/norse.torch.functional.test.test_iaf.rst", "generated/norse.torch.functional.test.test_izhikevich.rst", "generated/norse.torch.functional.test.test_leaky_integrator.rst", "generated/norse.torch.functional.test.test_leaky_integrator_box.rst", "generated/norse.torch.functional.test.test_lif.rst", "generated/norse.torch.functional.test.test_lif_adex.rst", "generated/norse.torch.functional.test.test_lif_adex_refrac.rst", "generated/norse.torch.functional.test.test_lif_box.rst", "generated/norse.torch.functional.test.test_lif_ex.rst", "generated/norse.torch.functional.test.test_lif_mc.rst", "generated/norse.torch.functional.test.test_lif_mc_refrac.rst", "generated/norse.torch.functional.test.test_lif_refrac.rst", "generated/norse.torch.functional.test.test_lift.rst", "generated/norse.torch.functional.test.test_logical.rst", "generated/norse.torch.functional.test.test_lsnn.rst", "generated/norse.torch.functional.test.test_receptive_field.rst", "generated/norse.torch.functional.test.test_regularization.rst", "generated/norse.torch.functional.test.test_spikes_to_times_decoder.rst", "generated/norse.torch.functional.test.test_stdp.rst", "generated/norse.torch.functional.test.test_stdp_sensor.rst", "generated/norse.torch.functional.test.test_superspike.rst", "generated/norse.torch.functional.test.test_threshold.rst", "generated/norse.torch.functional.test.test_tsodyks_makram.rst", "generated/norse.torch.functional.threshold.rst", "generated/norse.torch.functional.triangle_fn.rst", "generated/norse.torch.functional.tsodyks_makram.rst", "generated/norse.torch.models.rst", "generated/norse.torch.models.conv.rst", "generated/norse.torch.models.mobilenet.rst", "generated/norse.torch.models.test.rst", "generated/norse.torch.models.test.test_conv.rst", "generated/norse.torch.models.test.test_mobilenet.rst", "generated/norse.torch.models.test.test_vgg.rst", "generated/norse.torch.models.vgg.rst", "generated/norse.torch.module.rst", "generated/norse.torch.module.Lift.rst", "generated/norse.torch.module.RegularizationCell.rst", "generated/norse.torch.module.SequentialState.rst", "generated/norse.torch.module.coba_lif.rst", "generated/norse.torch.module.coba_lif.CobaLIFCell.rst", "generated/norse.torch.module.conv.rst", "generated/norse.torch.module.conv.LConv2d.rst", "generated/norse.torch.module.encode.rst", "generated/norse.torch.module.encode.ConstantCurrentLIFEncoder.rst", "generated/norse.torch.module.encode.PoissonEncoder.rst", "generated/norse.torch.module.encode.PoissonEncoderStep.rst", "generated/norse.torch.module.encode.PopulationEncoder.rst", "generated/norse.torch.module.encode.SignedPoissonEncoder.rst", "generated/norse.torch.module.encode.SpikeLatencyEncoder.rst", "generated/norse.torch.module.encode.SpikeLatencyLIFEncoder.rst", "generated/norse.torch.module.exp_filter.rst", "generated/norse.torch.module.iaf.rst", "generated/norse.torch.module.iaf.IAFCell.rst", "generated/norse.torch.module.iaf.IAFFeedForwardState.rst", "generated/norse.torch.module.iaf.IAFParameters.rst", "generated/norse.torch.module.izhikevich.rst", "generated/norse.torch.module.izhikevich.Izhikevich.rst", "generated/norse.torch.module.izhikevich.IzhikevichCell.rst", "generated/norse.torch.module.izhikevich.IzhikevichRecurrent.rst", "generated/norse.torch.module.izhikevich.IzhikevichRecurrentCell.rst", "generated/norse.torch.module.izhikevich.IzhikevichSpikingBehavior.rst", "generated/norse.torch.module.izhikevich.IzhikevichState.rst", "generated/norse.torch.module.leaky_integrator.rst", "generated/norse.torch.module.leaky_integrator.LI.rst", "generated/norse.torch.module.leaky_integrator.LICell.rst", "generated/norse.torch.module.leaky_integrator.LILinearCell.rst", "generated/norse.torch.module.leaky_integrator.LIParameters.rst", "generated/norse.torch.module.leaky_integrator.LIState.rst", "generated/norse.torch.module.leaky_integrator_box.rst", "generated/norse.torch.module.lif.rst", "generated/norse.torch.module.lif.LIF.rst", "generated/norse.torch.module.lif.LIFCell.rst", "generated/norse.torch.module.lif.LIFParameters.rst", "generated/norse.torch.module.lif.LIFRecurrent.rst", "generated/norse.torch.module.lif.LIFRecurrentCell.rst", "generated/norse.torch.module.lif.LIFState.rst", "generated/norse.torch.module.lif_adex.rst", "generated/norse.torch.module.lif_adex.LIFAdEx.rst", "generated/norse.torch.module.lif_adex.LIFAdExCell.rst", "generated/norse.torch.module.lif_adex.LIFAdExRecurrent.rst", "generated/norse.torch.module.lif_adex.LIFAdExRecurrentCell.rst", "generated/norse.torch.module.lif_adex_refrac.rst", "generated/norse.torch.module.lif_box.rst", "generated/norse.torch.module.lif_box.LIFBoxCell.rst", "generated/norse.torch.module.lif_box.LIFBoxFeedForwardState.rst", "generated/norse.torch.module.lif_box.LIFBoxParameters.rst", "generated/norse.torch.module.lif_correlation.rst", "generated/norse.torch.module.lif_ex.rst", "generated/norse.torch.module.lif_ex.LIFEx.rst", "generated/norse.torch.module.lif_ex.LIFExCell.rst", "generated/norse.torch.module.lif_ex.LIFExRecurrent.rst", "generated/norse.torch.module.lif_ex.LIFExRecurrentCell.rst", "generated/norse.torch.module.lif_mc.rst", "generated/norse.torch.module.lif_mc.LIFMCRecurrentCell.rst", "generated/norse.torch.module.lif_mc_refrac.rst", "generated/norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell.rst", "generated/norse.torch.module.lif_refrac.rst", "generated/norse.torch.module.lif_refrac.LIFRefracCell.rst", "generated/norse.torch.module.lif_refrac.LIFRefracRecurrentCell.rst", "generated/norse.torch.module.lift.rst", "generated/norse.torch.module.lsnn.rst", "generated/norse.torch.module.lsnn.LSNN.rst", "generated/norse.torch.module.lsnn.LSNNCell.rst", "generated/norse.torch.module.lsnn.LSNNRecurrent.rst", "generated/norse.torch.module.lsnn.LSNNRecurrentCell.rst", "generated/norse.torch.module.receptive_field.rst", "generated/norse.torch.module.receptive_field.SpatialReceptiveField2d.rst", "generated/norse.torch.module.receptive_field.TemporalReceptiveField.rst", "generated/norse.torch.module.regularization.rst", "generated/norse.torch.module.sequential.rst", "generated/norse.torch.module.snn.rst", "generated/norse.torch.module.spikes_to_times_decoder.rst", "generated/norse.torch.module.test.rst", "generated/norse.torch.module.test.test_coba.rst", "generated/norse.torch.module.test.test_conv.rst", "generated/norse.torch.module.test.test_encode.rst", "generated/norse.torch.module.test.test_exp_filter.rst", "generated/norse.torch.module.test.test_iaf.rst", "generated/norse.torch.module.test.test_izhikevich.rst", "generated/norse.torch.module.test.test_leaky_integrator.rst", "generated/norse.torch.module.test.test_leaky_integrator_box.rst", "generated/norse.torch.module.test.test_lif.rst", "generated/norse.torch.module.test.test_lif_adex.rst", "generated/norse.torch.module.test.test_lif_adex_refrac.rst", "generated/norse.torch.module.test.test_lif_box.rst", "generated/norse.torch.module.test.test_lif_correlation.rst", "generated/norse.torch.module.test.test_lif_ex.rst", "generated/norse.torch.module.test.test_lif_mc.rst", "generated/norse.torch.module.test.test_lif_mc_refrac.rst", "generated/norse.torch.module.test.test_lif_refrac.rst", "generated/norse.torch.module.test.test_lift.rst", "generated/norse.torch.module.test.test_lsnn.rst", "generated/norse.torch.module.test.test_receptive_field.rst", "generated/norse.torch.module.test.test_regularization.rst", "generated/norse.torch.module.test.test_sequential.rst", "generated/norse.torch.module.test.test_snn.rst", "generated/norse.torch.module.test.test_spikes_to_times_decoder.rst", "generated/norse.torch.module.test.test_training.rst", "generated/norse.torch.utils.rst", "generated/norse.torch.utils.clone.rst", "generated/norse.torch.utils.export_nir.rst", "generated/norse.torch.utils.import_nir.rst", "generated/norse.torch.utils.plot.rst", "generated/norse.torch.utils.plot.plot.rst", "generated/norse.torch.utils.plot.plot_heatmap_2d.rst", "generated/norse.torch.utils.plot.plot_heatmap_3d.rst", "generated/norse.torch.utils.plot.plot_histogram_2d.rst", "generated/norse.torch.utils.plot.plot_izhikevich.rst", "generated/norse.torch.utils.plot.plot_neuron_states.rst", "generated/norse.torch.utils.plot.plot_scatter_3d.rst", "generated/norse.torch.utils.plot.plot_spikes_2d.rst", "generated/norse.torch.utils.pytree.rst", "generated/norse.torch.utils.state.rst", "generated/norse.torch.utils.tensorboard.rst", "generated/norse.torch.utils.tensorboard.hook_spike_activity_mean.rst", "generated/norse.torch.utils.tensorboard.hook_spike_activity_sum.rst", "generated/norse.torch.utils.tensorboard.hook_spike_histogram_mean.rst", "generated/norse.torch.utils.tensorboard.hook_spike_histogram_sum.rst", "generated/norse.torch.utils.tensorboard.hook_spike_image.rst", "generated/norse.torch.utils.tensorboard.tensorboard.rst", "generated/norse.torch.utils.test.rst", "generated/norse.torch.utils.test.test_nir_export.rst", "generated/norse.torch.utils.test.test_nir_import.rst", "generated/norse.torch.utils.test.test_tensorboard.rst", "generated/norse.utils.rst", "index.md", "norse.torch.rst", "norse.torch.functional.rst", "norse.torch.utils.rst", "pages/about.rst", "pages/development.md", "pages/hardware.rst", "pages/installing.md", "pages/papers.rst", "pages/parameters.ipynb", "pages/spiking.ipynb", "pages/started.ipynb", "pages/tasks.rst", "pages/working.ipynb"], "titles": ["Complete API", "norse", "norse.benchmark", "norse.benchmark.benchmark", "norse.benchmark.main", "norse.benchmark.norse_lif", "norse.benchmark.plot", "norse.dataset", "norse.dataset.memory", "norse.dataset.spiking_heidelberg", "norse.task", "norse.task.cifar10", "norse.task.correlation_experiment", "norse.task.memory", "norse.task.mnist", "norse.task.mnist_pl", "norse.torch", "norse.torch.functional", "norse.torch.functional.LIFFeedForwardState", "norse.torch.functional.LIFParameters", "norse.torch.functional.LIFRefracFeedForwardState", "norse.torch.functional.LIFRefracParameters", "norse.torch.functional.LSNNFeedForwardState", "norse.torch.functional.LSNNParameters", "norse.torch.functional.STDPSensorParameters", "norse.torch.functional.STDPSensorState", "norse.torch.functional.TsodyksMakramParameters", "norse.torch.functional.TsodyksMakramState", "norse.torch.functional.adjoint", "norse.torch.functional.adjoint.lif_adjoint", "norse.torch.functional.adjoint.lif_mc_adjoint", "norse.torch.functional.adjoint.lif_mc_refrac_adjoint", "norse.torch.functional.adjoint.lif_refrac_adjoint", "norse.torch.functional.adjoint.lsnn_adjoint", "norse.torch.functional.adjoint.test", "norse.torch.functional.adjoint.test.test_lif_adjoint", "norse.torch.functional.adjoint.test.test_lif_refrac_adjoint", "norse.torch.functional.adjoint.test.test_lsnn_adjoint", "norse.torch.functional.circ_dist_fn", "norse.torch.functional.coba_lif", "norse.torch.functional.coba_lif.CobaLIFFeedForwardState", "norse.torch.functional.coba_lif.CobaLIFParameters", "norse.torch.functional.coba_lif.coba_lif_feed_forward_step", "norse.torch.functional.constant_current_lif_encode", "norse.torch.functional.correlation_sensor", "norse.torch.functional.decode", "norse.torch.functional.encode", "norse.torch.functional.euclidean_distance", "norse.torch.functional.filter", "norse.torch.functional.gaussian_rbf", "norse.torch.functional.heavi_circ_fn", "norse.torch.functional.heavi_erfc_fn", "norse.torch.functional.heavi_tanh_fn", "norse.torch.functional.heaviside", "norse.torch.functional.iaf", "norse.torch.functional.iaf.IAFFeedForwardState", "norse.torch.functional.iaf.IAFParameters", "norse.torch.functional.iaf.iaf_feed_forward_step", "norse.torch.functional.izhikevich", "norse.torch.functional.izhikevich.IzhikevichParameters", "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior", "norse.torch.functional.izhikevich.accomodation", "norse.torch.functional.izhikevich.bistability", "norse.torch.functional.izhikevich.class_1_exc", "norse.torch.functional.izhikevich.class_2_exc", "norse.torch.functional.izhikevich.dap", "norse.torch.functional.izhikevich.inhibition_induced_bursting", "norse.torch.functional.izhikevich.inhibition_induced_spiking", "norse.torch.functional.izhikevich.integrator", "norse.torch.functional.izhikevich.izhikevich_feed_forward_step", "norse.torch.functional.izhikevich.mixed_mode", "norse.torch.functional.izhikevich.phasic_bursting", "norse.torch.functional.izhikevich.phasic_spiking", "norse.torch.functional.izhikevich.rebound_burst", "norse.torch.functional.izhikevich.rebound_spike", "norse.torch.functional.izhikevich.resonator", "norse.torch.functional.izhikevich.spike_frequency_adaptation", "norse.torch.functional.izhikevich.spike_latency", "norse.torch.functional.izhikevich.subthreshold_oscillation", "norse.torch.functional.izhikevich.tonic_bursting", "norse.torch.functional.izhikevich.tonic_spiking", "norse.torch.functional.leaky_integrator", "norse.torch.functional.leaky_integrator.LIParameters", "norse.torch.functional.leaky_integrator.LIState", "norse.torch.functional.leaky_integrator.li_feed_forward_step", "norse.torch.functional.leaky_integrator_box", "norse.torch.functional.lif", "norse.torch.functional.lif_adex", "norse.torch.functional.lif_adex.LIFAdExFeedForwardState", "norse.torch.functional.lif_adex.LIFAdExParameters", "norse.torch.functional.lif_adex.lif_adex_current_encoder", "norse.torch.functional.lif_adex.lif_adex_feed_forward_step", "norse.torch.functional.lif_adex_current_encoder", "norse.torch.functional.lif_adex_refrac", "norse.torch.functional.lif_box", "norse.torch.functional.lif_box.LIFBoxFeedForwardState", "norse.torch.functional.lif_box.LIFBoxParameters", "norse.torch.functional.lif_box.lif_box_feed_forward_step", "norse.torch.functional.lif_correlation", "norse.torch.functional.lif_current_encoder", "norse.torch.functional.lif_ex", "norse.torch.functional.lif_ex.LIFExFeedForwardState", "norse.torch.functional.lif_ex.LIFExParameters", "norse.torch.functional.lif_ex.lif_ex_current_encoder", "norse.torch.functional.lif_ex.lif_ex_feed_forward_step", "norse.torch.functional.lif_ex_current_encoder", "norse.torch.functional.lif_feed_forward_adjoint_step", "norse.torch.functional.lif_feed_forward_adjoint_step_sparse", "norse.torch.functional.lif_feed_forward_step", "norse.torch.functional.lif_mc", "norse.torch.functional.lif_mc_feed_forward_step", "norse.torch.functional.lif_mc_refrac", "norse.torch.functional.lif_mc_refrac_feed_forward_step", "norse.torch.functional.lif_refrac", "norse.torch.functional.lif_refrac_feed_forward_adjoint_step", "norse.torch.functional.lif_refrac_feed_forward_step", "norse.torch.functional.lift", "norse.torch.functional.logical", "norse.torch.functional.logical.logical_and", "norse.torch.functional.logical.logical_or", "norse.torch.functional.logical.logical_xor", "norse.torch.functional.logical.muller_c", "norse.torch.functional.logical.posedge_detector", "norse.torch.functional.logistic_fn", "norse.torch.functional.lsnn", "norse.torch.functional.lsnn_feed_forward_adjoint_step", "norse.torch.functional.lsnn_feed_forward_step", "norse.torch.functional.poisson_encode", "norse.torch.functional.poisson_encode_step", "norse.torch.functional.population_encode", "norse.torch.functional.receptive_field", "norse.torch.functional.receptive_field.gaussian_kernel", "norse.torch.functional.receptive_field.spatial_receptive_field", "norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives", "norse.torch.functional.receptive_field.temporal_scale_distribution", "norse.torch.functional.regularization", "norse.torch.functional.regularization.regularize_step", "norse.torch.functional.regularization.spike_accumulator", "norse.torch.functional.regularization.voltage_accumulator", "norse.torch.functional.reset", "norse.torch.functional.signed_poisson_encode", "norse.torch.functional.signed_poisson_encode_step", "norse.torch.functional.spike_latency_encode", "norse.torch.functional.spike_latency_lif_encode", "norse.torch.functional.spikes_to_times_decoder", "norse.torch.functional.stdp", "norse.torch.functional.stdp_sensor", "norse.torch.functional.stdp_sensor_step", "norse.torch.functional.stp_step", "norse.torch.functional.super_fn", "norse.torch.functional.superspike", "norse.torch.functional.test", "norse.torch.functional.test.test_coba_lif", "norse.torch.functional.test.test_decode", "norse.torch.functional.test.test_encode", "norse.torch.functional.test.test_exp_filter", "norse.torch.functional.test.test_heaviside", "norse.torch.functional.test.test_iaf", "norse.torch.functional.test.test_izhikevich", "norse.torch.functional.test.test_leaky_integrator", "norse.torch.functional.test.test_leaky_integrator_box", "norse.torch.functional.test.test_lif", "norse.torch.functional.test.test_lif_adex", "norse.torch.functional.test.test_lif_adex_refrac", "norse.torch.functional.test.test_lif_box", "norse.torch.functional.test.test_lif_ex", "norse.torch.functional.test.test_lif_mc", "norse.torch.functional.test.test_lif_mc_refrac", "norse.torch.functional.test.test_lif_refrac", "norse.torch.functional.test.test_lift", "norse.torch.functional.test.test_logical", "norse.torch.functional.test.test_lsnn", "norse.torch.functional.test.test_receptive_field", "norse.torch.functional.test.test_regularization", "norse.torch.functional.test.test_spikes_to_times_decoder", "norse.torch.functional.test.test_stdp", "norse.torch.functional.test.test_stdp_sensor", "norse.torch.functional.test.test_superspike", "norse.torch.functional.test.test_threshold", "norse.torch.functional.test.test_tsodyks_makram", "norse.torch.functional.threshold", "norse.torch.functional.triangle_fn", "norse.torch.functional.tsodyks_makram", "norse.torch.models", "norse.torch.models.conv", "norse.torch.models.mobilenet", "norse.torch.models.test", "norse.torch.models.test.test_conv", "norse.torch.models.test.test_mobilenet", "norse.torch.models.test.test_vgg", "norse.torch.models.vgg", "norse.torch.module", "norse.torch.module.Lift", "norse.torch.module.RegularizationCell", "norse.torch.module.SequentialState", "norse.torch.module.coba_lif", "norse.torch.module.coba_lif.CobaLIFCell", "norse.torch.module.conv", "norse.torch.module.conv.LConv2d", "norse.torch.module.encode", "norse.torch.module.encode.ConstantCurrentLIFEncoder", "norse.torch.module.encode.PoissonEncoder", "norse.torch.module.encode.PoissonEncoderStep", "norse.torch.module.encode.PopulationEncoder", "norse.torch.module.encode.SignedPoissonEncoder", "norse.torch.module.encode.SpikeLatencyEncoder", "norse.torch.module.encode.SpikeLatencyLIFEncoder", "norse.torch.module.exp_filter", "norse.torch.module.iaf", "norse.torch.module.iaf.IAFCell", "norse.torch.module.iaf.IAFFeedForwardState", "norse.torch.module.iaf.IAFParameters", "norse.torch.module.izhikevich", "norse.torch.module.izhikevich.Izhikevich", "norse.torch.module.izhikevich.IzhikevichCell", "norse.torch.module.izhikevich.IzhikevichRecurrent", "norse.torch.module.izhikevich.IzhikevichRecurrentCell", "norse.torch.module.izhikevich.IzhikevichSpikingBehavior", "norse.torch.module.izhikevich.IzhikevichState", "norse.torch.module.leaky_integrator", "norse.torch.module.leaky_integrator.LI", "norse.torch.module.leaky_integrator.LICell", "norse.torch.module.leaky_integrator.LILinearCell", "norse.torch.module.leaky_integrator.LIParameters", "norse.torch.module.leaky_integrator.LIState", "norse.torch.module.leaky_integrator_box", "norse.torch.module.lif", "norse.torch.module.lif.LIF", "norse.torch.module.lif.LIFCell", "norse.torch.module.lif.LIFParameters", "norse.torch.module.lif.LIFRecurrent", "norse.torch.module.lif.LIFRecurrentCell", "norse.torch.module.lif.LIFState", "norse.torch.module.lif_adex", "norse.torch.module.lif_adex.LIFAdEx", "norse.torch.module.lif_adex.LIFAdExCell", "norse.torch.module.lif_adex.LIFAdExRecurrent", "norse.torch.module.lif_adex.LIFAdExRecurrentCell", "norse.torch.module.lif_adex_refrac", "norse.torch.module.lif_box", "norse.torch.module.lif_box.LIFBoxCell", "norse.torch.module.lif_box.LIFBoxFeedForwardState", "norse.torch.module.lif_box.LIFBoxParameters", "norse.torch.module.lif_correlation", "norse.torch.module.lif_ex", "norse.torch.module.lif_ex.LIFEx", "norse.torch.module.lif_ex.LIFExCell", "norse.torch.module.lif_ex.LIFExRecurrent", "norse.torch.module.lif_ex.LIFExRecurrentCell", "norse.torch.module.lif_mc", "norse.torch.module.lif_mc.LIFMCRecurrentCell", "norse.torch.module.lif_mc_refrac", "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell", "norse.torch.module.lif_refrac", "norse.torch.module.lif_refrac.LIFRefracCell", "norse.torch.module.lif_refrac.LIFRefracRecurrentCell", "norse.torch.module.lift", "norse.torch.module.lsnn", "norse.torch.module.lsnn.LSNN", "norse.torch.module.lsnn.LSNNCell", "norse.torch.module.lsnn.LSNNRecurrent", "norse.torch.module.lsnn.LSNNRecurrentCell", "norse.torch.module.receptive_field", "norse.torch.module.receptive_field.SpatialReceptiveField2d", "norse.torch.module.receptive_field.TemporalReceptiveField", "norse.torch.module.regularization", "norse.torch.module.sequential", "norse.torch.module.snn", "norse.torch.module.spikes_to_times_decoder", "norse.torch.module.test", "norse.torch.module.test.test_coba", "norse.torch.module.test.test_conv", "norse.torch.module.test.test_encode", "norse.torch.module.test.test_exp_filter", "norse.torch.module.test.test_iaf", "norse.torch.module.test.test_izhikevich", "norse.torch.module.test.test_leaky_integrator", "norse.torch.module.test.test_leaky_integrator_box", "norse.torch.module.test.test_lif", "norse.torch.module.test.test_lif_adex", "norse.torch.module.test.test_lif_adex_refrac", "norse.torch.module.test.test_lif_box", "norse.torch.module.test.test_lif_correlation", "norse.torch.module.test.test_lif_ex", "norse.torch.module.test.test_lif_mc", "norse.torch.module.test.test_lif_mc_refrac", "norse.torch.module.test.test_lif_refrac", "norse.torch.module.test.test_lift", "norse.torch.module.test.test_lsnn", "norse.torch.module.test.test_receptive_field", "norse.torch.module.test.test_regularization", "norse.torch.module.test.test_sequential", "norse.torch.module.test.test_snn", "norse.torch.module.test.test_spikes_to_times_decoder", "norse.torch.module.test.test_training", "norse.torch.utils", "norse.torch.utils.clone", "norse.torch.utils.export_nir", "norse.torch.utils.import_nir", "norse.torch.utils.plot", "norse.torch.utils.plot.plot", "norse.torch.utils.plot.plot_heatmap_2d", "norse.torch.utils.plot.plot_heatmap_3d", "norse.torch.utils.plot.plot_histogram_2d", "norse.torch.utils.plot.plot_izhikevich", "norse.torch.utils.plot.plot_neuron_states", "norse.torch.utils.plot.plot_scatter_3d", "norse.torch.utils.plot.plot_spikes_2d", "norse.torch.utils.pytree", "norse.torch.utils.state", "norse.torch.utils.tensorboard", "norse.torch.utils.tensorboard.hook_spike_activity_mean", "norse.torch.utils.tensorboard.hook_spike_activity_sum", "norse.torch.utils.tensorboard.hook_spike_histogram_mean", "norse.torch.utils.tensorboard.hook_spike_histogram_sum", "norse.torch.utils.tensorboard.hook_spike_image", "norse.torch.utils.tensorboard.tensorboard", "norse.torch.utils.test", "norse.torch.utils.test.test_nir_export", "norse.torch.utils.test.test_nir_import", "norse.torch.utils.test.test_tensorboard", "norse.utils", "Getting started", "norse.torch", "norse.torch.functional", "norse.torch.utils", "<span class=\"section-number\">9. </span>About Norse", "<span class=\"section-number\">10. </span>Development Documentation", "<span class=\"section-number\">7. </span>Hardware acceleration", "<span class=\"section-number\">1. </span>Installing Norse", "<span class=\"section-number\">8. </span>Papers citing Norse", "<span class=\"section-number\">6. </span>Parameter learning in Spiking Neural Networks", "<span class=\"section-number\">4. </span>Introduction to spiking systems", "<span class=\"section-number\">2. </span>Quickstart", "<span class=\"section-number\">5. </span>Running Tasks", "<span class=\"section-number\">3. </span>Working with Norse"], "terms": {"librari": [1, 15, 16, 322, 329, 332, 334, 335], "do": [1, 16, 329, 331, 332], "deep": [1, 16, 322, 329, 330, 333], "learn": [1, 14, 15, 16, 322, 329, 330, 332, 333, 334], "spike": [1, 7, 9, 14, 15, 16, 17, 19, 41, 43, 46, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 89, 90, 91, 92, 94, 96, 97, 102, 104, 106, 107, 108, 110, 115, 116, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 140, 141, 142, 143, 147, 148, 191, 193, 196, 200, 201, 202, 204, 205, 206, 211, 213, 214, 215, 216, 217, 219, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 242, 245, 246, 247, 248, 250, 255, 261, 262, 265, 267, 300, 301, 302, 303, 306, 307, 311, 312, 313, 314, 315, 322, 323, 325, 326, 327, 330, 333, 334, 335], "neural": [1, 7, 9, 16, 17, 86, 191, 267, 322, 323, 324, 325, 326, 330, 332, 333, 334, 335], "network": [1, 7, 9, 14, 15, 16, 17, 86, 191, 267, 295, 322, 323, 324, 325, 326, 329, 330, 332, 333, 334, 335], "modul": [1, 2, 7, 10, 16, 17, 22, 28, 34, 45, 85, 86, 91, 94, 97, 104, 108, 124, 135, 151, 154, 155, 183, 186, 295, 299, 310, 311, 312, 313, 314, 315, 317, 321, 322, 323, 324, 327, 328, 331, 332, 333, 335], "tool": [2, 326, 335], "script": 2, "class": [3, 5, 8, 9, 11, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 39, 40, 41, 44, 54, 55, 56, 58, 59, 60, 81, 82, 83, 85, 86, 87, 88, 89, 93, 94, 95, 96, 98, 100, 101, 102, 113, 116, 124, 144, 145, 146, 150, 177, 180, 182, 184, 185, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 275, 278, 292, 294, 298, 301, 302, 303, 306, 307, 308, 320, 327, 328, 331, 334], "function": [4, 5, 6, 11, 12, 13, 14, 15, 16, 185, 187, 188, 189, 190, 193, 203, 207, 219, 225, 226, 227, 228, 230, 231, 235, 239, 240, 242, 257, 264, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307, 308, 316, 318, 319, 320, 323, 327, 328, 331, 332, 333, 335], "tempor": [7, 45, 116, 134, 142, 192, 198, 205, 213, 215, 227, 230, 234, 236, 245, 247, 264, 322, 332, 334, 335], "data": [7, 43, 48, 49, 53, 127, 128, 129, 137, 138, 140, 141, 142, 192, 193, 194, 200, 203, 205, 207, 213, 215, 216, 220, 227, 228, 230, 231, 234, 235, 236, 245, 247, 258, 260, 299, 301, 302, 303, 306, 310, 328, 330, 331, 332, 335], "ideal": 7, "analysi": 7, "The": [9, 43, 49, 81, 86, 116, 124, 129, 131, 132, 133, 134, 135, 136, 137, 138, 193, 198, 200, 203, 213, 215, 219, 220, 227, 230, 234, 236, 245, 247, 258, 259, 260, 263, 264, 301, 303, 307, 311, 312, 313, 314, 315, 322, 323, 324, 326, 327, 331, 332, 333, 334, 335], "heidelberg": [9, 322, 326], "digit": [9, 14, 15, 334], "shd": 9, "audio": 9, "http": [9, 90, 91, 92, 103, 104, 105, 127, 128, 134, 148, 198, 235, 237, 246, 248, 258, 260, 322, 328, 329, 330, 331, 333, 335], "compneuro": 9, "net": [9, 334], "post": [9, 147], "2019": 9, "licens": 9, "under": [9, 322, 326], "cc": 9, "A": [9, 43, 49, 53, 81, 86, 94, 116, 124, 127, 128, 129, 131, 136, 137, 138, 140, 141, 142, 193, 194, 203, 213, 215, 219, 220, 226, 227, 230, 234, 236, 239, 245, 247, 257, 258, 260, 264, 299, 301, 302, 303, 305, 306, 307, 310, 311, 312, 313, 314, 315, 322, 323, 324, 327, 329, 330, 331, 333], "4": [9, 43, 61, 63, 68, 70, 74, 89, 90, 91, 92, 193, 194, 200, 216, 228, 230, 231, 234, 235, 236, 237, 247, 264, 302, 322, 332, 333], "0": [9, 19, 21, 23, 26, 41, 42, 43, 53, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 86, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 122, 125, 126, 127, 128, 129, 133, 137, 140, 141, 142, 143, 147, 148, 149, 181, 196, 198, 200, 201, 202, 203, 204, 205, 206, 209, 211, 213, 214, 215, 216, 220, 221, 222, 223, 227, 228, 229, 230, 231, 234, 235, 236, 237, 240, 242, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 263, 264, 302, 304, 306, 322, 327, 328, 329, 331, 332, 333, 335], "cramer": [9, 330], "b": [9, 22, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 124, 125, 126, 259, 261, 327], "stradmann": [9, 330], "y": [9, 47, 48, 118, 119, 120, 302, 306, 335], "schemmel": [9, 330], "j": [9, 142, 205, 330], "zenk": 9, "f": [9, 86, 331], "systemat": 9, "evalu": [9, 116], "arxiv": [9, 258, 260, 330], "1910": 9, "07407": 9, "cs": 9, "q": [9, 330], "bio": [9, 322], "org": [9, 90, 91, 92, 148, 198, 235, 237, 258, 260, 322, 328, 329, 330, 333], "ab": [9, 258, 260, 330], "These": [10, 130, 262, 323, 324, 334], "serv": [10, 322, 331, 334, 335], "1": [10, 19, 21, 23, 24, 26, 43, 49, 53, 56, 57, 59, 61, 62, 63, 65, 66, 67, 68, 75, 81, 85, 86, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 122, 124, 125, 126, 127, 128, 129, 133, 134, 140, 141, 142, 143, 147, 192, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 209, 211, 219, 220, 221, 222, 227, 228, 229, 230, 231, 234, 235, 236, 237, 240, 242, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 263, 264, 302, 303, 304, 306, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 335], "illustr": [10, 331, 334, 335], "what": [10, 136, 142, 205, 334], "type": [10, 96, 129, 136, 193, 203, 242, 264, 322, 327, 329, 334], "can": [10, 81, 85, 86, 94, 116, 129, 133, 134, 135, 143, 193, 198, 203, 206, 239, 265, 311, 312, 313, 314, 315, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "done": [10, 327, 329, 332, 333, 334, 335], "2": [10, 43, 49, 64, 65, 66, 70, 76, 77, 79, 80, 89, 90, 91, 92, 131, 132, 133, 134, 193, 194, 200, 213, 215, 216, 220, 227, 228, 230, 231, 234, 235, 236, 237, 245, 247, 258, 260, 263, 264, 327, 330, 331, 332, 333, 334, 335], "how": [10, 81, 133, 219, 263, 322, 323, 324, 327, 328, 331, 332, 333, 334, 335], "us": [10, 15, 19, 24, 41, 45, 48, 56, 57, 59, 86, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 108, 110, 115, 125, 126, 127, 128, 130, 140, 141, 143, 196, 198, 201, 202, 204, 206, 207, 209, 211, 213, 215, 216, 220, 221, 222, 227, 228, 229, 230, 231, 234, 235, 236, 237, 240, 242, 245, 246, 247, 248, 250, 254, 255, 258, 259, 260, 261, 262, 263, 264, 302, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335], "specif": [10, 90, 91, 92, 97, 99, 103, 104, 105, 108, 126, 130, 133, 196, 214, 216, 220, 221, 222, 228, 231, 235, 237, 240, 246, 248, 254, 255, 259, 261, 262, 263, 301, 302, 303, 306, 307, 323, 324, 327, 332, 334, 335], "pleas": [10, 322, 327, 329, 330, 331, 333, 334], "note": [10, 27, 46, 129, 322, 327, 329, 331, 333, 334, 335], "some": [10, 46, 81, 85, 135, 136, 137, 138, 193, 219, 225, 302, 323, 324, 327, 329, 331, 332, 334, 335], "requir": [10, 129, 138, 264, 322, 331, 334, 335], "addit": [10, 133, 194, 198, 222, 329, 331, 334], "depend": [10, 135, 295, 322, 325, 330, 334, 335], "like": [10, 46, 136, 194, 329, 334, 335], "openai": [10, 334], "gym": [10, 334], "cartpol": [10, 322], "which": [10, 116, 127, 128, 129, 132, 133, 134, 135, 136, 140, 141, 193, 198, 201, 202, 203, 204, 213, 215, 227, 230, 234, 236, 245, 247, 258, 259, 260, 263, 264, 304, 306, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335], "includ": [10, 116, 133, 135, 193, 322, 324, 326, 334], "vanilla": [10, 334], "refer": [10, 86, 148, 311, 312, 313, 314, 315, 322, 327, 329, 330, 335], "page": [10, 322, 329, 330, 332, 333, 334, 335], "thorough": 10, "explan": 10, "execut": [10, 332, 333, 335], "run": [10, 331, 335], "experi": [10, 331, 332, 335], "In": [14, 15, 81, 85, 86, 124, 135, 192, 219, 225, 323, 324, 327, 329, 330, 331, 332, 335], "thi": [14, 15, 16, 81, 85, 86, 94, 124, 125, 135, 142, 192, 198, 205, 219, 225, 239, 265, 311, 312, 313, 314, 315, 322, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335], "we": [14, 15, 27, 81, 133, 198, 219, 263, 302, 305, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "train": [14, 15, 127, 140, 143, 201, 204, 206, 294, 322, 329, 332, 333, 334], "convolut": [14, 15, 91, 104, 108, 198, 235, 263, 332, 335], "recognit": [14, 15], "mnist": [15, 322, 328, 335], "version": [15, 94, 116, 220, 221, 222, 239, 322, 323, 324, 328, 329, 331], "pytorch": [15, 16, 45, 91, 104, 108, 194, 198, 235, 311, 312, 313, 314, 315, 322, 323, 325, 327, 328, 329, 331, 332, 333, 335], "lightn": [15, 322, 329], "reduc": [15, 333], "amount": [15, 81, 219, 323, 324], "boilerpl": [15, 327, 331], "code": [15, 28, 129, 142, 203, 205, 301, 302, 303, 304, 305, 306, 307, 322, 327, 331, 332, 333, 335], "around": [15, 322, 327], "log": [15, 311, 312, 313, 314, 315, 331, 334], "checkpoint": [15, 331, 334], "etc": 15, "packag": [16, 295, 325, 327, 329, 331], "contain": [16, 43, 49, 127, 128, 129, 135, 137, 138, 140, 141, 213, 215, 220, 227, 230, 234, 236, 245, 247, 265, 305, 322, 324, 327, 329, 331, 332, 335], "extend": [16, 322], "stateless": [17, 45, 46, 324], "compon": [17, 135, 322, 324, 327], "v": [18, 22, 40, 55, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 88, 90, 91, 92, 95, 97, 99, 101, 103, 104, 105, 108, 124, 125, 126, 138, 196, 209, 210, 214, 216, 218, 219, 220, 221, 222, 224, 228, 231, 232, 235, 237, 240, 241, 246, 248, 250, 254, 255, 259, 261, 303, 323, 324, 329, 330, 332, 335], "tensor": [18, 19, 20, 21, 22, 23, 24, 25, 27, 38, 40, 41, 42, 43, 45, 49, 50, 51, 52, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 88, 89, 90, 91, 92, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 116, 123, 125, 126, 127, 128, 129, 131, 133, 136, 137, 138, 140, 141, 142, 143, 147, 148, 149, 181, 192, 196, 198, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 215, 216, 218, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 264, 301, 302, 303, 306, 307, 311, 312, 313, 314, 315, 327, 328, 331, 332, 333, 335], "i": [18, 22, 81, 83, 85, 86, 88, 90, 91, 92, 97, 99, 101, 103, 104, 105, 108, 124, 125, 126, 133, 214, 216, 219, 220, 221, 222, 224, 228, 231, 232, 235, 237, 240, 246, 248, 250, 254, 255, 259, 261, 263, 305, 311, 312, 313, 314, 315, 323, 324, 327, 330, 332, 335], "sourc": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 38, 40, 41, 42, 43, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 69, 82, 83, 84, 88, 89, 90, 91, 92, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 147, 148, 149, 181, 192, 193, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 263, 264, 301, 302, 303, 304, 305, 306, 307, 311, 312, 313, 314, 315, 322], "state": [18, 20, 21, 22, 24, 25, 27, 40, 42, 43, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 88, 90, 91, 92, 95, 97, 99, 101, 103, 104, 105, 106, 107, 108, 110, 112, 115, 116, 121, 125, 126, 135, 136, 137, 138, 147, 148, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 227, 228, 230, 231, 232, 234, 235, 236, 237, 240, 241, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 263, 264, 272, 303, 305, 311, 312, 313, 314, 315, 323, 324, 327, 332], "feed": [18, 20, 40, 55, 88, 95, 101, 110, 115, 210, 235, 241], "forward": [18, 20, 40, 55, 88, 95, 101, 106, 107, 110, 114, 115, 125, 135, 136, 193, 194, 203, 210, 235, 241, 258, 260, 324, 327, 328, 331], "lif": [18, 19, 20, 21, 40, 41, 42, 43, 57, 90, 91, 92, 94, 95, 96, 97, 99, 104, 108, 110, 112, 114, 115, 124, 125, 126, 143, 192, 193, 196, 206, 235, 237, 239, 240, 241, 242, 246, 248, 250, 252, 254, 255, 259, 303, 305, 307, 311, 312, 313, 314, 315, 327, 328, 332, 333, 335], "neuron": [18, 19, 20, 21, 23, 28, 40, 41, 42, 43, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 114, 115, 116, 124, 125, 126, 129, 136, 142, 143, 194, 196, 200, 203, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 245, 246, 247, 248, 250, 254, 255, 258, 259, 260, 261, 264, 299, 301, 304, 311, 312, 313, 314, 328, 334], "paramet": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 40, 41, 42, 43, 49, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 115, 116, 125, 126, 127, 128, 129, 133, 135, 136, 137, 138, 140, 141, 142, 143, 147, 148, 192, 193, 196, 198, 200, 201, 202, 203, 204, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 245, 246, 247, 248, 250, 254, 255, 258, 259, 260, 261, 263, 264, 265, 299, 323, 324, 327, 328, 330, 332, 335], "membran": [18, 19, 22, 23, 40, 41, 43, 55, 59, 81, 82, 83, 85, 86, 88, 89, 90, 92, 95, 96, 101, 102, 125, 135, 138, 200, 210, 218, 219, 223, 224, 225, 229, 232, 241, 242, 265, 323, 324, 332, 335], "potenti": [18, 19, 22, 23, 40, 41, 55, 56, 59, 82, 88, 89, 95, 96, 101, 102, 138, 210, 211, 218, 223, 229, 232, 241, 242, 332, 333], "synapt": [18, 19, 22, 23, 26, 41, 42, 82, 88, 89, 101, 102, 125, 147, 223, 229, 232, 331, 332], "input": [18, 22, 27, 40, 41, 42, 43, 46, 57, 81, 83, 85, 88, 90, 91, 92, 97, 99, 101, 103, 104, 105, 106, 107, 108, 110, 114, 115, 116, 124, 125, 126, 127, 128, 129, 138, 140, 141, 142, 143, 148, 196, 198, 200, 201, 202, 203, 204, 205, 206, 214, 216, 219, 220, 222, 224, 225, 230, 231, 232, 235, 236, 237, 240, 246, 247, 248, 250, 254, 255, 259, 260, 261, 263, 264, 304, 323, 324, 327, 331, 333, 335], "current": [18, 22, 27, 42, 43, 57, 81, 83, 85, 86, 88, 90, 91, 92, 94, 97, 99, 101, 103, 104, 105, 106, 107, 108, 110, 114, 115, 125, 126, 143, 200, 219, 224, 225, 232, 235, 237, 239, 240, 304, 323, 324, 329, 332, 335], "__init__": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 40, 41, 55, 56, 59, 60, 82, 83, 88, 89, 95, 96, 101, 102, 192, 193, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 263, 264, 327, 328, 331], "method": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 40, 41, 42, 43, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 86, 88, 89, 90, 91, 92, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 143, 192, 193, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 263, 264, 322, 327, 328, 329, 331, 332, 335], "attribut": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 40, 41, 55, 56, 59, 60, 82, 83, 88, 89, 95, 96, 101, 102, 192, 193, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 263, 264], "tau_syn_inv": [19, 21, 23, 43, 82, 84, 89, 90, 91, 92, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 143, 200, 206, 220, 221, 222, 223, 227, 228, 229, 230, 231, 234, 235, 236, 237, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 331, 332], "200": [19, 21, 23, 43, 71, 73, 74, 82, 84, 89, 90, 91, 92, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 143, 200, 206, 220, 221, 222, 223, 227, 228, 229, 230, 231, 234, 235, 236, 237, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 307, 331, 332], "tau_mem_inv": [19, 21, 23, 43, 82, 84, 89, 90, 91, 92, 96, 97, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 143, 200, 206, 220, 221, 222, 223, 227, 228, 229, 230, 231, 234, 235, 236, 237, 240, 242, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 331, 332], "100": [19, 21, 23, 41, 42, 43, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 89, 90, 91, 92, 96, 97, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 127, 140, 143, 149, 196, 200, 201, 204, 206, 209, 211, 220, 221, 222, 223, 227, 228, 229, 230, 231, 234, 235, 236, 237, 240, 242, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 306, 327, 328, 331, 332], "v_leak": [19, 21, 23, 43, 82, 84, 89, 90, 91, 92, 96, 97, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 143, 200, 206, 220, 221, 222, 223, 227, 228, 229, 230, 231, 234, 235, 236, 237, 240, 242, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 331, 332], "v_th": [19, 21, 23, 43, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 89, 90, 91, 92, 96, 97, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 143, 200, 206, 209, 211, 227, 228, 229, 230, 231, 234, 235, 236, 237, 240, 242, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 331, 332], "v_reset": [19, 21, 23, 41, 42, 43, 56, 57, 89, 90, 91, 92, 96, 97, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 143, 196, 200, 206, 209, 211, 227, 228, 229, 230, 231, 234, 235, 236, 237, 240, 242, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 331], "str": [19, 23, 41, 56, 59, 89, 96, 102, 198, 211, 229, 242, 305, 311, 312, 313, 314, 315, 327], "super": [19, 21, 23, 41, 42, 43, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 89, 90, 91, 92, 96, 97, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 143, 196, 200, 206, 209, 211, 227, 228, 229, 230, 231, 234, 235, 236, 237, 240, 242, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 328, 331], "alpha": [19, 21, 23, 41, 42, 43, 48, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 89, 90, 91, 92, 96, 97, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 125, 126, 143, 149, 181, 196, 200, 206, 209, 211, 227, 228, 229, 230, 231, 234, 235, 236, 237, 240, 242, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 327, 331, 332], "float": [19, 23, 26, 38, 41, 42, 43, 49, 50, 51, 52, 56, 57, 59, 69, 84, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 123, 125, 126, 127, 128, 131, 132, 133, 134, 140, 141, 143, 147, 148, 149, 181, 196, 200, 201, 202, 204, 206, 209, 211, 213, 215, 216, 220, 221, 222, 227, 228, 229, 230, 231, 234, 235, 236, 237, 240, 242, 245, 246, 247, 248, 250, 254, 255, 258, 259, 260, 261, 263, 264, 304], "parametr": [19, 56, 59, 89, 96, 102, 211, 229, 242], "invers": [19, 23, 41, 59, 81, 82, 89, 96, 102, 219, 223, 229, 242, 323, 324, 331, 332], "time": [19, 23, 24, 26, 41, 42, 43, 45, 48, 57, 59, 81, 82, 85, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 106, 107, 108, 110, 115, 116, 124, 126, 127, 128, 134, 135, 138, 140, 141, 142, 143, 147, 192, 196, 198, 200, 201, 202, 204, 205, 206, 207, 213, 214, 215, 216, 219, 220, 223, 225, 227, 228, 229, 230, 231, 234, 235, 236, 237, 240, 242, 245, 246, 247, 248, 258, 259, 260, 264, 265, 300, 301, 302, 304, 305, 306, 323, 332, 333, 334], "constant": [19, 23, 24, 26, 41, 43, 59, 81, 82, 89, 96, 102, 124, 142, 200, 205, 219, 223, 229, 242, 264, 323, 324, 332, 335], "tau_": [19, 23, 48, 81, 85, 86, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 108, 124, 126, 196, 219, 220, 221, 222, 228, 229, 231, 235, 237, 240, 242, 246, 248, 250, 254, 255, 259, 261, 323, 324, 331, 332], "text": [19, 23, 57, 81, 85, 86, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 108, 124, 126, 196, 209, 214, 216, 219, 220, 221, 222, 228, 229, 231, 235, 237, 240, 242, 246, 248, 250, 254, 255, 259, 261, 323, 324, 331, 332], "syn": [19, 23, 81, 86, 89, 90, 91, 92, 99, 102, 103, 104, 105, 108, 124, 126, 196, 219, 220, 221, 222, 228, 229, 231, 235, 237, 246, 248, 250, 254, 255, 259, 261, 323, 324, 332], "ms": [19, 26, 59, 89, 96, 102, 229, 242, 304, 331, 332], "mem": [19, 23, 81, 85, 86, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 108, 124, 126, 196, 219, 220, 221, 222, 228, 229, 231, 235, 237, 240, 242, 246, 248, 250, 254, 255, 259, 261, 323, 324, 332], "leak": [19, 23, 41, 81, 82, 85, 86, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 108, 124, 126, 196, 219, 220, 221, 222, 223, 225, 228, 229, 231, 235, 237, 240, 242, 246, 248, 250, 254, 255, 259, 261, 323, 324], "mv": [19, 56, 59, 89, 96, 102, 211, 214, 216, 229, 242], "threshold": [19, 22, 23, 41, 56, 59, 86, 89, 94, 96, 102, 126, 211, 226, 229, 239, 242, 259, 323, 327, 331, 332, 335], "reset": [19, 23, 41, 56, 57, 59, 89, 90, 91, 92, 96, 97, 102, 104, 108, 126, 196, 209, 211, 228, 229, 231, 237, 240, 242, 246, 248, 250, 254, 255, 259, 261, 332, 335], "determin": [19, 41, 56, 59, 89, 96, 102, 122, 124, 211, 229, 242, 331, 334, 335], "relev": [19, 41, 56, 59, 89, 96, 102, 211, 229, 242, 330], "surrog": [19, 41, 56, 59, 89, 96, 102, 211, 229, 242, 327, 331, 335], "gradient": [19, 41, 56, 59, 86, 89, 96, 102, 211, 229, 242, 294, 322, 327, 331, 335], "hyper": [19, 41, 56, 59, 89, 96, 102, 211, 229, 242], "comput": [19, 41, 56, 57, 59, 89, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 108, 110, 115, 118, 119, 120, 121, 196, 209, 211, 214, 216, 228, 229, 231, 235, 237, 240, 242, 246, 248, 250, 254, 255, 261, 304, 326, 330, 332], "liffeedforwardst": [20, 106, 107, 108, 110], "rho": [20, 21, 254, 255], "absolut": [20, 21, 254, 255], "refractori": [20, 21, 114, 115, 143, 206, 254, 255], "period": [20, 21, 114, 115, 143, 206, 254, 255], "integr": [20, 21, 22, 42, 55, 56, 57, 81, 82, 83, 85, 89, 90, 91, 92, 94, 97, 99, 102, 103, 104, 105, 106, 107, 108, 110, 114, 115, 125, 126, 127, 128, 140, 141, 143, 147, 148, 196, 201, 202, 204, 206, 209, 210, 211, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 234, 235, 236, 237, 239, 240, 245, 246, 247, 248, 250, 254, 255, 258, 259, 260, 261, 326, 327, 332, 333, 335], "count": [20, 21, 135, 136, 193, 324, 331], "toward": [20, 21], "zero": [20, 21, 138, 213, 215, 216, 220, 227, 228, 230, 231, 234, 236, 245, 247, 258, 260, 332], "lifparamet": [21, 43, 99, 106, 107, 108, 110, 112, 114, 115, 143, 196, 200, 206, 227, 228, 230, 231, 250, 252, 254, 255, 331, 332], "rho_reset": [21, 112, 114, 115, 252, 254, 255], "5": [21, 41, 42, 59, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 112, 114, 115, 129, 132, 133, 192, 193, 196, 203, 213, 215, 216, 227, 228, 230, 231, 234, 236, 245, 247, 252, 254, 255, 258, 260, 263, 331, 332], "kept": 22, "lsnn": [22, 23, 125, 126, 335], "adapt": [22, 23, 88, 89, 90, 91, 92, 103, 104, 105, 124, 125, 126, 235, 237, 246, 248, 258, 259, 260, 335], "tau_adapt_inv": [23, 125, 126, 258, 259, 260, 261], "0012": [23, 125, 126, 258, 259, 260, 261], "beta": [23, 125, 126, 258, 259, 260, 261], "8000": [23, 43, 66, 67, 125, 126, 200, 258, 259, 260, 261], "an": [23, 24, 25, 43, 48, 56, 57, 89, 90, 91, 92, 97, 102, 104, 108, 116, 124, 127, 129, 135, 136, 137, 140, 143, 193, 198, 206, 209, 211, 216, 222, 235, 240, 264, 302, 303, 304, 305, 307, 315, 322, 324, 327, 329, 330, 331, 332, 334, 335], "tau_b": [23, 124], "eta_p": [24, 147], "eta_m": [24, 147], "tau_ac_inv": [24, 147], "10": [24, 41, 42, 134, 147, 196, 213, 214, 215, 220, 227, 230, 234, 236, 237, 245, 246, 247, 248, 255, 260, 303, 305, 306, 307, 322, 327, 328, 330, 331, 332, 334, 335], "tau_c_inv": [24, 147], "stdp": [24, 25, 147, 335], "sensor": [24, 25, 147], "event": [24, 25, 45, 86, 94, 130, 147, 226, 239, 262, 299, 322, 323, 324, 326, 330, 332], "driven": [24, 25, 147, 322, 326], "plastic": [24, 335], "rule": [24, 147, 207, 330], "correl": 24, "anti": 24, "a_pr": 25, "a_post": 25, "presynapt": 25, "postsynapt": 25, "tau_f_inv": 26, "20": [26, 41, 42, 192, 196, 235, 237, 246, 248, 254, 255, 304, 328, 331, 332], "tau_s_inv": 26, "50": [26, 79, 330], "tau_d_inv": 26, "3333333333333333": 26, "u": [26, 27, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 214, 216, 218, 331], "45": [26, 66, 331], "tsodyk": [26, 27, 148, 335], "makram": [26, 27, 148], "model": [26, 27, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 86, 90, 91, 92, 94, 97, 104, 108, 110, 115, 127, 128, 140, 141, 143, 148, 194, 196, 201, 202, 204, 206, 214, 216, 217, 226, 228, 231, 235, 237, 239, 240, 246, 248, 250, 254, 255, 261, 304, 322, 329, 330, 334], "facilit": [26, 331], "depress": 26, "size": [26, 43, 116, 127, 129, 132, 133, 140, 193, 196, 198, 216, 222, 231, 237, 246, 248, 250, 255, 260, 261, 263, 264, 304, 334], "jump": [26, 57, 90, 91, 92, 94, 97, 104, 108, 124, 126, 196, 209, 225, 228, 231, 235, 237, 239, 240, 246, 248, 250, 254, 255, 259, 261, 323, 324, 327], "util": [26, 27, 331], "variabl": [26, 59, 125, 218, 305, 333, 335], "x": [27, 38, 47, 48, 49, 50, 51, 52, 118, 119, 120, 123, 131, 132, 149, 181, 302, 306, 328, 331, 335], "ar": [27, 45, 81, 118, 119, 120, 121, 122, 127, 128, 130, 133, 140, 142, 196, 201, 202, 204, 205, 219, 231, 237, 246, 248, 250, 255, 261, 262, 263, 264, 294, 306, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "track": [27, 130, 213, 215, 227, 230, 234, 236, 245, 247, 262, 322, 323, 324, 327, 330, 335], "separ": 27, "fraction": 27, "remain": [27, 331], "avail": [27, 81, 85, 86, 322, 324, 327, 329], "resourc": [27, 322, 326, 332], "base": [28, 40, 41, 42, 49, 106, 107, 114, 125, 130, 134, 136, 196, 262, 264, 267, 299, 305, 322, 325, 326, 329, 330, 335], "activ": [28, 86, 116, 129, 203, 227, 228, 230, 231, 264, 302, 306, 311, 312, 313, 314, 315, 322, 330, 332, 333, 335], "optim": [28, 327, 331, 335], "k": [38, 49, 50, 51, 52, 59, 123, 129, 203], "g_e": [40, 196], "g_i": [40, 196], "conduct": [40, 41, 42, 59, 110, 196, 250], "excitatori": [40, 41], "inhibitori": [40, 41], "tau_syn_exc_inv": [41, 42, 196], "2000": [41, 42, 43, 196, 200], "tau_syn_inh_inv": [41, 42, 196], "c_m_inv": [41, 42, 196], "g_l": [41, 42, 196], "2500": [41, 42, 196], "e_rev_i": [41, 42, 196], "e_rev_": [41, 42, 196], "60": [41, 42, 62, 63, 65, 67, 68, 74, 75, 78, 196, 332, 334], "v_rest": [41, 42, 196], "70": [41, 42, 65, 70, 76, 77, 79, 80, 196, 331, 334], "v_thresh": [41, 42, 196], "capacit": 41, "revers": 41, "rest": 41, "input_tensor": [42, 84, 97, 108, 110, 112, 115, 126, 240, 327], "cobaliffeedforwardst": 42, "p": [42, 43, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 90, 91, 92, 97, 99, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 116, 125, 126, 143, 147, 148, 196, 200, 206, 209, 213, 215, 216, 217, 220, 221, 222, 227, 228, 230, 231, 234, 235, 236, 237, 240, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 327, 329, 331, 332], "cobalifparamet": [42, 196], "dt": [42, 43, 57, 69, 84, 90, 91, 92, 97, 99, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 125, 126, 127, 128, 140, 141, 143, 147, 148, 196, 200, 201, 202, 204, 206, 209, 213, 215, 216, 220, 221, 222, 227, 228, 230, 231, 234, 235, 236, 237, 240, 245, 246, 247, 248, 250, 254, 255, 258, 259, 260, 261, 264, 331, 332], "001": [42, 43, 57, 69, 84, 90, 91, 92, 97, 99, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 125, 126, 127, 128, 140, 141, 143, 147, 148, 196, 200, 201, 202, 204, 206, 209, 213, 215, 216, 222, 227, 228, 230, 234, 236, 240, 245, 247, 258, 259, 260, 264, 331, 332], "tupl": [42, 57, 69, 84, 90, 91, 92, 97, 99, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 116, 126, 133, 136, 148, 198, 213, 215, 216, 220, 227, 228, 230, 231, 234, 236, 245, 247, 263, 264, 305, 311, 312, 313, 314, 315, 327], "euler": [42, 90, 91, 92, 97, 99, 103, 104, 105, 106, 107, 108, 110, 114, 115, 125, 126, 148, 196, 216, 228, 231, 235, 237, 240, 246, 248, 250, 254, 255, 259, 261], "step": [42, 43, 53, 57, 86, 90, 91, 92, 97, 99, 103, 104, 105, 106, 107, 108, 110, 114, 115, 125, 126, 127, 128, 129, 135, 136, 140, 141, 143, 147, 148, 193, 196, 198, 200, 201, 202, 204, 206, 209, 213, 214, 215, 216, 227, 228, 230, 231, 234, 235, 236, 237, 240, 245, 246, 247, 248, 250, 254, 255, 258, 259, 260, 261, 304, 324, 327, 329, 331, 332], "input_curr": [43, 69, 90, 92, 99, 103, 105, 143], "seq_length": [43, 127, 129, 140, 143, 192, 200, 201, 204, 206, 328, 331], "int": [43, 127, 129, 132, 133, 134, 137, 138, 140, 143, 196, 198, 200, 201, 203, 204, 206, 215, 216, 222, 230, 231, 236, 237, 246, 247, 248, 250, 252, 255, 260, 261, 263, 264, 304], "encod": [43, 127, 128, 129, 140, 142, 143, 154, 272, 331], "fix": [43, 200, 331], "voltag": [43, 81, 83, 85, 86, 90, 92, 99, 103, 105, 125, 138, 200, 219, 220, 224, 225, 323, 324, 328, 331, 335], "simul": [43, 200, 264, 304, 322, 333, 334, 335], "occur": [43, 81, 86, 122, 143, 200, 206, 219, 323, 324], "dure": [43, 200, 329], "number": [43, 53, 127, 129, 133, 134, 140, 141, 143, 193, 198, 200, 201, 203, 204, 206, 216, 222, 230, 231, 236, 237, 247, 250, 255, 260, 261, 263, 264, 322, 327, 331, 332, 334], "timestep": [43, 57, 81, 85, 90, 91, 92, 97, 99, 103, 104, 105, 108, 110, 115, 125, 126, 148, 194, 200, 209, 213, 215, 219, 220, 221, 222, 225, 227, 230, 234, 236, 240, 245, 247, 250, 254, 255, 261, 264, 304, 323, 324, 332, 333, 335], "iter": [43, 200, 220, 264], "exampl": [43, 127, 128, 129, 133, 142, 192, 193, 194, 196, 200, 203, 205, 213, 214, 215, 216, 220, 227, 228, 230, 231, 234, 235, 236, 237, 245, 246, 247, 248, 254, 255, 301, 302, 303, 304, 305, 306, 307, 311, 312, 313, 314, 315, 328, 334], "as_tensor": [43, 129, 142, 200, 203, 205, 327, 332], "8": [43, 67, 76, 132, 194, 200, 329, 332], "16": [43, 61, 64, 71, 72, 73, 74, 75, 78, 192, 194, 196, 200, 214, 216, 235, 237, 246, 248, 254, 255, 327], "two": [43, 81, 129, 133, 198, 200, 203, 219, 301, 307, 322, 323, 324, 329, 332, 333, 335], "term": [43, 85, 94, 97, 124, 133, 135, 136, 193, 200, 225, 239, 240, 257, 258, 260, 263, 335], "4000": [43, 200], "0000": [43, 129, 200, 203, 331], "3800": [43, 200], "7600": [43, 200], "each": [43, 81, 129, 133, 135, 142, 193, 200, 203, 219, 263, 323, 324, 327, 332, 334, 335], "repres": [43, 127, 128, 129, 140, 201, 202, 203, 204, 330], "initi": [43, 132, 192, 193, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 213, 214, 215, 216, 220, 221, 222, 227, 228, 230, 231, 234, 235, 236, 237, 240, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 263, 264, 331], "delta": [43, 48, 200], "between": [43, 49, 81, 110, 129, 134, 198, 200, 203, 219, 250, 264, 323, 324, 332, 335], "return": [43, 46, 116, 127, 128, 129, 136, 137, 138, 140, 141, 142, 203, 213, 215, 216, 220, 227, 228, 230, 231, 234, 236, 245, 247, 301, 302, 303, 305, 306, 307, 311, 312, 313, 314, 315, 327, 328, 331, 332, 333], "extra": [43, 127, 129, 140], "dimens": [43, 45, 116, 127, 129, 133, 140, 192, 198, 201, 204, 220, 264, 301, 302, 306, 307, 332, 333, 335], "where": [45, 48, 91, 104, 108, 116, 135, 142, 192, 196, 231, 235, 237, 246, 248, 250, 255, 261, 264, 265, 322, 324, 327, 328, 332, 334], "convert": [45, 46, 49, 129, 335], "numer": [45, 46, 129, 136, 326], "represent": 45, "mani": [45, 334, 335], "simpli": [45, 135, 324, 328, 333, 335], "mirror": 45, "aggreg": [45, 136, 137, 138, 193, 263], "differ": [45, 46, 81, 85, 129, 203, 219, 322, 323, 324, 332, 333, 335], "thei": [45, 322, 327, 331, 332, 333, 335], "typic": [45, 129, 136, 203, 301, 322, 332, 335], "first": [45, 81, 116, 142, 143, 198, 205, 206, 219, 264, 301, 323, 324, 327, 329, 331, 335], "therefor": [45, 133, 263, 326, 327, 331, 333, 335], "inject": [45, 332, 333], "lift": [45, 194, 335], "ed": 45, "situat": [45, 331], "you": [45, 306, 322, 327, 328, 329, 331, 332, 333, 334, 335], "need": [45, 133, 143, 263, 327, 329, 333, 334, 335], "pickl": 45, "offer": [46, 329], "wai": [46, 331, 332], "domain": [46, 116, 132, 322, 326, 335], "population_encod": 46, "doe": [46, 331], "rather": [46, 327, 331], "valu": [46, 49, 59, 89, 127, 128, 129, 134, 136, 140, 141, 143, 198, 201, 202, 203, 204, 206, 264, 301, 302, 303, 306, 307, 327, 331, 332, 333, 335], "have": [46, 81, 85, 143, 206, 219, 306, 311, 312, 313, 314, 315, 322, 323, 324, 327, 329, 331, 332, 333, 334, 335], "via": [46, 327, 329, 335], "instanc": [46, 193, 294, 334], "poisson": [46, 127, 128, 141], "simpl": [47, 323, 326, 328, 331, 332, 333, 335], "euclidean": [47, 129, 203], "distanc": [47, 49, 129, 203], "metric": 47, "exponenti": [48, 89, 90, 91, 92, 102, 104, 106, 107, 114, 125, 207, 235, 237, 246, 248, 264, 332], "smooth": [48, 207], "seri": [48, 207, 335], "window": [48, 207, 304], "s": [48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 106, 107, 110, 114, 115, 125, 126, 131, 135, 136, 137, 138, 142, 147, 148, 193, 194, 205, 217, 265, 322, 324, 326, 327, 331, 332, 333, 335], "t": [48, 193, 198, 302, 306, 331, 332, 335], "factor": [48, 88, 129, 203], "math": 48, "e": [48, 133, 263, 311, 312, 313, 314, 315, 322, 326, 333, 334], "filter_inv": 48, "sigma": 49, "gaussian": [49, 129, 131, 203], "radial": [49, 129, 203], "basi": [49, 129, 203], "kernel": [49, 129, 131, 132, 133, 198, 203, 263], "calcul": [49, 129, 203], "given": [49, 116, 124, 192, 305, 306, 331, 332], "mathbf": 49, "below": [49, 133, 329, 330, 332, 333, 334, 335], "exp": [49, 90, 91, 92, 103, 104, 105, 235, 237, 246, 248], "left": [49, 90, 91, 92, 103, 104, 105, 235, 237, 246, 248, 327], "frac": 49, "right": [49, 90, 91, 92, 103, 104, 105, 235, 237, 246, 248, 327, 331], "spread": 49, "distribut": [49, 133, 141, 263, 264, 306, 331], "default": [49, 86, 89, 129, 132, 133, 134, 135, 136, 137, 138, 193, 198, 203, 213, 215, 216, 227, 228, 230, 231, 234, 236, 237, 245, 246, 247, 248, 250, 255, 258, 259, 260, 264, 301, 303, 304, 306, 307, 324, 331, 332], "truncat": 53, "everyth": [53, 333], "els": [53, 331], "h": [53, 86, 198], "n": [53, 86, 116, 133, 192, 198, 264, 329, 335], "begin": [53, 81, 85, 86, 90, 91, 92, 99, 103, 104, 105, 108, 124, 126, 196, 214, 216, 219, 220, 221, 222, 228, 231, 235, 237, 246, 248, 250, 254, 255, 259, 261, 323, 324], "case": [53, 81, 86, 133, 198, 219, 322, 323, 324, 327, 331], "gt": [53, 86], "end": [53, 81, 85, 86, 90, 91, 92, 99, 103, 104, 105, 108, 124, 126, 196, 214, 216, 219, 220, 221, 222, 228, 231, 235, 237, 246, 248, 250, 254, 255, 259, 261, 323, 324], "fire": [55, 56, 57, 86, 89, 90, 91, 92, 94, 97, 99, 102, 103, 104, 105, 106, 107, 108, 114, 124, 209, 210, 211, 228, 231, 239, 240, 327, 332, 333, 335], "input_spik": [57, 91, 104, 108, 142], "iaffeedforwardst": 57, "iafparamet": [57, 209], "feedforward": [57, 209], "singl": [57, 90, 91, 92, 97, 99, 103, 104, 105, 106, 107, 108, 110, 114, 115, 125, 194, 196, 198, 209, 214, 216, 228, 231, 235, 237, 240, 246, 248, 250, 254, 255, 261, 303, 307, 311, 312, 313, 314, 315, 331, 333], "dot": [57, 81, 85, 86, 90, 91, 92, 97, 99, 103, 104, 105, 108, 124, 126, 196, 209, 214, 216, 219, 220, 221, 222, 228, 231, 235, 237, 240, 246, 248, 250, 254, 255, 259, 261, 323, 324, 327], "togeth": [57, 90, 91, 92, 97, 104, 108, 126, 196, 209, 228, 231, 235, 237, 240, 246, 248, 250, 254, 255, 259, 261], "condit": [57, 90, 91, 92, 97, 104, 108, 124, 126, 196, 209, 228, 231, 235, 237, 240, 246, 248, 250, 254, 255, 259, 261], "z": [57, 86, 90, 91, 92, 97, 104, 108, 122, 124, 126, 129, 136, 137, 138, 148, 193, 196, 203, 209, 228, 231, 232, 235, 237, 240, 246, 248, 250, 254, 255, 259, 261, 327, 331, 332], "theta": [57, 86, 90, 91, 92, 97, 104, 108, 124, 126, 196, 209, 228, 231, 235, 237, 240, 246, 248, 250, 254, 255, 259, 261], "v_": [57, 81, 85, 86, 90, 91, 92, 97, 99, 103, 104, 105, 108, 124, 126, 196, 209, 219, 220, 221, 222, 228, 231, 235, 237, 240, 246, 248, 250, 254, 255, 259, 261, 323, 324, 331, 332], "th": [57, 86, 90, 91, 92, 97, 103, 104, 105, 108, 124, 126, 196, 209, 228, 231, 235, 237, 240, 246, 248, 250, 254, 255, 259, 261, 331, 332], "transit": [57, 90, 91, 92, 97, 104, 108, 122, 126, 196, 209, 220, 221, 222, 228, 231, 235, 237, 240, 246, 248, 250, 254, 255, 259, 261], "equat": [57, 81, 90, 91, 92, 97, 104, 108, 124, 126, 196, 209, 219, 220, 221, 222, 228, 231, 235, 237, 240, 246, 248, 250, 254, 255, 259, 261, 323, 324, 335], "leaki": [57, 81, 82, 83, 85, 89, 90, 91, 92, 94, 97, 99, 102, 103, 104, 105, 106, 107, 108, 114, 209, 219, 220, 221, 222, 223, 224, 225, 228, 231, 239, 240, 327, 332, 333, 335], "unus": [57, 209], "ad": [57, 81, 133, 198, 209, 219, 263, 323, 324, 327, 331, 332], "compat": [57, 209, 322], "c": [59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 121, 131, 134, 214, 216, 264, 322, 329], "d": [59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 124, 131, 214, 216, 257, 323, 329, 330], "sq": [59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "04": [59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "mn": [59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "bia": [59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 331], "140": [59, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 214, 216], "30": [59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 192, 214, 216, 235, 254], "tau_inv": [59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "250": [59, 62, 63, 64, 66, 67, 68, 70, 72, 75, 76, 77, 78, 79, 80, 304], "av": 59, "scale": [59, 129, 130, 132, 133, 134, 203, 262, 263, 264, 323, 324, 331, 334], "recoveri": [59, 218, 335], "smaller": [59, 332], "result": [59, 91, 104, 108, 127, 140, 143, 201, 204, 206, 235, 331, 332], "slower": [59, 332], "sensit": 59, "subthreshold": 59, "fluctuat": 59, "greater": 59, "coupl": [59, 89, 250], "more": [59, 81, 85, 86, 90, 91, 92, 97, 99, 103, 104, 105, 108, 124, 126, 135, 196, 214, 216, 220, 221, 222, 225, 226, 228, 231, 235, 237, 240, 246, 248, 254, 255, 257, 259, 261, 311, 312, 313, 314, 315, 322, 323, 324, 327, 329, 330, 331, 333, 334, 335], "strongli": 59, "possibl": [59, 326, 328, 333], "oscil": 59, "low": 59, "dynam": [59, 81, 85, 86, 124, 324, 327, 330, 331], "after": [59, 213, 215, 220, 227, 230, 234, 236, 245, 247, 331], "caus": 59, "slow": [59, 81, 219, 323, 324], "high": [59, 322, 326], "na": [59, 89], "squar": [59, 132, 133, 263], "izhikevichparamet": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 213, 215, 216, 217], "izhikevichst": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 213, 215, 216, 217], "behavior": [60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 217, 304], "izhikevichspikingbehavior": [61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 213, 214, 215, 216, 304], "02": [61, 63, 67, 68, 70, 71, 72, 77, 79, 80, 306], "55": [61, 63, 68, 70, 71], "500": 61, "65": [61, 64, 72, 76, 77, 80, 331], "requires_grad": [61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 331], "true": [61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 227, 228, 230, 231, 263, 301, 302, 305, 306, 331], "26": [62, 64, 75, 78], "61": 62, "15": 62, "8600": 62, "6": [63, 68, 72, 77, 80, 194, 322], "108": [63, 68, 331], "64": [64, 71, 72, 73, 74, 192, 331], "6400": 64, "21": [65, 330], "14": [65, 70, 76, 77, 79, 80, 331], "026": 66, "63": [66, 67, 331], "25": [71, 72, 73, 74], "05": [71, 78], "03": [73, 74], "52": 73, "62": [75, 78], "1200": [75, 78], "01": 76, "describ": [81, 85, 86, 131, 219, 225, 322, 323, 324, 327, 328, 329, 334, 335], "incom": [81, 85, 219, 225, 264, 323, 324, 335], "over": [81, 85, 86, 90, 91, 92, 103, 104, 105, 133, 135, 138, 192, 219, 220, 225, 235, 237, 246, 248, 263, 264, 265, 300, 305, 323, 324, 327, 332, 333, 335], "never": [81, 85, 219, 225, 323, 324, 335], "other": [81, 85, 106, 107, 125, 134, 135, 192, 219, 225, 265, 322, 323, 324, 331, 332, 335], "word": [81, 85, 192, 219, 225, 323, 324, 332, 335], "add": [81, 85, 124, 219, 225, 323, 324, 329], "up": [81, 85, 219, 225, 263, 323, 324, 327, 331, 334], "while": [81, 85, 219, 225, 322, 323, 324, 326, 331, 335], "out": [81, 85, 94, 198, 219, 225, 239, 260, 323, 324, 329, 331], "everi": [81, 85, 219, 225, 263, 323, 324], "align": [81, 85, 86, 90, 91, 92, 99, 103, 104, 105, 108, 124, 126, 196, 214, 216, 219, 220, 221, 222, 228, 231, 235, 237, 246, 248, 250, 254, 255, 259, 261, 323, 324], "across": [81, 219, 323, 324], "chang": [81, 86, 129, 134, 203, 219, 264, 323, 324, 327], "second": [81, 198, 219, 301, 323, 324, 332], "flow": [81, 219, 323, 324], "notic": [81, 219, 323, 324, 333], "both": [81, 133, 192, 193, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 213, 214, 215, 216, 219, 220, 221, 222, 227, 228, 230, 231, 234, 235, 236, 237, 240, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 263, 264, 323, 324, 326, 331, 335], "parameter": [81, 219, 323, 324], "tau": [81, 219, 323, 324], "control": [81, 86, 219, 323, 324, 331, 334], "fast": [81, 142, 205, 219, 323, 324], "larg": [81, 219, 323, 324, 326, 331, 334], "mean": [81, 124, 219, 311, 312, 313, 314, 322, 323, 324, 327, 329, 331, 335], "small": [81, 219, 323, 324], "call": [81, 219, 323, 324, 328, 331, 332, 334, 335], "avoid": [81, 219, 323, 324], "recalcul": [81, 219, 323, 324], "mem_inv": [81, 219, 323, 324], "syn_inv": [81, 219, 323, 324], "respect": [81, 129, 196, 203, 219, 231, 237, 246, 248, 250, 255, 261, 323, 324], "so": [81, 85, 219, 322, 323, 324, 327, 331, 332, 333, 334], "rapid": [81, 219, 323, 324], "recal": [81, 219, 323, 324, 334], "charg": [81, 219, 323, 324], "point": [81, 86, 219, 302, 323, 324, 327, 332], "rate": [81, 142, 205, 219, 323, 324, 334], "being": [81, 219, 323, 324, 327], "subtract": [81, 219, 323, 324], "inform": [81, 85, 86, 136, 225, 226, 257, 299, 322, 323, 324, 329, 332], "found": [81, 85, 86, 322, 324, 327, 330, 331, 335], "wikipedia": [81, 85, 86, 135, 219, 323, 324], "book": [81, 85, 86, 324], "w": [81, 85, 86, 124, 198, 220, 221, 222, 257, 323, 324, 327], "gerstner": [81, 85, 86, 324], "et": [81, 85, 86, 130, 262, 323, 324], "al": [81, 85, 86, 130, 262, 323, 324], "freeli": [81, 85, 86, 324], "onlin": [81, 85, 86, 103, 104, 105, 246, 248, 324], "listat": [84, 220], "liparamet": [84, 220, 221, 222, 332], "from": [85, 89, 90, 91, 92, 103, 104, 105, 106, 107, 122, 125, 130, 132, 133, 134, 136, 137, 138, 193, 198, 213, 214, 215, 216, 220, 227, 230, 234, 235, 236, 237, 245, 246, 247, 248, 258, 260, 262, 263, 264, 302, 304, 307, 311, 312, 313, 314, 315, 322, 323, 324, 326, 327, 328, 330, 331, 332, 335], "_": [85, 116, 137, 192, 305, 307, 328, 331, 332], "exclud": 85, "ani": [85, 116, 136, 137, 138, 193, 301, 303, 305, 307, 311, 312, 313, 314, 315, 326, 327, 331, 334, 335], "immedi": [85, 332, 335], "stepwis": 85, "impact": 85, "henc": 85, "box": [85, 94, 96, 225, 239, 242, 327], "popular": [86, 94, 226, 239, 323, 324, 335], "combin": [86, 94, 133, 226, 239, 263, 323, 324, 332], "leaky_integr": [86, 94, 226, 239, 323, 324], "produc": [86, 94, 198, 226, 239, 323, 324, 332], "inflow": 86, "see": [86, 127, 128, 129, 130, 133, 142, 198, 205, 219, 225, 226, 257, 262, 322, 323, 324, 327, 329, 331, 332, 333, 335], "stand": 86, "increas": [86, 129, 203, 332, 335], "certain": [86, 327, 334, 335], "regular": [86, 116, 124, 193, 333], "artifici": [86, 322, 332, 335], "behaviour": [86, 264, 332], "set": [86, 129, 134, 203, 216, 230, 231, 236, 237, 247, 264, 305, 332, 333], "field": [86, 129, 130, 132, 133, 134, 203, 262, 263, 264], "superspik": [86, 327, 335], "synthet": 86, "approach": [86, 330, 331, 335], "heavisid": 86, "lifadex": [88, 90, 92], "adaptation_curr": [89, 90, 91, 92, 234, 235, 236, 237], "adaptation_spik": [89, 90, 91, 92, 234, 235, 236, 237], "0200": [89, 90, 91, 92, 234, 235, 236, 237], "delta_t": [89, 90, 91, 92, 102, 103, 104, 105, 234, 235, 236, 237, 245, 246, 247, 248], "5000": [89, 90, 91, 92, 102, 103, 104, 105, 234, 235, 236, 237, 245, 246, 247, 248, 331], "tau_ada_inv": [89, 90, 91, 92, 234, 235, 236, 237], "neuralensembl": 89, "pynn": 89, "ns": [89, 90, 92], "trigger": 89, "sharp": [89, 102], "speed": [89, 102, 326], "growth": [89, 102], "ada": [89, 90, 91, 92, 235, 237], "lifadexparamet": [90, 91, 92, 234, 235, 236, 237], "www": [90, 91, 92, 127, 128, 148, 235, 237], "scholarpedia": [90, 91, 92, 148, 235, 237], "articl": [90, 91, 92, 134, 148, 235, 237, 328, 334], "adaptive_exponential_integr": [90, 91, 92, 235, 237], "fire_model": [90, 91, 92, 235, 237], "implement": [90, 91, 92, 94, 97, 99, 103, 104, 105, 106, 107, 108, 114, 125, 126, 196, 198, 214, 216, 220, 221, 222, 228, 231, 235, 237, 239, 240, 246, 248, 254, 255, 259, 261, 323, 324, 331, 332, 335], "one": [90, 91, 92, 97, 99, 103, 104, 105, 108, 126, 127, 133, 136, 140, 196, 201, 204, 214, 216, 228, 231, 235, 237, 240, 246, 248, 254, 255, 259, 261, 263, 322, 328, 332, 333, 334, 335], "follow": [90, 91, 92, 97, 99, 103, 104, 105, 108, 126, 196, 214, 216, 228, 231, 235, 237, 240, 246, 248, 254, 255, 259, 261, 322, 326, 327, 331, 335], "od": [90, 91, 92, 97, 99, 103, 104, 105, 108, 126, 196, 214, 216, 220, 221, 222, 228, 231, 235, 237, 240, 246, 248, 254, 255, 259, 261], "a_": [90, 91, 92, 235, 237], "i_": [90, 91, 92, 104, 108, 220, 221, 222, 235], "z_": [90, 91, 92, 196, 231, 237, 246, 248, 250, 255, 261], "rec": [90, 91, 92, 196, 231, 237, 246, 248, 250, 255, 261], "lifadexfeedforwardst": 91, "It": [91, 94, 97, 104, 108, 135, 235, 239, 240, 323, 324, 327, 328, 331, 334], "take": [91, 97, 104, 108, 116, 129, 136, 142, 203, 205, 235, 240, 264, 329, 331, 332, 333, 335], "gener": [91, 97, 104, 108, 127, 128, 133, 134, 140, 141, 198, 235, 240, 263, 264, 306, 311, 312, 313, 314, 315, 331], "arbitrari": [91, 97, 104, 108, 235, 240, 260, 264], "meant": [91, 104, 108, 235, 322, 335], "appli": [91, 104, 108, 116, 124, 192, 193, 194, 198, 227, 228, 230, 231, 235, 311, 312, 313, 314, 315, 322, 327, 330, 335], "simplifi": [94, 239, 323, 324, 327, 328], "compar": [94, 239, 323, 324, 332], "leav": [94, 239, 323, 324, 331], "make": [94, 142, 205, 239, 302, 323, 324, 329, 333], "computation": [94, 239, 323, 324, 327, 335], "simpler": [94, 239, 323, 324], "imposs": [94, 239, 323, 324], "physic": [94, 239, 323, 324], "system": [94, 239, 322, 323, 324, 327, 331, 333, 335], "becaus": [94, 133, 239, 263, 323, 324, 326, 329, 331, 333, 335], "cannot": [94, 239, 323, 324, 333], "natur": [94, 239, 323, 324, 327, 333], "sudden": [94, 239, 323, 324], "give": [94, 239, 323, 324, 334], "its": [94, 129, 203, 239, 323, 324, 327, 332], "name": [94, 239, 302, 306, 311, 312, 313, 314, 315, 322, 323, 324, 332], "shift": [94, 239, 323, 324], "instantan": [94, 225, 239, 323, 324], "drawn": [94, 133, 239, 263, 323, 324], "reset_method": [96, 97, 240, 242], "callabl": [96, 116, 129, 203, 242, 264, 311, 312, 313, 314, 315], "reset_valu": [96, 97, 240, 242], "lifboxfeedforwardst": [97, 240], "lifboxparamet": [97, 240], "without": [97, 133, 214, 216, 220, 221, 228, 231, 235, 240, 246, 254, 258, 259, 263, 329, 334, 335], "lifex": [101, 103, 105, 235, 248], "lifexparamet": [103, 104, 105, 245, 246, 247, 248], "neuronaldynam": [103, 104, 105, 246, 248], "epfl": [103, 104, 105, 246, 248], "ch": [103, 104, 105, 246, 248], "ch5": [103, 104, 105, 246, 248], "s2": [103, 104, 105, 246, 248], "html": [103, 104, 105, 198, 246, 248, 328, 331, 333, 335], "lifexfeedforwardst": 104, "adjoint": [106, 107, 114, 125, 258, 259, 260, 261, 331], "backward": [106, 107, 114, 125, 331], "synaps": [106, 107, 114, 125], "cell": [106, 107, 125, 136, 137, 138, 142, 193, 205, 214, 221, 222, 259, 303, 305, 331, 332, 335], "g_coupl": [110, 112, 250, 252], "multi": [110, 250], "compart": [110, 250], "weight": [110, 125, 216, 222, 230, 231, 236, 237, 247, 299, 331], "lifrefracfeedforwardst": [112, 114, 115], "lifrefracparamet": [112, 114, 115, 252, 254, 255], "none": [116, 127, 128, 129, 134, 136, 137, 138, 140, 141, 193, 198, 203, 205, 216, 245, 247, 250, 252, 263, 264, 301, 303, 305, 306, 307, 311, 312, 313, 314, 315, 331, 332], "creat": [116, 131, 132, 133, 141, 263, 264, 322, 326, 329, 333], "later": [116, 135, 193, 324, 327, 334], "wa": 116, "now": [116, 326, 327, 328, 329, 331, 335], "assum": [116, 127, 128, 140, 141, 142, 201, 202, 204, 205, 305, 311, 312, 313, 314, 315, 322, 333], "whose": [116, 129, 203, 332], "option": [116, 134, 136, 137, 138, 193, 198, 250, 252, 264, 301, 303, 306, 322], "object": [116, 130, 262, 302, 305, 307, 323, 324, 327], "output": [116, 129, 133, 135, 192, 196, 198, 203, 214, 235, 237, 246, 248, 254, 255, 258, 260, 263, 311, 312, 313, 314, 315, 324, 331, 332, 333, 335], "hand": 116, "when": [116, 124, 133, 141, 311, 312, 313, 314, 315, 327, 329, 335], "outer": [116, 192, 333], "applic": [116, 213, 215, 220, 227, 230, 234, 236, 245, 247, 326, 327, 330, 331, 332], "provid": [116, 118, 119, 120, 121, 122, 133, 134, 192, 264, 326, 329, 333, 334, 335], "shape": [116, 198, 260, 264, 328, 331, 332], "bitvector": [118, 119, 120, 121, 122], "xor": 120, "y_prev": 121, "x_1": 121, "x_2": 121, "muller": 121, "element": [121, 198, 330], "next": [121, 327], "previou": [121, 335], "z_prev": 122, "whether": [122, 227, 228, 230, 231, 305], "ha": [122, 138, 322, 326, 327, 328, 329, 331], "long": [124, 257, 258, 260, 335], "short": [124, 148, 257, 258, 260, 322, 335], "memori": [124, 257, 258, 260, 335], "build": [124, 257, 322, 323, 327, 328, 329, 334, 335], "work": [124, 194, 257, 307, 311, 312, 313, 314, 315, 322, 323, 326, 327, 329, 331, 332, 333], "g": [124, 257, 323, 330, 333, 334], "bellec": [124, 257, 323, 334], "salaj": [124, 257, 323, 334], "subramonei": [124, 257, 323], "r": [124, 142, 193, 205, 257, 323], "legenstein": [124, 257, 323, 334], "maass": [124, 257, 323, 334], "igitugraz": [124, 257, 323], "offici": [124, 257, 323, 329], "similar": [124, 143, 206, 307, 333, 334], "contrast": [124, 332], "practic": [124, 327, 331], "less": [124, 335], "same": [124, 198, 306, 327, 332], "lsnnfeedforwardst": [125, 126], "lsnnparamet": [125, 126, 258, 259, 260, 261], "threshhold": 125, "input_weight": [125, 216, 230, 231, 236, 237, 247], "recurrent_weight": [125, 216, 230, 231, 236, 237, 247], "recurr": [125, 194, 196, 214, 216, 220, 221, 228, 230, 231, 232, 234, 235, 236, 237, 246, 247, 248, 250, 254, 255, 258, 259, 260, 261, 330, 332, 333, 334, 335], "unit": [125, 126, 259, 261, 332], "input_valu": [127, 128, 129, 140, 141], "f_max": [127, 128, 140, 141, 201, 202, 204], "rang": [127, 128, 140, 201, 202, 204, 264, 302, 306, 327, 331, 332], "higher": [127, 140, 201, 204, 329, 332, 335], "binari": [127, 128, 130, 140, 201, 202, 262, 323, 324, 332, 335], "cn": [127, 128], "nyu": [127, 128], "edu": [127, 128], "david": [127, 128, 330], "handout": [127, 128], "pdf": [127, 128, 301, 302, 303, 304, 305, 306, 307], "interv": [127, 128, 140, 141], "sequence_length": [127, 140, 143, 201, 204, 206], "maxim": [127, 128, 140, 141, 201, 202, 204], "frequenc": [127, 128, 140, 141, 201, 202, 204], "hertz": [127, 128, 140, 141, 201, 202, 204], "emit": [127, 128, 140, 141, 201, 202, 204, 333, 335], "should": [127, 128, 134, 136, 140, 141, 143, 201, 202, 204, 206, 264, 306, 327, 328, 331, 333, 335], "coincid": [127, 128, 140, 141, 143, 201, 202, 204, 206], "pseudorandom": [127, 140, 141], "usual": [127, 140, 141], "manual_se": [127, 140, 141], "seed": [127, 140, 141], "pass": [127, 140, 141, 194, 198, 263, 332, 335], "argument": [127, 131, 132, 133, 134, 140, 141, 194, 198, 228, 263, 301, 302, 303, 304, 305, 306, 307, 311, 312, 313, 314, 315], "1000": [128, 141, 192, 202, 332], "out_featur": [129, 203], "union": [129, 133, 198, 203, 263], "gaussian_rbf": [129, 203], "distance_funct": [129, 203], "euclidean_dist": [129, 203], "popul": [129, 203, 331], "singular": [129, 203], "list": [129, 133, 194, 203, 263, 305, 306, 329, 330, 331, 335], "length": [129, 203, 306], "equal": [129, 132, 203, 330], "visualis": [129, 203, 304, 329], "imagin": [129, 203, 327], "get": [129, 203, 329, 330, 331, 333, 335], "close": [129, 203, 327, 329, 331, 332], "recept": [129, 130, 132, 133, 134, 203, 262, 263, 264], "curv": [129, 203, 335], "imag": [129, 198, 203, 315, 331, 334], "credit": [129, 203], "andrew": [129, 203], "richardson": [129, 203], "3": [129, 181, 193, 194, 203, 305, 306, 322, 329, 331, 332, 335], "pop_encod": 129, "8825": [129, 203], "6065": [129, 203], "poisson_encod": 129, "squeez": [129, 306], "per": [129, 203], "maximum": [129, 134, 203, 264], "also": [129, 203, 216, 222, 230, 231, 236, 237, 247, 250, 255, 260, 261, 322, 327, 329, 331, 332, 334, 335], "individu": [129, 203], "sampl": [129, 132, 203, 306, 331, 335], "center": [129, 203, 326], "index": [129, 203, 331], "actual": [129, 203, 333], "stimulu": 129, "abov": [129, 198, 216, 230, 231, 236, 237, 247, 327, 332, 333, 334, 335], "deriv": [130, 133, 262, 263, 323, 324, 327], "space": [130, 133, 198, 262, 263, 264, 323, 324, 332], "theori": [130, 262, 323, 324], "paper": [130, 262, 322, 323, 324, 334], "norm": [130, 262, 323, 324], "visual": [130, 142, 205, 262, 323, 324, 327], "lindeberg": [130, 134, 262, 323, 324], "2021": [130, 262, 322, 323, 324, 330], "For": [130, 142, 205, 262, 323, 324, 326, 327, 329, 331, 335], "signal": [130, 262, 323, 324, 335], "translat": [130, 262, 323, 324], "invari": [130, 262, 323, 324], "pedersen": [130, 262, 322, 323, 324, 326, 330], "2023": [130, 262, 323, 324, 330], "effici": [131, 326, 335], "2d": [131, 142, 198, 300, 304, 307], "matrix": [131, 216, 230, 231, 236, 237, 247], "varianc": 131, "2x2": 131, "covari": 131, "eccentr": [131, 132, 133, 263], "angl": [132, 133, 263], "ratio": [132, 133, 263], "rotat": 132, "radian": 132, "pixel": [132, 133, 263], "coordin": 132, "n_scale": [133, 134, 263, 264], "n_angl": [133, 263], "n_ratio": [133, 263], "min_scal": [133, 134, 263, 264], "max_scal": [133, 134, 263, 264], "min_ratio": [133, 263], "max_ratio": [133, 263], "1st": 133, "direct": [133, 198, 326], "decid": [133, 136, 263], "scan": [133, 263], "exist": [133, 263, 322, 327, 329, 331, 333, 335], "perfectli": [133, 263], "symmetr": [133, 263], "reason": [133, 263, 329], "howev": [133, 263, 322, 327, 331], "still": [133, 263], "final": [133, 327, 331, 335], "come": [133, 331], "spatial": [133, 263], "logarithm": [133, 134, 263, 264], "angular": [133, 263], "orient": [133, 263, 330], "flat": [133, 263], "either": [133, 198, 327, 328, 329, 335], "made": 133, "except": 133, "omit": [133, 225], "Or": [133, 329], "specifi": 133, "partial_x": 133, "partial": [133, 326, 332], "2_y": 133, "41421": [134, 264], "accord": 134, "lindeberg2016": 134, "minimum": [134, 264], "If": [134, 263, 264, 306, 322, 328, 329, 331, 332, 333, 334, 335], "ignor": [134, 264, 327], "exclus": [134, 264], "sqrt": [134, 264], "2016": 134, "causal": 134, "recurs": 134, "spatio": 134, "link": [134, 334], "springer": [134, 330], "com": [134, 322, 329, 331], "1007": [134, 330], "s10851": 134, "015": 134, "0613": [134, 331], "9": [134, 329, 331, 332], "oper": [135, 198, 265, 332, 335], "layer": [135, 194, 213, 215, 220, 227, 230, 234, 236, 245, 247, 258, 260, 265, 300, 302, 306, 307, 324, 327, 331, 332, 333], "desir": [135, 265, 324], "properti": [135, 138, 265, 324, 326], "aim": [135, 322, 324], "collect": [135, 324], "just": [135, 324, 331, 332], "job": [135, 324], "user": [135, 324, 327], "error": [135, 136, 193, 324], "read": [135, 311, 312, 313, 314, 315, 322, 324, 327, 333], "accumul": [136, 137, 138, 193], "spike_accumul": [136, 193], "push": 136, "futur": 136, "inclus": 136, "total": [137, 331], "sum": [137, 263, 312, 314, 323, 331], "integ": 137, "new": [137, 138, 327, 329, 333], "regularizationst": [137, 138], "all": [138, 142, 198, 205, 213, 215, 220, 227, 230, 234, 236, 245, 247, 263, 322, 327, 331, 332, 334], "entri": 138, "mechan": 139, "sign": [141, 204], "vector": 141, "remov": [142, 205, 216, 230, 231, 236, 237, 247, 329], "basic": [142, 205, 333, 335], "measur": [142, 205, 331], "sens": [142, 205, 326, 330, 332], "strong": [142, 205], "van": [142, 205], "rullen": [142, 205], "thorp": [142, 205], "2001": [142, 205], "versu": [142, 205], "order": [142, 205, 305, 331], "retin": [142, 205], "ganglion": [142, 205], "tell": [142, 205], "cortex": [142, 205], "identifi": [142, 205, 332], "uniqu": [142, 205], "posit": [142, 143, 205, 331], "within": [142, 326, 335], "sequenc": [142, 192, 213, 215, 227, 230, 234, 236, 245, 247, 330, 332], "least": 142, "retain": 142, "constantcurrentlifencod": [143, 205, 206, 328, 331], "thought": [143, 206], "infinit": [143, 206], "z_pre": 147, "z_post": 147, "stdpsensorst": 147, "stdpsensorparamet": 147, "pre": [147, 331], "tsodyksmakramst": 148, "tsodyksmakramparamet": 148, "stp": 148, "term_synaptic_plast": 148, "exp_filt": 155, "adher": [191, 323, 328], "nn": [191, 192, 193, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 213, 214, 215, 216, 220, 221, 222, 227, 228, 230, 231, 234, 235, 236, 237, 240, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 263, 264, 265, 323, 328, 331, 333], "interfac": [191, 323, 329, 334], "batch_siz": [192, 196, 214, 216, 235, 237, 246, 248, 254, 255, 328, 331], "in_channel": [192, 198, 263], "out_channel": [192, 198], "32": [192, 331], "conv2d": [192, 194, 198, 263], "randn": [192, 196, 214, 235, 237, 246, 248, 254, 255, 301, 302, 303, 307, 327, 328, 331], "sequenti": [192, 194, 205, 333], "intern": [192, 193, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 213, 214, 215, 216, 220, 221, 222, 227, 228, 230, 231, 234, 235, 236, 237, 240, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 263, 264, 330, 331], "share": [192, 193, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 213, 214, 215, 216, 220, 221, 222, 227, 228, 230, 231, 234, 235, 236, 237, 240, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 263, 264], "scriptmodul": [192, 193, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 213, 214, 215, 216, 220, 221, 222, 227, 228, 230, 231, 234, 235, 236, 237, 240, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 263, 264], "regularis": [193, 265], "loss": [193, 331], "import": [193, 194, 214, 216, 258, 260, 302, 304, 307, 311, 312, 313, 314, 315, 328, 331, 332, 333, 334, 335], "lifcel": [193, 227, 311, 312, 313, 314, 315, 327, 328, 332, 335], "ones": [193, 194, 303, 305, 331, 333, 335], "batch": [193, 194, 213, 215, 216, 227, 228, 230, 231, 234, 236, 245, 247, 331, 334], "regularization_term": 193, "1e": 193, "arg": [194, 198, 205, 215, 328, 331], "return_hidden": 194, "bool": [194, 216, 227, 228, 230, 231, 236, 237, 246, 247, 248, 250, 255, 258, 259, 260, 261, 263, 301, 302, 305, 306], "fals": [194, 216, 227, 228, 230, 231, 236, 237, 246, 247, 248, 250, 255, 258, 259, 260, 261, 263, 301, 302, 306, 331, 332], "handl": [194, 333], "snn": [194, 264, 311, 312, 313, 314, 315, 327, 330, 335], "channel": [194, 198, 263, 264, 329], "flatten": 194, "12": 194, "lifrecurr": 194, "lsnnrecurr": [194, 335], "rnn": [194, 332, 333], "input_s": [196, 215, 216, 222, 230, 231, 236, 237, 246, 247, 248, 250, 252, 255, 260, 261, 331], "hidden_s": [196, 215, 216, 222, 230, 231, 236, 237, 246, 247, 248, 250, 252, 255, 260, 261, 331], "c_": [196, 198], "e_": 196, "rev_": 196, "rev_i": 196, "relu": [196, 332], "w_": [196, 198, 231, 237, 248, 250, 255, 261], "hidden": [196, 216, 222, 230, 231, 236, 237, 246, 247, 248, 250, 255, 260, 261, 331], "s0": [196, 214, 235, 237, 246, 248, 254, 255], "kernel_s": 198, "stride": 198, "pad": 198, "dilat": 198, "group": 198, "devic": [198, 328, 331, 334], "dtype": 198, "pointwis": 198, "doc": [198, 322], "stabl": [198, 331], "highlight": 198, "document": [198, 311, 312, 313, 314, 315, 322, 335], "reproduc": 198, "part": [198, 327, 335], "here": [198, 322, 328, 329, 331, 335], "expect": [198, 302, 306, 322, 331, 332, 333, 335], "notat": 198, "referenc": 198, "turn": [198, 331, 332], "simplest": [198, 332], "ext": 198, "h_": 198, "along": 198, "denot": [198, 264], "groups_not": 198, "height": 198, "width": 198, "convolv": 198, "four": [198, 302, 306], "side": 198, "block": [198, 323], "connect": [198, 216, 230, 231, 236, 237, 246, 247, 248, 250, 255, 331], "constant_current_lif_encod": 200, "kwarg": [205, 213, 214, 215, 216, 220, 221, 227, 228, 230, 231, 234, 235, 236, 237, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 263, 301, 302, 303, 305, 306, 307, 331], "arrai": 205, "thumb": 207, "techiqu": 207, "spiking_method": [213, 214, 215, 216], "wrap": [213, 215, 220, 227, 230, 234, 236, 245, 247, 333], "izhikevichcel": 213, "keep": [213, 215, 227, 230, 234, 236, 245, 247, 322, 327, 330, 333, 335], "last": [213, 215, 220, 227, 230, 234, 236, 245, 247, 331, 332], "l": [213, 215, 216, 220, 227, 228, 230, 231, 234, 236, 245, 247, 302, 306, 330], "allow": [213, 215, 216, 225, 227, 230, 231, 234, 236, 237, 245, 246, 247, 248, 250, 255, 258, 259, 260, 329, 335], "configur": [213, 215, 227, 230, 234, 236, 245, 247, 258, 259, 260, 333, 334], "optimiz": [213, 215, 227, 230, 234, 236, 245, 247, 258, 259, 260], "04v\u00b2": [214, 216], "5v": [214, 216], "bv": [214, 216], "tonic": [214, 216], "tonic_spik": [214, 216, 304], "izhikevichrecurrentcel": 215, "known": [216, 222, 231, 237, 250, 255, 260, 261, 329], "featur": [216, 222, 231, 237, 250, 255, 260, 261, 329, 335], "random": [216, 230, 231, 236, 237, 247, 331, 335], "normal": [216, 230, 231, 236, 237, 247, 327, 331], "autaps": [216, 230, 231, 236, 237, 246, 247, 250, 255, 331], "self": [216, 230, 231, 236, 237, 246, 247, 248, 250, 255, 322, 328, 331], "Will": [216, 230, 231, 236, 237, 247, 264], "custom": [216, 230, 231, 236, 237, 247, 322], "licel": [220, 331], "_outer_": 220, "discret": [220, 221, 222, 335], "linear": [222, 331, 332, 333], "particular": [225, 332], "veri": [226, 323, 331, 334], "lifstat": [227, 228, 230, 231], "spars": [227, 228, 230, 231, 322, 326, 332, 335], "lifrecurrentcel": [230, 331], "lifadexcel": 234, "lifadexlay": 234, "lifexst": [234, 245, 247], "lif_ex": 235, "lifadexrecurrentcel": 236, "lifadexst": 236, "lifexcel": 245, "lifexrecurrentcel": 247, "g_": 250, "refrac": [254, 255], "z_r": [254, 255], "rho_": [254, 255], "1803": [258, 260], "09574": [258, 260], "usag": [258, 260], "wit": 260, "dimension": [263, 264, 301, 303], "output_channel": 263, "map": 263, "mai": [263, 295, 325, 327], "blow": 263, "complex": [263, 333], "underli": [263, 327], "snncell": 264, "leaky_integrator_box": 264, "liboxcel": 264, "activation_state_map": 264, "namedtupl": [264, 327], "lambda": 264, "time_const": 264, "select": [264, 329], "scatter": [264, 302, 306], "linspac": 264, "sinc": [264, 327, 328, 332], "liboxparamet": 264, "hardcod": 264, "overwrit": 264, "automat": [264, 327], "stai": 294, "intact": 294, "properli": 294, "propag": 294, "subpackag": [295, 325], "matplotlib": [295, 301, 302, 303, 306, 307, 325, 331, 332], "tensorboard": [295, 329, 334], "3d": [300, 302], "ax": [301, 302, 303, 305, 306, 307, 331], "show_colorbar": [301, 302, 306], "heatmat": 301, "28": [301, 302, 328, 331], "png": [301, 302, 303, 304, 305, 306, 307], "hire": [301, 302, 303, 304, 305, 306, 307], "id": 301, "axi": [301, 303, 307, 335], "pyplot": [301, 302, 303, 306, 307, 331, 332], "gca": [301, 303, 307], "show": [301, 302, 306, 307, 313, 314, 322, 327, 329, 332, 333], "colorbar": [301, 302, 306], "kei": [301, 302, 303, 306, 307, 311, 312, 313, 314, 315], "style": [301, 302, 303, 306, 307, 331, 332], "figur": [301, 302, 303, 306, 307, 327, 332], "fed": [301, 302, 303, 306, 307], "imshow": [301, 302, 307], "heatmap": 302, "sever": [302, 331, 335], "instead": [302, 331], "dispers": 302, "plt": [302, 305, 306, 307, 331, 332], "namedtensor": [302, 306], "histogram": [303, 313, 314, 331], "hist": [303, 331], "time_print": 304, "time_curr": 304, "timestep_print": 304, "izhikevich": [304, 327], "By": [304, 332], "250m": 304, "1m": 304, "strengh": 304, "goe": 304, "label": [305, 331, 332, 334], "line": [305, 311, 312, 329, 331, 332, 334], "render": 305, "further": [305, 332, 333, 334], "manipul": [305, 332], "multipl": 306, "shown": [306, 335], "subplot": [306, 331], "three": [306, 322, 329, 335], "bernoulli": 306, "sample_shap": 306, "grid": [306, 332], "diagram": 307, "plot_heatmap_2d": 307, "black": [307, 327], "white": [307, 335], "meth": 307, "write": [310, 327, 331], "writer": [311, 312, 313, 314, 315], "summarywrit": [311, 312, 313, 314, 315], "hook": [311, 312, 313, 314, 315], "plot": [311, 312, 313, 314, 315, 331, 332], "That": [311, 312, 313, 314, 315], "onli": [311, 312, 313, 314, 315, 331, 332, 333, 335], "about": [311, 312, 313, 314, 315, 322, 330, 331, 333, 334, 335], "register_forward_hook": [311, 312, 313, 314, 315], "regist": [311, 312, 313, 314, 315, 328, 329, 331], "relat": 316, "exploit": 322, "advantag": [322, 331], "inspir": [322, 327, 330, 332, 334], "fundament": [322, 327, 331, 335], "expand": 322, "primit": [322, 328], "bring": 322, "modern": 322, "proven": 322, "infrastructur": [322, 326], "github": [322, 329, 335], "io": [322, 329, 331, 335], "To": [322, 327, 328, 329, 332, 333, 335], "try": [322, 329], "best": [322, 331], "jupyt": [322, 329, 331], "notebook": [322, 331, 332, 333], "googl": [322, 330], "collab": 322, "altern": [322, 334], "task": [322, 328, 329, 330, 331, 335], "python": [322, 327, 329, 331, 334, 335], "m": [322, 328, 330, 331, 334], "quickstart": 322, "your": [322, 327, 328, 329, 333], "own": [322, 326, 327, 328, 333, 335], "explain": [322, 327, 335], "few": [322, 330], "concept": [322, 327], "7": [322, 329, 331], "termin": 322, "friendli": 322, "environ": [322, 329, 334], "necessari": [322, 327, 328], "detail": [322, 329, 330, 333, 334], "instruct": 322, "methodinstructionsprerequisit": 322, "pypi": 322, "pip": [322, 334], "qu": 322, "git": [322, 329], "With": [322, 331, 335], "docker": 322, "pull": [322, 329], "quai": [322, 329], "conda": 322, "anaconda": 322, "miniconda": 322, "bundl": 322, "correct": [322, 328, 331, 335], "sscce": 322, "invok": [322, 331], "directori": [322, 327, 329], "our": [322, 326, 328, 329, 331, 333, 335], "consol": 322, "help": [322, 334], "classif": [322, 334], "cifar": [322, 334], "cifar10": 322, "balanc": [322, 334], "polici": 322, "demonstr": [322, 327, 331, 333, 334], "variant": 322, "mnist_pl": [322, 334], "gpu": [322, 328, 334], "introduct": [322, 331, 333, 335], "visit": 322, "port": [322, 335], "complet": [322, 330], "scratch": 322, "motiv": [322, 326, 332], "briefli": 322, "unfortun": [322, 327], "intens": 322, "hardwar": [322, 326, 329, 330, 332], "acceler": [322, 330, 335], "dedic": 322, "warmli": 322, "encourag": 322, "alwai": [322, 331, 333], "welcom": 322, "wish": [322, 327, 333], "guidelin": 322, "christian": [322, 326, 330, 331], "pehl": [322, 326, 330, 331], "cpehl": 322, "postdoc": 322, "univers": 322, "germani": [322, 326], "jen": [322, 326, 330], "jegp": 322, "doctor": 322, "student": 322, "kth": 322, "royal": 322, "institut": 322, "technolog": 322, "sweden": [322, 326], "research": [322, 326, 332, 335], "receiv": [322, 326], "fund": [322, 326], "ec": [322, 326], "horizon": [322, 326], "2020": [322, 326], "framework": [322, 326, 330], "programm": [322, 326], "grant": [322, 326], "agreement": [322, 326], "785907": [322, 326], "945539": [322, 326], "hbp": [322, 326], "deutsch": [322, 326], "forschungsgemeinschaft": [322, 326], "dfg": [322, 326], "german": [322, 326], "fundat": [322, 326], "excel": [322, 326, 328], "strategi": [322, 326], "exc": [322, 326], "2181": [322, 326], "390900948": [322, 326], "structur": [322, 326, 327, 330], "cluster": [322, 326], "cite": 322, "softwar": [322, 330], "norse2021": 322, "author": [322, 331], "egholm": [322, 330], "titl": 322, "month": 322, "jan": 322, "year": 322, "ai": 322, "publish": 322, "zenodo": 322, "doi": [322, 330], "5281": 322, "4422025": 322, "url": [322, 329, 330], "literatur": [322, 330, 335], "lgplv3": 322, "until": 323, "project": 326, "interest": 326, "explor": [326, 331, 332], "benefit": [326, 329, 331], "broad": 326, "energi": 326, "solv": [326, 327, 335], "von": [326, 330], "neumann": 326, "bottleneck": 326, "host": 326, "awar": 326, "fact": 326, "effort": 326, "undertaken": 326, "area": 326, "chose": 326, "develop": [326, 329], "did": 326, "find": [326, 334], "suffici": 326, "mostli": 326, "toolset": 326, "person": 326, "convinc": 326, "outsid": 326, "scope": 326, "primarili": 326, "concern": [326, 331], "plan": 326, "academ": 326, "commerci": 326, "neuromorph": [326, 330, 332], "platform": [326, 328], "question": 326, "comment": 326, "maintain": 326, "were": 326, "enabl": [326, 329], "nation": 326, "supercomput": 326, "naiss": 326, "chalmer": 326, "centr": 326, "scienc": [326, 330], "engin": [326, 330], "c3se": 326, "perform": 326, "north": 326, "hpc2n": 326, "uppsala": 326, "multidisciplinari": 326, "advanc": 326, "uppmax": 326, "swedish": 326, "council": 326, "through": [326, 328, 330, 334], "2022": [326, 330], "06725": 326, "programmat": 327, "intend": 327, "audienc": 327, "want": 327, "understand": 327, "achiev": [327, 335], "hypothet": 327, "biolog": [327, 331, 332, 333, 334, 335], "rudimentari": 327, "syntact": 327, "sugar": 327, "compos": [327, 331], "better": [327, 335], "circumv": 327, "hierarchi": 327, "red": [327, 332], "torch": [327, 328, 329, 331, 332, 333, 335], "directli": 327, "fig": [327, 331, 335], "file": [327, 331], "access": [327, 329, 331, 332, 334], "lif_feed_forward_step": 327, "similarli": [327, 331], "As": [327, 331, 332], "know": [327, 332, 333], "essenti": [327, 331], "modular": 327, "wrapper": 327, "inde": 327, "re": 327, "counterpart": 327, "realiz": 327, "onc": [327, 332, 335], "built": [327, 328, 334], "test": [327, 330], "straight": 327, "worth": [327, 328], "mention": 327, "tediou": 327, "accommod": 327, "arrow": 327, "py": [327, 329, 331], "folder": 327, "differenti": 327, "imper": 327, "would": [327, 329, 331, 333, 335], "cumbersom": 327, "problem": 327, "luckili": 327, "broken": 327, "down": 327, "constitu": 327, "isol": [327, 329], "unless": 327, "discontinu": 327, "happen": [327, 329, 332], "often": [327, 331], "why": 327, "approxim": 327, "studi": 327, "api": [327, 330], "subject": 327, "innerv": 327, "And": [327, 329], "scalar": [327, 335], "def": [327, 328, 331, 332], "my_dynam": 327, "resolv": 327, "interpret": 327, "loop": 327, "mock_data": 327, "pretti": 327, "bit": 327, "hyperparamet": [327, 331], "myparamet": 327, "thing": [327, 328, 332, 333, 335], "top": [328, 329], "support": [328, 329, 331, 335], "cover": [328, 332], "cuda": [328, 329, 331], "familiaris": 328, "yourself": 328, "tutori": [328, 331, 333], "beginn": [328, 333], "nn_tutori": 328, "might": [328, 329, 332], "sometim": 328, "recommend": [328, 329, 333, 335], "idiosyncrasi": 328, "buffer": 328, "setup": [328, 329], "correctli": 328, "move": 328, "lifconvnet": 328, "input_featur": [328, 331], "constant_current_encod": 328, "rsnn": 328, "convnet4": 328, "view": [328, 331], "reshap": 328, "max": [328, 331, 332], "log_p_i": [328, 331], "log_softmax": [328, 331], "dim": [328, 331], "initialis": [328, 331], "main": [328, 335], "chosen": [329, 331], "hint": 329, "primari": 329, "prerequisit": 329, "met": 329, "manag": 329, "preinstal": 329, "most": [329, 331, 332], "linux": 329, "unix": 329, "distro": 329, "guid": 329, "start": [329, 332, 333, 335], "local": [329, 335], "command": 329, "latest": 329, "clone": 329, "cd": 329, "torchtext": 329, "torchvis": [329, 331], "easier": 329, "introspect": 329, "filesystem": 329, "go": 329, "replac": [329, 331, 332, 333, 335], "full": 329, "path": 329, "8888": 329, "bash": 329, "pip3": 329, "dir": 329, "ip": 329, "root": [329, 331], "copi": 329, "past": 329, "browser": 329, "voila": 329, "nvidia": 329, "runtim": 329, "ref": 329, "hopefulli": 329, "address": 329, "hesit": 329, "reach": [329, 332], "issu": 329, "discord": 329, "chat": 329, "server": 329, "gg": 329, "7fgn359": 329, "reli": 329, "optimis": [329, 331], "hotspot": 329, "download": [329, 331], "cmake": 329, "befor": [329, 331, 333], "header": 329, "alreadi": [329, 331], "debian": 329, "ubuntu": 329, "apt": 329, "python3": [329, 331, 334], "dev": 329, "interf": 329, "uninstal": 329, "reinstal": 329, "prefer": 329, "280": 329, "07": 329, "solut": [329, 333], "forg": 329, "temptest2": 329, "present": 330, "than": [330, 335], "touch": 330, "miss": 330, "contact": 330, "eik": 330, "manuel": 330, "bansbach": 330, "alexand": 330, "bank": 330, "laurent": 330, "schmalen": 330, "decis": 330, "feedback": 330, "semanticscholar": 330, "corpusid": 330, "253420324": 330, "ding": 330, "chen": 330, "peixi": 330, "peng": 330, "tiejun": 330, "huang": 330, "yonghong": 330, "tian": 330, "reinforc": 330, "corr": 330, "2201": 330, "09754": 330, "julien": 330, "dupeyroux": 330, "toolbox": 330, "robot": [330, 334], "rida": 330, "el": 330, "allami": 330, "alberto": 330, "marchisio": 330, "muhammad": 330, "shafiqu": 330, "ihsen": 330, "alouani": 330, "secur": 330, "against": 330, "adversari": 330, "attack": 330, "inher": 330, "proceed": 330, "24th": 330, "confer": 330, "design": [330, 333], "autom": 330, "europ": 330, "date": 330, "2012": 330, "05321": 330, "manna": 330, "alex": 330, "vicent": 330, "sola": 330, "paul": 330, "kirkland": 330, "trevor": 330, "bihl": 330, "gaetano": 330, "di": 330, "caterina": 330, "review": 330, "expans": 330, "spyketorch": 330, "227": 330, "238": 330, "eric": 330, "\u00fc": 330, "ller": 330, "elia": [330, 334], "arnold": 330, "oliv": 330, "breitwies": 330, "milena": 330, "czierlinski": 330, "arn": 330, "emmel": 330, "jakob": 330, "kaiser": 330, "mauch": 330, "sebastian": 330, "schmitt": 330, "philipp": 330, "spilger": 330, "raphael": 330, "stock": 330, "yannik": 330, "johann": 330, "wei": 330, "andrea": 330, "baumbach": 330, "billaudel": 330, "benjamin": 330, "falk": 330, "leonard": 330, "ebert": 330, "julian": 330, "\u00f6": 330, "ltz": 330, "joscha": 330, "ilmberg": 330, "vitali": 330, "karasenko": 330, "mitja": 330, "kleider": 330, "aron": 330, "leibfri": 330, "scalabl": 330, "frontier": 330, "neurosci": 330, "247595115": 330, "rg": 330, "conradt": 330, "aestream": 330, "process": [330, 332], "coroutin": 330, "annual": 330, "neuro": 330, "254926426": 330, "mechislav": 330, "pugavko": 330, "oleg": 330, "maslennikov": 330, "vladimir": 330, "nekorkin": 330, "multitask": 330, "scientif": 330, "report": 330, "13": 330, "3997": 330, "xiaoh": 330, "xue": 330, "ralf": 330, "wimmer": 330, "michael": 330, "halassa": 330, "zhe": 330, "sage": 330, "cognit": 330, "feb": 330, "s12559": 330, "022": 330, "09994": 330, "semeant": 330, "scholar": 330, "seen": [331, 335], "those": 331, "treat": 331, "arbitrarili": 331, "machin": [331, 332], "context": 331, "recent": [331, 332], "becom": [331, 335], "clear": 331, "benefiti": 331, "them": [331, 332, 335], "distinct": 331, "incorpor": 331, "nors": [331, 332, 334], "instanti": 331, "easi": [331, 334], "enough": 331, "appropri": 331, "choic": [331, 332, 335], "lognorm": 331, "guarante": 331, "choos": 331, "standard": 331, "deviat": 331, "neg": 331, "unlik": 331, "numpi": [331, 332], "np": [331, 332], "bin": 331, "histtyp": 331, "xlabel": [331, 332], "matric": 331, "appear": 331, "enter": 331, "been": 331, "1985": 331, "0741": 331, "0183": 331, "0955": 331, "0748": 331, "0480": 331, "1705": 331, "0497": 331, "1418": 331, "0065": 331, "0189": 331, "1623": 331, "2600": 331, "2027": 331, "1580": 331, "0838": 331, "3710": 331, "1613": 331, "1544": 331, "1196": 331, "0476": 331, "2215": 331, "0126": 331, "0034": 331, "2606": 331, "0255": 331, "1473": 331, "0188": 331, "0356": 331, "0745": 331, "0367": 331, "1012": 331, "1119": 331, "0706": 331, "0829": 331, "1178": 331, "0680": 331, "0279": 331, "0852": 331, "0425": 331, "0167": 331, "0588": 331, "0104": 331, "0019": 331, "0919": 331, "0120": 331, "1904": 331, "1950": 331, "0634": 331, "1082": 331, "0780": 331, "0137": 331, "1205": 331, "1327": 331, "0073": 331, "3174": 331, "0663": 331, "0302": 331, "1275": 331, "1047": 331, "0749": 331, "0982": 331, "0623": 331, "2202": 331, "1893": 331, "3326": 331, "easiest": 331, "rectifi": [331, 332], "explicit": [331, 332], "parametrizedlifrecurrentcel": 331, "106": 331, "7166": 331, "83": 331, "8664": 331, "59": 331, "5527": 331, "96": 331, "8351": 331, "114": 331, "7434": 331, "111": 331, "7421": 331, "141": 331, "4746": 331, "98": 331, "5834": 331, "80": 331, "9986": 331, "109": 331, "3238": 331, "124": 331, "5230": 331, "74": 331, "9931": 331, "120": 331, "6788": 331, "180": 331, "4217": 331, "66": 331, "4327": 331, "99": 331, "1320": 331, "8191": 331, "93": 331, "6592": 331, "85": [331, 332], "3810": 331, "8700": 331, "95": 331, "5905": 331, "91": 331, "9417": 331, "78": 331, "3452": 331, "105": 331, "4820": 331, "8006": 331, "118": 331, "6664": 331, "5732": 331, "123": 331, "0747": 331, "4547": 331, "2305": 331, "71": 331, "5482": 331, "84": 331, "3395": 331, "7804": 331, "2522": 331, "126": 331, "4362": 331, "137": 331, "3656": 331, "116": 331, "2362": 331, "112": 331, "9425": 331, "122": 331, "7076": 331, "89": 331, "3527": 331, "5058": 331, "72": 331, "9479": 331, "110": 331, "0808": 331, "3344": 331, "7872": 331, "6227": 331, "5038": 331, "102": 331, "5731": 331, "9684": 331, "75": 331, "6650": 331, "8702": 331, "9178": 331, "94": 331, "3402": 331, "6549": 331, "8539": 331, "9658": 331, "2353": 331, "4749": 331, "107": 331, "5600": 331, "8160": 331, "3970": 331, "0768": 331, "7023": 331, "9567": 331, "88": 331, "3064": 331, "9814": 331, "7448": 331, "113": 331, "3519": 331, "103": 331, "4891": 331, "6607": 331, "0807": 331, "104": 331, "9080": 331, "4979": 331, "1941": 331, "3069": 331, "135": 331, "9195": 331, "1854": 331, "8040": 331, "5393": 331, "4268": 331, "8830": 331, "121": 331, "2183": 331, "97": 331, "8999": 331, "0350": 331, "73": 331, "5229": 331, "5289": 331, "56": 331, "8043": 331, "54": 331, "9667": 331, "3613": 331, "0121": 331, "9108": 331, "8997": 331, "81": 331, "0754": 331, "5823": 331, "0395": 331, "115": 331, "8808": 331, "7840": 331, "4501": 331, "9932": 331, "4301": 331, "3992": 331, "4894": 331, "6001": 331, "5738": 331, "7439": 331, "5571": 331, "6179": 331, "3184": 331, "4835": 331, "6864": 331, "5109": 331, "3802": 331, "3187": 331, "3504": 331, "6829": 331, "6238": 331, "3665": 331, "4441": 331, "5375": 331, "3820": 331, "4741": 331, "5563": 331, "3780": 331, "5677": 331, "4366": 331, "5397": 331, "3719": 331, "5267": 331, "3646": 331, "4468": 331, "4480": 331, "5622": 331, "4777": 331, "4875": 331, "4421": 331, "6116": 331, "5366": 331, "2288": 331, "3419": 331, "5371": 331, "5873": 331, "4627": 331, "4972": 331, "3874": 331, "3594": 331, "4158": 331, "5955": 331, "6073": 331, "5525": 331, "6050": 331, "5152": 331, "4628": 331, "5031": 331, "4684": 331, "6304": 331, "6708": 331, "5743": 331, "3848": 331, "6054": 331, "4224": 331, "4706": 331, "5158": 331, "4152": 331, "6358": 331, "4765": 331, "5796": 331, "6253": 331, "2871": 331, "3844": 331, "3262": 331, "5555": 331, "4496": 331, "5116": 331, "6342": 331, "3850": 331, "3298": 331, "4952": 331, "5333": 331, "4737": 331, "5667": 331, "4614": 331, "5529": 331, "6162": 331, "4288": 331, "5412": 331, "6067": 331, "5717": 331, "5447": 331, "4544": 331, "3339": 331, "5160": 331, "5754": 331, "4957": 331, "4760": 331, "1237": 331, "0328": 331, "1532": 331, "1670": 331, "0794": 331, "0991": 331, "1198": 331, "0950": 331, "0195": 331, "1676": 331, "1953": 331, "0516": 331, "1150": 331, "1691": 331, "0460": 331, "0112": 331, "0713": 331, "1021": 331, "1111": 331, "1022": 331, "3491": 331, "0199": 331, "1307": 331, "0014": 331, "0368": 331, "1363": 331, "0177": 331, "2472": 331, "2087": 331, "0725": 331, "0877": 331, "0272": 331, "1878": 331, "0726": 331, "0157": 331, "1094": 331, "1835": 331, "0465": 331, "1351": 331, "3056": 331, "0940": 331, "0847": 331, "1529": 331, "0417": 331, "0665": 331, "1259": 331, "1345": 331, "0193": 331, "1876": 331, "0661": 331, "1025": 331, "0595": 331, "0170": 331, "2294": 331, "3100": 331, "1395": 331, "0707": 331, "0219": 331, "1861": 331, "0520": 331, "2748": 331, "1137": 331, "0256": 331, "adopt": 331, "necessarili": 331, "great": 331, "256": 331, "transform": [331, 332], "totensor": 331, "3081": 331, "train_data": 331, "train_load": 331, "dataload": 331, "shuffl": 331, "test_load": 331, "yann": 331, "lecun": 331, "exdb": 331, "idx3": 331, "ubyt": 331, "gz": 331, "raw": 331, "9912422": 331, "00": 331, "173820221": 331, "94it": 331, "extract": 331, "idx1": 331, "28881": 331, "195380151": 331, "33it": 331, "t10k": 331, "1648877": 331, "62700737": 331, "96it": 331, "4542": 331, "12889397": 331, "00it": 331, "simplic": 331, "consid": [331, 335], "hidden_featur": 331, "output_featur": 331, "recurrent_cel": 331, "fc_out": 331, "s1": 331, "ts": [331, 332], "vo": 331, "stack": [331, 332], "decod": 331, "independ": 331, "probabl": [331, 334], "sophist": 331, "don": 331, "care": 331, "tqdm": 331, "trang": 331, "epoch": [331, 334], "max_epoch": 331, "target": 331, "zero_grad": 331, "nll_loss": 331, "append": [331, 332], "item": 331, "mean_loss": 331, "eval": 331, "test_loss": 331, "no_grad": 331, "reduct": 331, "pred": 331, "argmax": 331, "keepdim": 331, "eq": 331, "view_a": 331, "len": 331, "accuraci": [331, 335], "lr": 331, "002": 331, "is_avail": 331, "cpu": 331, "run_train": 331, "training_loss": 331, "autograd": 331, "set_detect_anomali": 331, "print": 331, "impati": 331, "decreas": [331, 332], "noth": 331, "home": 331, "adam": 331, "tau_mem_inv_befor": 331, "detach": [331, 332], "v_th_befor": 331, "model_aft": 331, "importerror": 331, "traceback": [331, 332], "17": 331, "11": 331, "opt": 331, "hostedtoolcach": 331, "x64": 331, "lib": 331, "site": 331, "311": 331, "tnrang": 331, "309": 331, "310": 331, "shortcut": 331, "tqdm_notebook": 331, "233": 331, "231": 331, "unit_scal": 331, "232": 331, "status_print": 331, "fp": 331, "desc": 331, "ncol": 331, "234": 331, "pbar": 331, "proxi": 331, "235": 331, "displai": 331, "fallback": 331, "bar": 331, "deprec": 331, "info": 331, "101": 331, "prepar": 331, "ipython": 331, "progress": 331, "iprogress": 331, "187": 331, "451": 331, "558": 331, "872": 331, "rais": 331, "warn_noipyw": 331, "min": [331, 332], "updat": [331, 335], "ipywidget": [331, 332], "readthedoc": 331, "en": 331, "user_instal": 331, "tau_mem_inv_aft": 331, "v_th_after": 331, "timeconst": 331, "figsiz": 331, "set_xlabel": 331, "legend": [331, 332], "0x7fe665b8efd0": 331, "0x7fe665b8a8e0": 331, "conclud": [331, 333], "mainli": [331, 335], "knowledg": [331, 333], "At": [331, 335], "moment": 331, "discretis": [331, 332], "limit": 331, "though": 331, "could": [331, 332], "public": 331, "resembl": 331, "ml": 331, "challeng": 331, "techniqu": 331, "account": 331, "naiv": 331, "involv": 331, "haven": 331, "jointli": 331, "consist": [332, 335], "wise": 332, "non": [332, 335], "circuit": 332, "One": 332, "look": [332, 333, 334, 335], "regard": 332, "exchang": 332, "restrict": 332, "art": 332, "conveni": 332, "eventu": 332, "goal": 332, "fulli": 332, "But": 332, "even": [332, 334], "curiou": 332, "closer": 332, "brain": 332, "investig": 332, "hit": [332, 333, 335], "press": [332, 333, 335], "live": [332, 333, 335], "aswel": 332, "cours": 332, "matplotlibrc": 332, "__version__": 332, "capacitor": 332, "li": 332, "convent": 332, "place": 332, "trace": 332, "voltage_trac": 332, "evolut": 332, "indic": 332, "vertic": 332, "ylabel": 332, "axvlin": 332, "color": 332, "line2d": 332, "0x7f00e882bed0": 332, "influenc": [332, 333], "slider": 332, "interact": 332, "intslid": 332, "floatslid": 332, "functool": 332, "continuous_upd": 332, "tau_mem": 332, "tau_syn": 332, "t0": 332, "t1": 332, "num_neuron": 332, "modulenotfounderror": 332, "No": 332, "consequent": 332, "decai": [332, 335], "quickli": [332, 333], "stimul": 332, "success": 332, "lead": [332, 335], "increasingli": 332, "foundat": 332, "principl": 332, "arriv": [332, 334, 335], "helper": 332, "record": 332, "integrate_and_record_voltag": 332, "input_spike_train": 332, "repeat": 332, "t_0": 332, "t_1": 332, "millisecond": 332, "40": [332, 335], "150": 332, "lif_integr": 332, "zs": 332, "lif_voltage_trac": 332, "axhlin": 332, "grei": 332, "realist": 333, "effect": 333, "seamlessli": [333, 335], "caveat": 333, "rememb": 333, "histori": 333, "sequentialst": 333, "trivial": 333, "construct": 333, "wide": 333, "familiar": 333, "action": 333, "inner": 333, "6593": 333, "grad_fn": 333, "addmmbackward0": 333, "perfect": 333, "store": [333, 334], "depth": 333, "next_stat": 333, "honestli": 333, "far": 333, "highli": 333, "suit": 333, "quickstart_tutori": 333, "continu": 333, "load": 334, "anoth": [334, 335], "backpropag": 334, "particularli": 334, "program": 334, "abseil": 334, "extens": 334, "cli": 334, "descript": 334, "flag": 334, "exercis": 334, "counter": 334, "gravit": 334, "forc": 334, "upright": 334, "instal": 334, "databas": 334, "000": 334, "32x32": 334, "classifi": 334, "pattern": 334, "correlation_experi": 334, "guillaum": 334, "franz": 334, "scherr": 334, "hajek": 334, "darjan": 334, "robert": 334, "wolfgang": 334, "handwritten": 334, "verifi": 334, "littl": 334, "overhead": 334, "parallelis": 334, "much": 334, "successfulli": 334, "juwel": 334, "hpc": 334, "dataset": [334, 335], "correspond": 334, "speech_command": 334, "idea": 335, "behind": 335, "product": 335, "suggest": 335, "tabl": 335, "content": 335, "famou": 335, "efficaci": 335, "react": 335, "rare": 335, "exactli": 335, "someon": 335, "wouldn": 335, "respond": 335, "memebran": 335, "electr": 335, "tension": 335, "chanc": 335, "fig_working_ap": 335, "peak": 335, "crucial": 335, "hardest": 335, "free": 335, "plug": 335, "plai": 335, "distinguish": 335, "lsnncell": 335, "lsnnrecurrentcel": 335, "remix": 335, "fit": 335, "tri": 335, "apart": 335, "algorithm": 335, "plausibl": 335, "let": 335, "markram": 335, "replic": 335, "ann": 335, "architectur": 335, "section": 335, "90": 335}, "objects": {"": [[1, 0, 0, "-", "norse"]], "norse": [[2, 0, 0, "-", "benchmark"], [7, 0, 0, "-", "dataset"], [10, 0, 0, "-", "task"], [16, 0, 0, "-", "torch"], [321, 0, 0, "-", "utils"]], "norse.benchmark": [[3, 0, 0, "-", "benchmark"], [4, 0, 0, "-", "main"], [5, 0, 0, "-", "norse_lif"], [6, 0, 0, "-", "plot"]], "norse.dataset": [[8, 0, 0, "-", "memory"], [9, 0, 0, "-", "spiking_heidelberg"]], "norse.task": [[11, 0, 0, "-", "cifar10"], [12, 0, 0, "-", "correlation_experiment"], [13, 0, 0, "-", "memory"], [14, 0, 0, "-", "mnist"], [15, 0, 0, "-", "mnist_pl"]], "norse.torch": [[324, 0, 0, "module-7", "functional"], [183, 0, 0, "-", "models"], [323, 0, 0, "-", "module"], [295, 0, 0, "-", "utils"]], "norse.torch.functional": [[18, 1, 1, "", "LIFFeedForwardState"], [19, 1, 1, "", "LIFParameters"], [20, 1, 1, "", "LIFRefracFeedForwardState"], [21, 1, 1, "", "LIFRefracParameters"], [22, 1, 1, "", "LSNNFeedForwardState"], [23, 1, 1, "", "LSNNParameters"], [24, 1, 1, "", "STDPSensorParameters"], [25, 1, 1, "", "STDPSensorState"], [26, 1, 1, "", "TsodyksMakramParameters"], [27, 1, 1, "", "TsodyksMakramState"], [28, 0, 0, "-", "adjoint"], [38, 3, 1, "", "circ_dist_fn"], [324, 0, 0, "-", "coba_lif"], [43, 3, 1, "", "constant_current_lif_encode"], [44, 0, 0, "-", "correlation_sensor"], [45, 0, 0, "-", "decode"], [46, 0, 0, "-", "encode"], [47, 3, 1, "", "euclidean_distance"], [48, 0, 0, "-", "filter"], [49, 3, 1, "", "gaussian_rbf"], [50, 3, 1, "", "heavi_circ_fn"], [51, 3, 1, "", "heavi_erfc_fn"], [52, 3, 1, "", "heavi_tanh_fn"], [53, 3, 1, "", "heaviside"], [324, 0, 0, "-", "iaf"], [324, 0, 0, "-", "izhikevich"], [324, 0, 0, "-", "leaky_integrator"], [85, 0, 0, "-", "leaky_integrator_box"], [86, 0, 0, "-", "lif"], [324, 0, 0, "-", "lif_adex"], [92, 3, 1, "", "lif_adex_current_encoder"], [93, 0, 0, "-", "lif_adex_refrac"], [324, 0, 0, "-", "lif_box"], [98, 0, 0, "-", "lif_correlation"], [99, 3, 1, "", "lif_current_encoder"], [324, 0, 0, "-", "lif_ex"], [105, 3, 1, "", "lif_ex_current_encoder"], [106, 3, 1, "", "lif_feed_forward_adjoint_step"], [107, 3, 1, "", "lif_feed_forward_adjoint_step_sparse"], [108, 3, 1, "", "lif_feed_forward_step"], [109, 0, 0, "-", "lif_mc"], [110, 3, 1, "", "lif_mc_feed_forward_step"], [111, 0, 0, "-", "lif_mc_refrac"], [112, 3, 1, "", "lif_mc_refrac_feed_forward_step"], [113, 0, 0, "-", "lif_refrac"], [114, 3, 1, "", "lif_refrac_feed_forward_adjoint_step"], [115, 3, 1, "", "lif_refrac_feed_forward_step"], [116, 3, 1, "", "lift"], [324, 0, 0, "-", "logical"], [123, 3, 1, "", "logistic_fn"], [124, 0, 0, "-", "lsnn"], [125, 3, 1, "", "lsnn_feed_forward_adjoint_step"], [126, 3, 1, "", "lsnn_feed_forward_step"], [127, 3, 1, "", "poisson_encode"], [128, 3, 1, "", "poisson_encode_step"], [129, 3, 1, "", "population_encode"], [324, 0, 0, "-", "receptive_field"], [324, 0, 0, "-", "regularization"], [139, 0, 0, "-", "reset"], [140, 3, 1, "", "signed_poisson_encode"], [141, 3, 1, "", "signed_poisson_encode_step"], [142, 3, 1, "", "spike_latency_encode"], [143, 3, 1, "", "spike_latency_lif_encode"], [144, 0, 0, "-", "spikes_to_times_decoder"], [145, 0, 0, "-", "stdp"], [146, 0, 0, "-", "stdp_sensor"], [147, 3, 1, "", "stdp_sensor_step"], [148, 3, 1, "", "stp_step"], [149, 3, 1, "", "super_fn"], [150, 0, 0, "-", "superspike"], [151, 0, 0, "-", "test"], [180, 0, 0, "-", "threshold"], [181, 3, 1, "", "triangle_fn"], [182, 0, 0, "-", "tsodyks_makram"]], "norse.torch.functional.LIFFeedForwardState": [[18, 2, 1, "", "__init__"]], "norse.torch.functional.LIFParameters": [[19, 2, 1, "", "__init__"]], "norse.torch.functional.LIFRefracFeedForwardState": [[20, 2, 1, "", "__init__"]], "norse.torch.functional.LIFRefracParameters": [[21, 2, 1, "", "__init__"]], "norse.torch.functional.LSNNFeedForwardState": [[22, 2, 1, "", "__init__"]], "norse.torch.functional.LSNNParameters": [[23, 2, 1, "", "__init__"]], "norse.torch.functional.STDPSensorParameters": [[24, 2, 1, "", "__init__"]], "norse.torch.functional.STDPSensorState": [[25, 2, 1, "", "__init__"]], "norse.torch.functional.TsodyksMakramParameters": [[26, 2, 1, "", "__init__"]], "norse.torch.functional.TsodyksMakramState": [[27, 2, 1, "", "__init__"]], "norse.torch.functional.adjoint": [[29, 0, 0, "-", "lif_adjoint"], [30, 0, 0, "-", "lif_mc_adjoint"], [31, 0, 0, "-", "lif_mc_refrac_adjoint"], [32, 0, 0, "-", "lif_refrac_adjoint"], [33, 0, 0, "-", "lsnn_adjoint"], [34, 0, 0, "-", "test"]], "norse.torch.functional.adjoint.test": [[35, 0, 0, "-", "test_lif_adjoint"], [36, 0, 0, "-", "test_lif_refrac_adjoint"], [37, 0, 0, "-", "test_lsnn_adjoint"]], "norse.torch.functional.coba_lif": [[40, 1, 1, "", "CobaLIFFeedForwardState"], [41, 1, 1, "", "CobaLIFParameters"], [42, 3, 1, "", "coba_lif_feed_forward_step"]], "norse.torch.functional.coba_lif.CobaLIFFeedForwardState": [[40, 2, 1, "", "__init__"]], "norse.torch.functional.coba_lif.CobaLIFParameters": [[41, 2, 1, "", "__init__"]], "norse.torch.functional.iaf": [[55, 1, 1, "", "IAFFeedForwardState"], [56, 1, 1, "", "IAFParameters"], [57, 3, 1, "", "iaf_feed_forward_step"]], "norse.torch.functional.iaf.IAFFeedForwardState": [[55, 2, 1, "", "__init__"]], "norse.torch.functional.iaf.IAFParameters": [[56, 2, 1, "", "__init__"]], "norse.torch.functional.izhikevich": [[59, 1, 1, "", "IzhikevichParameters"], [60, 1, 1, "", "IzhikevichSpikingBehavior"], [61, 4, 1, "", "accomodation"], [62, 4, 1, "", "bistability"], [63, 4, 1, "", "class_1_exc"], [64, 4, 1, "", "class_2_exc"], [65, 4, 1, "", "dap"], [66, 4, 1, "", "inhibition_induced_bursting"], [67, 4, 1, "", "inhibition_induced_spiking"], [68, 4, 1, "", "integrator"], [69, 3, 1, "", "izhikevich_feed_forward_step"], [70, 4, 1, "", "mixed_mode"], [71, 4, 1, "", "phasic_bursting"], [72, 4, 1, "", "phasic_spiking"], [73, 4, 1, "", "rebound_burst"], [74, 4, 1, "", "rebound_spike"], [75, 4, 1, "", "resonator"], [76, 4, 1, "", "spike_frequency_adaptation"], [77, 4, 1, "", "spike_latency"], [78, 4, 1, "", "subthreshold_oscillation"], [79, 4, 1, "", "tonic_bursting"], [80, 4, 1, "", "tonic_spiking"]], "norse.torch.functional.izhikevich.IzhikevichParameters": [[59, 2, 1, "", "__init__"]], "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior": [[60, 2, 1, "", "__init__"]], "norse.torch.functional.leaky_integrator": [[82, 1, 1, "", "LIParameters"], [83, 1, 1, "", "LIState"], [84, 3, 1, "", "li_feed_forward_step"]], "norse.torch.functional.leaky_integrator.LIParameters": [[82, 2, 1, "", "__init__"]], "norse.torch.functional.leaky_integrator.LIState": [[83, 2, 1, "", "__init__"]], "norse.torch.functional.lif_adex": [[88, 1, 1, "", "LIFAdExFeedForwardState"], [89, 1, 1, "", "LIFAdExParameters"], [90, 3, 1, "", "lif_adex_current_encoder"], [91, 3, 1, "", "lif_adex_feed_forward_step"]], "norse.torch.functional.lif_adex.LIFAdExFeedForwardState": [[88, 2, 1, "", "__init__"]], "norse.torch.functional.lif_adex.LIFAdExParameters": [[89, 2, 1, "", "__init__"]], "norse.torch.functional.lif_box": [[95, 1, 1, "", "LIFBoxFeedForwardState"], [96, 1, 1, "", "LIFBoxParameters"], [97, 3, 1, "", "lif_box_feed_forward_step"]], "norse.torch.functional.lif_box.LIFBoxFeedForwardState": [[95, 2, 1, "", "__init__"]], "norse.torch.functional.lif_box.LIFBoxParameters": [[96, 2, 1, "", "__init__"]], "norse.torch.functional.lif_ex": [[101, 1, 1, "", "LIFExFeedForwardState"], [102, 1, 1, "", "LIFExParameters"], [103, 3, 1, "", "lif_ex_current_encoder"], [104, 3, 1, "", "lif_ex_feed_forward_step"]], "norse.torch.functional.lif_ex.LIFExFeedForwardState": [[101, 2, 1, "", "__init__"]], "norse.torch.functional.lif_ex.LIFExParameters": [[102, 2, 1, "", "__init__"]], "norse.torch.functional.logical": [[118, 3, 1, "", "logical_and"], [119, 3, 1, "", "logical_or"], [120, 3, 1, "", "logical_xor"], [121, 3, 1, "", "muller_c"], [122, 3, 1, "", "posedge_detector"]], "norse.torch.functional.receptive_field": [[131, 3, 1, "", "gaussian_kernel"], [132, 3, 1, "", "spatial_receptive_field"], [133, 3, 1, "", "spatial_receptive_fields_with_derivatives"], [134, 3, 1, "", "temporal_scale_distribution"]], "norse.torch.functional.regularization": [[136, 3, 1, "", "regularize_step"], [137, 3, 1, "", "spike_accumulator"], [138, 3, 1, "", "voltage_accumulator"]], "norse.torch.functional.test": [[152, 0, 0, "-", "test_coba_lif"], [153, 0, 0, "-", "test_decode"], [154, 0, 0, "-", "test_encode"], [155, 0, 0, "-", "test_exp_filter"], [156, 0, 0, "-", "test_heaviside"], [157, 0, 0, "-", "test_iaf"], [158, 0, 0, "-", "test_izhikevich"], [159, 0, 0, "-", "test_leaky_integrator"], [160, 0, 0, "-", "test_leaky_integrator_box"], [161, 0, 0, "-", "test_lif"], [162, 0, 0, "-", "test_lif_adex"], [163, 0, 0, "-", "test_lif_adex_refrac"], [164, 0, 0, "-", "test_lif_box"], [165, 0, 0, "-", "test_lif_ex"], [166, 0, 0, "-", "test_lif_mc"], [167, 0, 0, "-", "test_lif_mc_refrac"], [168, 0, 0, "-", "test_lif_refrac"], [169, 0, 0, "-", "test_lift"], [170, 0, 0, "-", "test_logical"], [171, 0, 0, "-", "test_lsnn"], [172, 0, 0, "-", "test_receptive_field"], [173, 0, 0, "-", "test_regularization"], [174, 0, 0, "-", "test_spikes_to_times_decoder"], [175, 0, 0, "-", "test_stdp"], [176, 0, 0, "-", "test_stdp_sensor"], [177, 0, 0, "-", "test_superspike"], [178, 0, 0, "-", "test_threshold"], [179, 0, 0, "-", "test_tsodyks_makram"]], "norse.torch.models": [[184, 0, 0, "-", "conv"], [185, 0, 0, "-", "mobilenet"], [186, 0, 0, "-", "test"], [190, 0, 0, "-", "vgg"]], "norse.torch.models.test": [[187, 0, 0, "-", "test_conv"], [188, 0, 0, "-", "test_mobilenet"], [189, 0, 0, "-", "test_vgg"]], "norse.torch.module": [[192, 1, 1, "", "Lift"], [193, 1, 1, "", "RegularizationCell"], [194, 1, 1, "", "SequentialState"], [323, 0, 0, "-", "coba_lif"], [323, 0, 0, "-", "conv"], [323, 0, 0, "-", "encode"], [207, 0, 0, "-", "exp_filter"], [323, 0, 0, "-", "iaf"], [323, 0, 0, "-", "izhikevich"], [323, 0, 0, "-", "leaky_integrator"], [225, 0, 0, "-", "leaky_integrator_box"], [323, 0, 0, "-", "lif"], [323, 0, 0, "-", "lif_adex"], [238, 0, 0, "-", "lif_adex_refrac"], [323, 0, 0, "-", "lif_box"], [243, 0, 0, "-", "lif_correlation"], [323, 0, 0, "-", "lif_ex"], [323, 0, 0, "-", "lif_mc"], [323, 0, 0, "-", "lif_mc_refrac"], [323, 0, 0, "-", "lif_refrac"], [256, 0, 0, "-", "lift"], [323, 0, 0, "-", "lsnn"], [323, 0, 0, "-", "receptive_field"], [265, 0, 0, "-", "regularization"], [266, 0, 0, "-", "sequential"], [267, 0, 0, "-", "snn"], [268, 0, 0, "-", "spikes_to_times_decoder"], [269, 0, 0, "-", "test"]], "norse.torch.module.Lift": [[192, 2, 1, "", "__init__"]], "norse.torch.module.RegularizationCell": [[193, 2, 1, "", "__init__"]], "norse.torch.module.SequentialState": [[194, 2, 1, "", "__init__"]], "norse.torch.module.coba_lif": [[196, 1, 1, "", "CobaLIFCell"]], "norse.torch.module.coba_lif.CobaLIFCell": [[196, 2, 1, "", "__init__"]], "norse.torch.module.conv": [[198, 1, 1, "", "LConv2d"]], "norse.torch.module.conv.LConv2d": [[198, 2, 1, "", "__init__"]], "norse.torch.module.encode": [[200, 1, 1, "", "ConstantCurrentLIFEncoder"], [201, 1, 1, "", "PoissonEncoder"], [202, 1, 1, "", "PoissonEncoderStep"], [203, 1, 1, "", "PopulationEncoder"], [204, 1, 1, "", "SignedPoissonEncoder"], [205, 1, 1, "", "SpikeLatencyEncoder"], [206, 1, 1, "", "SpikeLatencyLIFEncoder"]], "norse.torch.module.encode.ConstantCurrentLIFEncoder": [[200, 2, 1, "", "__init__"]], "norse.torch.module.encode.PoissonEncoder": [[201, 2, 1, "", "__init__"]], "norse.torch.module.encode.PoissonEncoderStep": [[202, 2, 1, "", "__init__"]], "norse.torch.module.encode.PopulationEncoder": [[203, 2, 1, "", "__init__"]], "norse.torch.module.encode.SignedPoissonEncoder": [[204, 2, 1, "", "__init__"]], "norse.torch.module.encode.SpikeLatencyEncoder": [[205, 2, 1, "", "__init__"]], "norse.torch.module.encode.SpikeLatencyLIFEncoder": [[206, 2, 1, "", "__init__"]], "norse.torch.module.iaf": [[209, 1, 1, "", "IAFCell"], [210, 1, 1, "", "IAFFeedForwardState"], [211, 1, 1, "", "IAFParameters"]], "norse.torch.module.iaf.IAFCell": [[209, 2, 1, "", "__init__"]], "norse.torch.module.iaf.IAFFeedForwardState": [[210, 2, 1, "", "__init__"]], "norse.torch.module.iaf.IAFParameters": [[211, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich": [[213, 1, 1, "", "Izhikevich"], [214, 1, 1, "", "IzhikevichCell"], [215, 1, 1, "", "IzhikevichRecurrent"], [216, 1, 1, "", "IzhikevichRecurrentCell"], [217, 1, 1, "", "IzhikevichSpikingBehavior"], [218, 1, 1, "", "IzhikevichState"]], "norse.torch.module.izhikevich.Izhikevich": [[213, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichCell": [[214, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichRecurrent": [[215, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichRecurrentCell": [[216, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichSpikingBehavior": [[217, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichState": [[218, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator": [[220, 1, 1, "", "LI"], [221, 1, 1, "", "LICell"], [222, 1, 1, "", "LILinearCell"], [223, 1, 1, "", "LIParameters"], [224, 1, 1, "", "LIState"]], "norse.torch.module.leaky_integrator.LI": [[220, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LICell": [[221, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LILinearCell": [[222, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LIParameters": [[223, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LIState": [[224, 2, 1, "", "__init__"]], "norse.torch.module.lif": [[227, 1, 1, "", "LIF"], [228, 1, 1, "", "LIFCell"], [229, 1, 1, "", "LIFParameters"], [230, 1, 1, "", "LIFRecurrent"], [231, 1, 1, "", "LIFRecurrentCell"], [232, 1, 1, "", "LIFState"]], "norse.torch.module.lif.LIF": [[227, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFCell": [[228, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFParameters": [[229, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFRecurrent": [[230, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFRecurrentCell": [[231, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFState": [[232, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex": [[234, 1, 1, "", "LIFAdEx"], [235, 1, 1, "", "LIFAdExCell"], [236, 1, 1, "", "LIFAdExRecurrent"], [237, 1, 1, "", "LIFAdExRecurrentCell"]], "norse.torch.module.lif_adex.LIFAdEx": [[234, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex.LIFAdExCell": [[235, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex.LIFAdExRecurrent": [[236, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex.LIFAdExRecurrentCell": [[237, 2, 1, "", "__init__"]], "norse.torch.module.lif_box": [[240, 1, 1, "", "LIFBoxCell"], [241, 1, 1, "", "LIFBoxFeedForwardState"], [242, 1, 1, "", "LIFBoxParameters"]], "norse.torch.module.lif_box.LIFBoxCell": [[240, 2, 1, "", "__init__"]], "norse.torch.module.lif_box.LIFBoxFeedForwardState": [[241, 2, 1, "", "__init__"]], "norse.torch.module.lif_box.LIFBoxParameters": [[242, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex": [[245, 1, 1, "", "LIFEx"], [246, 1, 1, "", "LIFExCell"], [247, 1, 1, "", "LIFExRecurrent"], [248, 1, 1, "", "LIFExRecurrentCell"]], "norse.torch.module.lif_ex.LIFEx": [[245, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex.LIFExCell": [[246, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex.LIFExRecurrent": [[247, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex.LIFExRecurrentCell": [[248, 2, 1, "", "__init__"]], "norse.torch.module.lif_mc": [[250, 1, 1, "", "LIFMCRecurrentCell"]], "norse.torch.module.lif_mc.LIFMCRecurrentCell": [[250, 2, 1, "", "__init__"]], "norse.torch.module.lif_mc_refrac": [[252, 1, 1, "", "LIFMCRefracRecurrentCell"]], "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell": [[252, 2, 1, "", "__init__"]], "norse.torch.module.lif_refrac": [[254, 1, 1, "", "LIFRefracCell"], [255, 1, 1, "", "LIFRefracRecurrentCell"]], "norse.torch.module.lif_refrac.LIFRefracCell": [[254, 2, 1, "", "__init__"]], "norse.torch.module.lif_refrac.LIFRefracRecurrentCell": [[255, 2, 1, "", "__init__"]], "norse.torch.module.lsnn": [[258, 1, 1, "", "LSNN"], [259, 1, 1, "", "LSNNCell"], [260, 1, 1, "", "LSNNRecurrent"], [261, 1, 1, "", "LSNNRecurrentCell"]], "norse.torch.module.lsnn.LSNN": [[258, 2, 1, "", "__init__"]], "norse.torch.module.lsnn.LSNNCell": [[259, 2, 1, "", "__init__"]], "norse.torch.module.lsnn.LSNNRecurrent": [[260, 2, 1, "", "__init__"]], "norse.torch.module.lsnn.LSNNRecurrentCell": [[261, 2, 1, "", "__init__"]], "norse.torch.module.receptive_field": [[263, 1, 1, "", "SpatialReceptiveField2d"], [264, 1, 1, "", "TemporalReceptiveField"]], "norse.torch.module.receptive_field.SpatialReceptiveField2d": [[263, 2, 1, "", "__init__"]], "norse.torch.module.receptive_field.TemporalReceptiveField": [[264, 2, 1, "", "__init__"]], "norse.torch.module.test": [[270, 0, 0, "-", "test_coba"], [271, 0, 0, "-", "test_conv"], [272, 0, 0, "-", "test_encode"], [273, 0, 0, "-", "test_exp_filter"], [274, 0, 0, "-", "test_iaf"], [275, 0, 0, "-", "test_izhikevich"], [276, 0, 0, "-", "test_leaky_integrator"], [277, 0, 0, "-", "test_leaky_integrator_box"], [278, 0, 0, "-", "test_lif"], [279, 0, 0, "-", "test_lif_adex"], [280, 0, 0, "-", "test_lif_adex_refrac"], [281, 0, 0, "-", "test_lif_box"], [282, 0, 0, "-", "test_lif_correlation"], [283, 0, 0, "-", "test_lif_ex"], [284, 0, 0, "-", "test_lif_mc"], [285, 0, 0, "-", "test_lif_mc_refrac"], [286, 0, 0, "-", "test_lif_refrac"], [287, 0, 0, "-", "test_lift"], [288, 0, 0, "-", "test_lsnn"], [289, 0, 0, "-", "test_receptive_field"], [290, 0, 0, "-", "test_regularization"], [291, 0, 0, "-", "test_sequential"], [292, 0, 0, "-", "test_snn"], [293, 0, 0, "-", "test_spikes_to_times_decoder"], [294, 0, 0, "-", "test_training"]], "norse.torch.utils": [[296, 0, 0, "-", "clone"], [297, 0, 0, "-", "export_nir"], [298, 0, 0, "-", "import_nir"], [299, 0, 0, "-", "plot"], [308, 0, 0, "-", "pytree"], [309, 0, 0, "-", "state"], [310, 0, 0, "-", "tensorboard"], [317, 0, 0, "-", "test"]], "norse.torch.utils.plot": [[300, 0, 0, "-", "plot"], [301, 3, 1, "", "plot_heatmap_2d"], [302, 3, 1, "", "plot_heatmap_3d"], [303, 3, 1, "", "plot_histogram_2d"], [304, 3, 1, "", "plot_izhikevich"], [305, 3, 1, "", "plot_neuron_states"], [306, 3, 1, "", "plot_scatter_3d"], [307, 3, 1, "", "plot_spikes_2d"]], "norse.torch.utils.tensorboard": [[311, 3, 1, "", "hook_spike_activity_mean"], [312, 3, 1, "", "hook_spike_activity_sum"], [313, 3, 1, "", "hook_spike_histogram_mean"], [314, 3, 1, "", "hook_spike_histogram_sum"], [315, 3, 1, "", "hook_spike_image"], [316, 0, 0, "-", "tensorboard"]], "norse.torch.utils.test": [[318, 0, 0, "-", "test_nir_export"], [319, 0, 0, "-", "test_nir_import"], [320, 0, 0, "-", "test_tensorboard"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"complet": 0, "api": 0, "nors": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 335], "benchmark": [2, 3, 4, 5, 6], "main": 4, "norse_lif": 5, "plot": [6, 299, 300, 301, 302, 303, 304, 305, 306, 307, 325], "dataset": [7, 8, 9, 331], "memori": [8, 13, 323, 324, 334], "spiking_heidelberg": 9, "task": [10, 11, 12, 13, 14, 15, 334], "cifar10": [11, 334], "correlation_experi": 12, "mnist": [14, 331, 334], "mnist_pl": 15, "torch": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 323, 324, 325], "function": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 324], "liffeedforwardst": 18, "lifparamet": [19, 229], "lifrefracfeedforwardst": 20, "lifrefracparamet": 21, "lsnnfeedforwardst": 22, "lsnnparamet": 23, "stdpsensorparamet": 24, "stdpsensorst": 25, "tsodyksmakramparamet": 26, "tsodyksmakramst": 27, "adjoint": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "lif_adjoint": 29, "lif_mc_adjoint": 30, "lif_mc_refrac_adjoint": 31, "lif_refrac_adjoint": 32, "lsnn_adjoint": 33, "test": [34, 35, 36, 37, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 186, 187, 188, 189, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 317, 318, 319, 320, 331], "test_lif_adjoint": 35, "test_lif_refrac_adjoint": 36, "test_lsnn_adjoint": 37, "circ_dist_fn": 38, "coba_lif": [39, 40, 41, 42, 195, 196], "cobaliffeedforwardst": 40, "cobalifparamet": 41, "coba_lif_feed_forward_step": 42, "constant_current_lif_encod": 43, "correlation_sensor": 44, "decod": 45, "encod": [46, 199, 200, 201, 202, 203, 204, 205, 206, 323, 324], "euclidean_dist": 47, "filter": 48, "gaussian_rbf": 49, "heavi_circ_fn": 50, "heavi_erfc_fn": 51, "heavi_tanh_fn": 52, "heavisid": 53, "iaf": [54, 55, 56, 57, 208, 209, 210, 211, 324], "iaffeedforwardst": [55, 210], "iafparamet": [56, 211], "iaf_feed_forward_step": 57, "izhikevich": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 212, 213, 214, 215, 216, 217, 218, 323, 324], "izhikevichparamet": 59, "izhikevichspikingbehavior": [60, 217], "accomod": 61, "bistabl": 62, "class_1_exc": 63, "class_2_exc": 64, "dap": 65, "inhibition_induced_burst": 66, "inhibition_induced_spik": 67, "integr": [68, 323, 324], "izhikevich_feed_forward_step": 69, "mixed_mod": 70, "phasic_burst": 71, "phasic_spik": 72, "rebound_burst": 73, "rebound_spik": 74, "reson": 75, "spike_frequency_adapt": 76, "spike_lat": 77, "subthreshold_oscil": 78, "tonic_burst": 79, "tonic_spik": 80, "leaky_integr": [81, 82, 83, 84, 219, 220, 221, 222, 223, 224], "liparamet": [82, 223], "listat": [83, 224], "li_feed_forward_step": 84, "leaky_integrator_box": [85, 225], "lif": [86, 226, 227, 228, 229, 230, 231, 232, 323, 324, 331], "lif_adex": [87, 88, 89, 90, 91, 233, 234, 235, 236, 237], "lifadexfeedforwardst": 88, "lifadexparamet": 89, "lif_adex_current_encod": [90, 92], "lif_adex_feed_forward_step": 91, "lif_adex_refrac": [93, 238], "lif_box": [94, 95, 96, 97, 239, 240, 241, 242], "lifboxfeedforwardst": [95, 241], "lifboxparamet": [96, 242], "lif_box_feed_forward_step": 97, "lif_correl": [98, 243], "lif_current_encod": 99, "lif_ex": [100, 101, 102, 103, 104, 244, 245, 246, 247, 248], "lifexfeedforwardst": 101, "lifexparamet": 102, "lif_ex_current_encod": [103, 105], "lif_ex_feed_forward_step": 104, "lif_feed_forward_adjoint_step": 106, "lif_feed_forward_adjoint_step_spars": 107, "lif_feed_forward_step": 108, "lif_mc": [109, 249, 250], "lif_mc_feed_forward_step": 110, "lif_mc_refrac": [111, 251, 252], "lif_mc_refrac_feed_forward_step": 112, "lif_refrac": [113, 253, 254, 255], "lif_refrac_feed_forward_adjoint_step": 114, "lif_refrac_feed_forward_step": 115, "lift": [116, 192, 256], "logic": [117, 118, 119, 120, 121, 122, 324], "logical_and": 118, "logical_or": 119, "logical_xor": 120, "muller_c": 121, "posedge_detector": 122, "logistic_fn": 123, "lsnn": [124, 257, 258, 259, 260, 261, 323, 324], "lsnn_feed_forward_adjoint_step": 125, "lsnn_feed_forward_step": 126, "poisson_encod": 127, "poisson_encode_step": 128, "population_encod": 129, "receptive_field": [130, 131, 132, 133, 134, 262, 263, 264], "gaussian_kernel": 131, "spatial_receptive_field": 132, "spatial_receptive_fields_with_deriv": 133, "temporal_scale_distribut": 134, "regular": [135, 136, 137, 138, 265, 324], "regularize_step": 136, "spike_accumul": 137, "voltage_accumul": 138, "reset": 139, "signed_poisson_encod": 140, "signed_poisson_encode_step": 141, "spike_latency_encod": 142, "spike_latency_lif_encod": 143, "spikes_to_times_decod": [144, 268], "stdp": [145, 324], "stdp_sensor": 146, "stdp_sensor_step": 147, "stp_step": 148, "super_fn": 149, "superspik": 150, "test_coba_lif": 152, "test_decod": 153, "test_encod": [154, 272], "test_exp_filt": [155, 273], "test_heavisid": 156, "test_iaf": [157, 274], "test_izhikevich": [158, 275], "test_leaky_integr": [159, 276], "test_leaky_integrator_box": [160, 277], "test_lif": [161, 278], "test_lif_adex": [162, 279], "test_lif_adex_refrac": [163, 280], "test_lif_box": [164, 281], "test_lif_ex": [165, 283], "test_lif_mc": [166, 284], "test_lif_mc_refrac": [167, 285], "test_lif_refrac": [168, 286], "test_lift": [169, 287], "test_log": 170, "test_lsnn": [171, 288], "test_receptive_field": [172, 289], "test_regular": [173, 290], "test_spikes_to_times_decod": [174, 293], "test_stdp": 175, "test_stdp_sensor": 176, "test_superspik": 177, "test_threshold": 178, "test_tsodyks_makram": 179, "threshold": [180, 324], "triangle_fn": 181, "tsodyks_makram": 182, "model": [183, 184, 185, 186, 187, 188, 189, 190, 323, 324, 327, 328, 331, 332, 333, 335], "conv": [184, 197, 198], "mobilenet": 185, "test_conv": [187, 271], "test_mobilenet": 188, "test_vgg": 189, "vgg": 190, "modul": [191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294], "regularizationcel": 193, "sequentialst": 194, "cobalifcel": 196, "lconv2d": 198, "constantcurrentlifencod": 200, "poissonencod": 201, "poissonencoderstep": 202, "populationencod": 203, "signedpoissonencod": 204, "spikelatencyencod": 205, "spikelatencylifencod": 206, "exp_filt": 207, "iafcel": 209, "izhikevichcel": 214, "izhikevichrecurr": 215, "izhikevichrecurrentcel": 216, "izhikevichst": 218, "li": 220, "licel": 221, "lilinearcel": 222, "lifcel": 228, "lifrecurr": 230, "lifrecurrentcel": 231, "lifstat": 232, "lifadex": 234, "lifadexcel": 235, "lifadexrecurr": 236, "lifadexrecurrentcel": 237, "lifboxcel": 240, "lifex": 245, "lifexcel": 246, "lifexrecurr": 247, "lifexrecurrentcel": 248, "lifmcrecurrentcel": 250, "lifmcrefracrecurrentcel": 252, "lifrefraccel": 254, "lifrefracrecurrentcel": 255, "lsnncell": 259, "lsnnrecurr": 260, "lsnnrecurrentcel": 261, "spatialreceptivefield2d": 263, "temporalreceptivefield": 264, "sequenti": 266, "snn": [267, 331], "test_coba": 270, "test_lif_correl": 282, "test_sequenti": 291, "test_snn": 292, "test_train": 294, "util": [295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325], "clone": 296, "export_nir": 297, "import_nir": 298, "plot_heatmap_2d": 301, "plot_heatmap_3d": 302, "plot_histogram_2d": 303, "plot_izhikevich": 304, "plot_neuron_st": 305, "plot_scatter_3d": 306, "plot_spikes_2d": 307, "pytre": 308, "state": [309, 333, 335], "tensorboard": [310, 311, 312, 313, 314, 315, 316, 325], "hook_spike_activity_mean": 311, "hook_spike_activity_sum": 312, "hook_spike_histogram_mean": 313, "hook_spike_histogram_sum": 314, "hook_spike_imag": 315, "test_nir_export": 318, "test_nir_import": 319, "test_tensorboard": 320, "get": 322, "start": 322, "instal": [322, 329], "run": [322, 329, 334], "exampl": [322, 327, 331, 335], "advanc": 322, "us": 322, "opim": 322, "contribut": 322, "credit": 322, "citat": 322, "licens": 322, "contain": 323, "convolut": 323, "neuron": [323, 324, 327, 331, 332, 333, 335], "fire": [323, 324], "leaki": [323, 324], "box": [323, 324], "conduct": [323, 324], "base": [323, 324], "adapt": [323, 324], "exponenti": [323, 324], "multicompartment": [323, 324], "refract": 323, "refractori": [323, 324], "long": [323, 324], "short": [323, 324], "term": [323, 324], "recept": [323, 324], "field": [323, 324], "tempor": 324, "oper": 324, "mc": 324, "plastic": 324, "spike": [324, 331, 332], "time": [324, 331, 335], "depend": [324, 329], "tsodyk": 324, "markram": 324, "tdp": 324, "about": 326, "contact": 326, "acknowledg": 326, "develop": 327, "document": 327, "architectur": 327, "import": 327, "shortcut": 327, "comput": 327, "graph": 327, "implement": 327, "hardwar": 328, "acceler": [328, 329], "nest": 328, "requir": 329, "pip": 329, "from": 329, "conda": 329, "docker": 329, "sourc": 329, "option": 329, "notebook": 329, "gpu": 329, "troubleshoot": 329, "common": 329, "problem": [329, 335], "importerror": 329, "norse_op": 329, "so": 329, "undefin": 329, "symbol": 329, "zn2at5addmmerkns_6tensores2_s2_rkn3c106scalares6": 329, "unsatisfiableerror": 329, "The": 329, "follow": 329, "specif": 329, "were": 329, "found": 329, "incompat": 329, "each": 329, "other": 329, "paper": 330, "cite": 330, "paramet": [331, 334], "learn": [331, 335], "neural": 331, "network": 331, "defin": [331, 332], "vari": 331, "membran": 331, "constant": 331, "toi": 331, "train": 331, "small": 331, "recurr": 331, "load": 331, "defitinit": 331, "loop": 331, "evalu": 331, "conclus": 331, "introduct": 332, "system": 332, "simul": 332, "our": 332, "first": 332, "input": 332, "visual": 332, "voltag": 332, "quickstart": 333, "build": 333, "appli": 333, "bonu": 333, "predefin": 333, "cartpol": 334, "correl": 334, "experi": 334, "pytorch": 334, "lightn": 334, "speech": 334, "command": 334, "recognit": 334, "work": 335, "terminolog": 335, "event": 335, "action": 335, "potenti": 335, "dynam": 335, "workflow": 335, "decid": 335, "plasitici": 335, "deep": 335}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 56}})